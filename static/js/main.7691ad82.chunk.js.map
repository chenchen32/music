{"version":3,"sources":["api/api.js","components/homePage/actions.js","components/common/message/message.js","components/homePage/views/ImageSlider.js","components/homePage/actionTypes.js","components/homePage/views/Home.js","components/playListPage/actions.js","components/playListPage/actionTypes.js","utils.js","components/playListPage/views/PlayListItem.js","components/common/PageSelector.js","components/common/Loading.js","components/playListPage/views/PlayList.js","components/playListPage/status.js","components/playListPage/views/TagItem.js","components/playListPage/views/TagSelector.js","components/playListPage/views/icon.js","components/common/icon.js","components/searchPage/actions.js","components/searchPage/actionTypes.js","components/searchPage/views/SearchBar.js","components/common/message/views/icons.js","components/common/message/views/Message.js","components/common/message/views/MessageList.js","components/audioController/actions.js","components/audioController/actionTypes.js","components/audioController/views/icon.js","components/audioController/views/AudioController.js","components/audioController/views/SongItem.js","components/audioController/views/SongList.js","components/audioController/views/MusicController.js","components/searchPage/views/SearchItem.js","components/searchPage/views/SearchList.js","components/searchPage/views/SearchPage.js","components/searchPage/status.js","components/playListPage/views/AlbumDetail.js","components/playListPage/views/ModalPortal.js","components/playListPage/views/PlayListPage.js","components/NotFound.js","components/Menu.js","components/Footer.js","components/App.js","serviceWorker.js","Store.js","components/homePage/reducer.js","components/searchPage/reducer.js","components/playListPage/reducer.js","components/audioController/reducer.js","index.js"],"names":["MusicApi","queryObj","callback","_queryObj","Object","objectSpread","input","pageSize","page","company","path","concat","this","get","_queryObj2","category","_queryObj3","albumId","lrcUrl","Api","classCallCheck","baseUrl","name","ajax","abortObj","abort","bind","abortName","undefined","isPathEqualToUrl","url","args","method","data","abortRequest","request","_args","r","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","status","console","log","send","registerAbort","notification","ImageSlider","props","_this","possibleConstructorReturn","getPrototypeOf","call","handlerNextImage","assertThisInitialized","autoPlay","stopAutoPlay","handlerClickPoint","images","length","fetchImgInHomePage","step","lengthOfImages","indexOfNextImg","indexOfCurrentImg","changeTheIndexOfImg","event","Number","target","dataset","playNextImage","_this2","timerID","setInterval","clearInterval","index","_this3","widthOfSlider","offset","react_default","a","createElement","className","onMouseOver","onMouseOut","onClick","data-step","style","width","height","transform","map","value","key","src","picUrl","alt","getClassNameOfPoints","data-index","Component","connect","state","theState","homePageReducer","dispatch","getImgInHomePage","imgObj","JSON","parse","response","type","Home","views_ImageSlider","playListTagChange","tagName","timeFormat","seconds","m","String","Math","floor","s","saveCurrentSongIndexInLocalStorage","localStorage","setItem","stringify","saveSongToLocalStorage","songInfo","songList","getItem","push","getCurrentSongInfo","currentSongIndex","currentSongExtraInfo","initSongInfo","parseLyric","lyric","oneLyricInfo","indexOfTime","indexOf","oneLyric","slice","time","timeInfo","timeList","split","exp","pow","timeDeFormat","argsFromQuery","query","o","forEach","e","_e$split","_e$split2","slicedToArray","k","v","changeImgResolution","pixel","list","parseClass","classNames","classNameList","_i","_Object$keys","keys","c","join","PlayListItem","_this$props$itemInfo","itemInfo","id","coverImgUrl","coverThumbImgUrl","data-id","fetchAlbumDetailInfo","title","AlbumId","arguments","albumDetailInfo","playListResult","code","PageSelector","handleChangePage","isPreviousAndNextCanBeClicked","_this$props$selectorI","selectorInfo","totalPage","currentPage","getPageSelector","changePage","pushHistory","_this$props$selectorI2","previousCanNotBeClicked","nextCanNotBeClicked","previousClassName","nextClassName","previousAndNext","_previousAndNext","disabled","showMiddleTag","endPage","totalTagCount","result","i","lastList","startList","changingTagCount","end","unshift","toConsumableArray","Loading","container","document","querySelector","icon","viewBox","cx","cy","fill","ReactDOM","createPortal","PlayList","getSelectorInfo","params","location","search","activeTag","cat","fetchHotPlayList","decodeURI","prevProps","prevState","snapshot","newPage","history","common_Loading","views_PlayListItem","common_PageSelector","showHotPlayList","PlayListReducer","playListStatus","hotPlayList","playListLoadSuccess","playListPageChangePage","withRouter","TagItem","toggleShow","theTagTabs","Link","getClassName","to","tagChange","TagSelector","mainTags","styleTags","languageTags","senceTags","emotionTags","themeTags","mapTagToMain","语种","风格","场景","情感","主题","show","hide","clickOnBlankArea","onclick","nativeEvent","stopImmediatePropagation","setState","classNameOfIcon","select-icon","rotated","classNameOfTagsContainer","playlist-tags-container","hidden","classNameOfMainTag","playlist-main-tag","active-tag","d","pathname","views_TagItem","loadingIcon","inputChange","SearchBar","fillSearchContentInSearchBar","onSearch","onChange","onKeyPress","searchObj","searchContent","parseUrlGetSearchContent","searchInput","isEqualToOldSearchContent","isAtSearchPage","window","urlObj","getSearchUrl","trim","classNameOfBar","search-bar-container","before-searched","searchResult","placeholder","onKeyDown","SearchBarReducer","icons","loading","success","error","info","warning","Message","mapTypeToIcon","_this$props","content","MessageList","messages","removeMessage","Date","getTime","message","getMessageKey","setTimeout","duration","previousState","filter","onClose","react","views_Message","div","body","appendChild","render","views_MessageList","addMessage","destroy","unmountComponentAtNode","removeChild","createNotification","common_message_message","toggleSongListWindow","changeAudioStatus","changePlayMode","modeType","saveCurrentLyricIndex","currentLyricIndex","appendTheSong","deleteTheSong","songIndex","playTheSongInPage","playTheSongInList","playNextSong","loopStep","getLyric","getLyricFromNet","l","lyricList","lyricsArray","_loop","_parseLyric","repeatIndex","findIndex","theLyric","lyricBeforeTranslated","element","translatedLyric","clearTimeRepeat","isNaN","lyricItem","sort","prev","current","parseLyricArray","previousBtn","nextBtn","volumeBtn","listBtn","deleteBtn","AudioController","mapEnglishToChinese","loop","circle","random","isFirstLoad","volume","currentTime","isHoverOnSongSlider","isHoverOnVolumeBtn","isSliding","isVolumeSliding","audio","React","createRef","songSlider","volumeSlider","playOrPause","clickToSeek","mouseDownToSeek","mouseMoveToSeek","afterSeek","handleHover","changeToPlayNextSong","toggleSongList","hoverVolumeBtn","clickToChange","mouseDownToChange","mouseMoveToChange","afterChange","bindHotKey","addEventListener","currentSongInfo","lrc","play","parseLyricIndex","_this2$props","lengthOfSongList","playMode","ctrlKey","deltaTime","theLastLyricTime","lyricInfo","isStart","isNotEnd","currentLyric","getNextLyricIndex","currentSrc","AudioStatus","pause","classList","contains","_event$currentTarget$","currentTarget","getBoundingClientRect","left","clientX","add","requestAnimationFrame","seek","_this$songSlider$curr","dragPosition","toFixed","remove","_event$currentTarget$2","_this4","change","_this$volumeSlider$cu","toggle","modeList","nextModeType","_this5","_this$state","songPercentage","_this$props$currentSo","singer","pic","mode","playModeTitle","classNameOfController","audio-controller","playlist-opened","showSongListWindow","classNameOfSongSlider","song-slider","hover","classNameOfVolumeSlider","volume-bar","none-width","onMouseMove","ref","onMouseDown","data-mode","AudioReducer","SongItem","handlePlay","handlePause","currentSongId","_this$props$songInfo","isTheSongPlaying","color","getPlayButtonSvgInList","SongList","activeLyric","scrollTop","offsetTop","getTheActiveLyricOffset","classNameOfSongList","song-list","backgroundImage","views_SongItem","classNameOfLyric","lyric-item","active","MusicController","views_AudioController","views_SongList","actions","SearchItem","handleAppend","copyright","_this$props$result","isOdd","classNameOfItem","search-item-container","odd","getPlayOrPauseButtonSvg","SearchList","ar","artist","privilege","dt","al","fl","totalCount","songCount","ceil","searchPage","searchData","songs","num","views_SearchItem","dataCleaning","SearchPage","fetchSearchResult","views_SearchList","views_SearchBar","showSearchResult","AlbumDetail","isAllDescriptionShowed","descriptionToggle","getPageSelectorInfo","trackCount","albumPageSize","albumCurrentPage","description","start","dataOfShowedAlbums","tracks","classNameOfAlbumInfo","album-list-info","all-description-showed","classNameOfDescription","album-list-description","fetchedData","artists","album","blurPicUrl","albumChangePage","ModalPortal","deleteDetailInfo","albumStatus","deleteItemDetail","views_AlbumDetail","showAlbumList","albumDetail","PlayListPage","views_TagSelector","views_PlayList","views_ModalPortal","NotFound","Menu","_this$props$searchBar","searchBar","searchPath","menus","text","playList","href","isCurrent","currentPathname","ownProps","Footer","App","BrowserRouter","basename","process","Fragment","components_Menu","Switch","Route","exact","component","components_Footer","audioController_views_MusicController","Boolean","hostname","match","initValue","loadSongListInLocalStorage","loadCurrentSongIndexInLocalStorage","reducerObj","action","cloneList","every","deleteSongIndex","listLength","splice","deleteSongInLocalStorage","justOneSong","isCurrentSong","isTheLastSong","beforeCurrentSong","updateCurrentSongIndex","updateCurrentLyric","song","LengthOfSongList","nextSongIndex","parseInt","reducer","combineReducers","middleware","thunkMiddleware","storeEnhancers","composeWithDevTools","applyMiddleware","apply","Store","createStore","app","es","store","src_components_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7691ad82.chunk.js","sourcesContent":["const ajax = function(args, callback) {\r\n    let {method, url, data} = {...args}\r\n    let r = new XMLHttpRequest()\r\n    r.open(method, url, true)\r\n    // r.setRequestHeader('Content-Type', 'application/json')\r\n    r.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded')\r\n    r.onreadystatechange = () => {\r\n        if (r.readyState === 4) {\r\n            if ((r.status >= 200 && r.status < 300) || r.status === 304) {\r\n                callback(r)\r\n            } else {\r\n                console.log('error')\r\n            }\r\n        }\r\n    }\r\n    r.send(data)\r\n    return r\r\n}\r\n\r\nclass Api {\r\n    constructor() {\r\n        this.baseUrl = 'https://v1.itooi.cn/'\r\n    }\r\n\r\n    registerAbort(name, ajax) {\r\n        MusicApi.abortObj[name] = ajax.abort.bind(ajax)\r\n    }\r\n\r\n    abortRequest(abortName) {\r\n        let isRequesting = MusicApi.abortObj[abortName] !== undefined\r\n        if (isRequesting) {\r\n            MusicApi.abortObj[abortName]()\r\n        }\r\n    }\r\n\r\n    get(path, callback, abortName, isPathEqualToUrl) {\r\n        let method = 'GET'\r\n        let url = this.baseUrl + path\r\n        if (isPathEqualToUrl) {\r\n            url = path\r\n        }\r\n        let args = {\r\n            method,\r\n            url,\r\n            data: null,\r\n        }\r\n        this.abortRequest(abortName)\r\n        let request = ajax(args, callback)\r\n        this.registerAbort(abortName, request)\r\n    }\r\n}\r\n\r\nclass MusicApi extends Api {\r\n    searchResult(queryObj, callback) {\r\n        let {input, pageSize, page, company} = {...queryObj}\r\n        let path = `${company}/search?keyword=${input}&type=song&pageSize=${pageSize}&page=${(page - 1) * pageSize}`\r\n        // 如果需要源数据，加上 &format=1\r\n        let abortName = 'searchResult'\r\n        this.get(path, callback, abortName)\r\n    }\r\n\r\n    hotPlayList(queryObj, callback) {\r\n        let {category, pageSize, page, company} = {...queryObj}\r\n        let path = `${company}/songList/hot?categoryType=${category}&pageSize=${pageSize}&page=${(page - 1) * pageSize}`\r\n        let abortName = 'hotPlayList'\r\n        this.get(path, callback, abortName)\r\n    }\r\n\r\n    albumDetailInfo(queryObj, callback) {\r\n        let {albumId, company} = {...queryObj}\r\n        let path = `${company}/songList?id=${albumId}`\r\n        let abortName = 'albumDetail'\r\n        this.get(path, callback, abortName)\r\n    }\r\n\r\n    // getSong() {\r\n    //     let abortName = 'getSong'\r\n    //     this.get()\r\n    // }\r\n\r\n    getLyric(lrcUrl, callback) {\r\n        let abortName = 'getLyric'\r\n        this.get(lrcUrl, callback, abortName, true)\r\n    }\r\n\r\n    getImgInHomePage(callback) {\r\n        let url = 'https://v1.itooi.cn/netease/banner'\r\n        let abortName = 'getImgInHomePage'\r\n        this.get(url, callback, abortName, true)\r\n    }\r\n}\r\n\r\nMusicApi.abortObj = {}\r\n\r\nexport {\r\n    MusicApi,\r\n}","import * as homePage from './actionTypes'\r\nimport {MusicApi} from '../../api/api.js'\r\n\r\nexport const getImgInHomePage = (imgObj) => ({\r\n    type: homePage.GET_HOMEPAGE_IMG,\r\n    imgObj,\r\n})\r\n\r\nexport const changeTheIndexOfImg = (index) => ({\r\n    type: homePage.CHANGE_THE_INDEX_OF_IMG,\r\n    index,\r\n})\r\n\r\nexport const fetchImgInHomePage = () => {\r\n    return (dispatch) => {\r\n        let api = new MusicApi()\r\n        api.getImgInHomePage((r) => {\r\n            let imgObj = JSON.parse(r.response).data\r\n            dispatch(getImgInHomePage(imgObj))\r\n            console.log('轮播图信息', imgObj)\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport MessageList from './views/MessageList'\r\n\r\nconst createNotification = () => {\r\n    const div = document.createElement('div')\r\n    document.body.appendChild(div)\r\n    const notification = ReactDOM.render(<MessageList />, div)\r\n    return {\r\n        addMessage(message) {\r\n            return notification.addMessage(message)\r\n        },\r\n        destroy() {\r\n            ReactDOM.unmountComponentAtNode(div)\r\n            document.body.removeChild(div)\r\n        }\r\n    }\r\n}\r\n\r\nlet notification\r\nconst message = (type, content, duration = 2000, onClose) => {\r\n    if (!notification) {\r\n        notification = createNotification()\r\n    }\r\n    return notification.addMessage({ type, content, duration, onClose })\r\n}\r\n\r\nexport default {\r\n    info(content, duration, onClose) {\r\n        return message('info', content, duration, onClose)\r\n    },\r\n    success(content, duration, onClose) {\r\n        return message('success', content, duration, onClose)\r\n    },\r\n    warning(content, duration, onClose) {\r\n        return message('warning', content, duration, onClose)\r\n    },\r\n    error(content, duration, onClose) {\r\n        return message('error', content, duration, onClose)\r\n    },\r\n    loading(content, duration = 0, onClose) {\r\n        return message('loading', content, duration, onClose)\r\n    }\r\n}\r\n","import React, { Component } from \"react\"\r\nimport {connect} from 'react-redux'\r\nimport {fetchImgInHomePage, changeTheIndexOfImg} from '../actions'\r\n\r\nclass ImageSlider extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.handlerNextImage = this.handlerNextImage.bind(this)\r\n        this.autoPlay = this.autoPlay.bind(this)\r\n        this.stopAutoPlay = this.stopAutoPlay.bind(this)\r\n        this.handlerClickPoint = this.handlerClickPoint.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.images.length === 0) {\r\n            this.props.fetchImgInHomePage()\r\n        }\r\n        this.autoPlay()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.stopAutoPlay()\r\n    }\r\n\r\n    playNextImage(step) {\r\n        let lengthOfImages = this.props.images.length\r\n        let indexOfNextImg = (this.props.indexOfCurrentImg + step + lengthOfImages) % lengthOfImages\r\n        this.props.changeTheIndexOfImg(indexOfNextImg)\r\n    }\r\n\r\n    handlerNextImage(event) {\r\n        let step = Number(event.target.dataset.step)\r\n        this.playNextImage(step)\r\n    }\r\n\r\n    autoPlay() {\r\n        this.timerID = setInterval(() => {\r\n            this.playNextImage(1)\r\n        }, 5000)\r\n    }\r\n\r\n    stopAutoPlay() {\r\n        clearInterval(this.timerID)\r\n    }\r\n\r\n    getClassNameOfPoints(index) {\r\n        return index === this.props.indexOfCurrentImg? 'slide-point active-point' : 'slide-point'\r\n    }\r\n\r\n    handlerClickPoint(event) {\r\n        let index = Number(event.target.dataset.index)\r\n        this.props.changeTheIndexOfImg(index)\r\n    }\r\n\r\n    render() {\r\n        let widthOfImg = 730\r\n        let heightOfSlider = 336\r\n        let images = this.props.images || []\r\n        let widthOfSlider = images.length * widthOfImg\r\n        let offset = -(this.props.indexOfCurrentImg % widthOfSlider) * widthOfImg || 0\r\n        return(\r\n            <div className='image-slider' onMouseOver={this.stopAutoPlay} onMouseOut={this.autoPlay}>\r\n                <button className='slide-button slide-left vertical-center' onClick={this.handlerNextImage} data-step=\"-1\">&lt;</button>\r\n                <div className='image-slider-container' style={{width: widthOfSlider, height: heightOfSlider, transform: `translate3d(${offset}px, 0px, 0px)`}}>\r\n                    {\r\n                        images.map((value, index) => (\r\n                            <img key={index} src={value.picUrl} alt=\"轮播图\" />\r\n                        ))\r\n                    }\r\n                </div>\r\n                <button className='slide-button slide-right vertical-center' onClick={this.handlerNextImage} data-step=\"1\">&gt;</button>\r\n                <div className='slide-point-container'>\r\n                    {\r\n                        images.map((value, index) => (\r\n                            <span className={this.getClassNameOfPoints(index)} key={index} data-index={index} onClick={this.handlerClickPoint}> </span>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    let theState = state.homePageReducer\r\n    return {\r\n        images: theState.images,\r\n        indexOfCurrentImg: theState.indexOfCurrentImg,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchImgInHomePage: () => {\r\n            dispatch(fetchImgInHomePage())\r\n        },\r\n        changeTheIndexOfImg: (index) => {\r\n            dispatch(changeTheIndexOfImg(index))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ImageSlider)","export const GET_HOMEPAGE_IMG = 'HOMEPAGE/GET_IMG'\r\nexport const CHANGE_THE_INDEX_OF_IMG = 'HOMEPAGE/CHANGE_THE_INDEX_OF_IMG'","import React, { Component } from 'react'\nimport ImageSlider from \"./ImageSlider\"\nimport './Home.css'\n\nclass Home extends Component {\n    render() {\n        return (\n            <div>\n                <ImageSlider />\n            </div>\n        )\n    }\n}\n\nexport default Home\n","import * as playList from './actionTypes.js'\r\nimport {MusicApi} from '../../api/api.js'\r\n\r\n// 热门歌单标签切换\r\nexport const playListTagChange = (tagName) => ({\r\n    type: playList.PLAYLIST_TAG_CHANGE,\r\n    tagName\r\n    })\r\n\r\n// 开始加载歌单具体信息\r\nexport const loadItemDetailStarted = () => ({\r\n    type: playList.LOAD_ITEM_DETAIL_STARTED,\r\n})\r\n\r\n// 加载歌单具体信息成功\r\nexport const loadItemDetailSuccess = (albumDetailInfo) => ({\r\n    type: playList.LOAD_ITEM_DETAIL_SUCCESS,\r\n    albumDetailInfo\r\n})\r\n\r\n// 删除歌单具体信息，即初始化模态弹窗\r\nexport const deleteItemDetail = () => {\r\n    MusicApi.abortObj.albumDetail()\r\n    return {\r\n    type: playList.DELETE_ITEM_DETAIL,\r\n    }\r\n}\r\n\r\n// 热门歌单列表开始加载\r\nexport const playListLoadStarted = () => ({\r\n    type: playList.PLAYLIST_LOAD_STARTED,\r\n})\r\n\r\n// 热门歌单列表加载成功\r\nexport const playListLoadSuccess = (playListResult) => ({\r\n    type: playList.PLAYLIST_LOAD_SUCCESS,\r\n    playListResult,\r\n})\r\n\r\n// 热门歌单列表加载成功\r\nexport const playListLoadFailure = () => ({\r\n    type: playList.PLAYLIST_LOAD_FAILURE,\r\n})\r\n\r\nexport const playListPageChangePage = (page) => ({\r\n    type: playList.PLAYLIST_PAGE_CHANGE,\r\n    page,\r\n})\r\n\r\nexport const albumChangePage = (page) => ({\r\n    type: playList.ALBUM_PAGE_CHANGE,\r\n    page,\r\n})\r\n\r\n// 异步加载热门歌单列表\r\nexport const fetchHotPlayList = (category=\"全部\", page=1, pageSize=60, company='netease') => {\r\n    return (dispatch) => {\r\n        let queryObj = {\r\n            category,\r\n            pageSize,\r\n            page,\r\n            company,\r\n        }\r\n        dispatch(playListLoadStarted())\r\n        let api = new MusicApi()\r\n        api.hotPlayList(queryObj, (r) => {\r\n            let playListResult = JSON.parse(r.response)\r\n            console.log('加载热门歌单列表完成', playListResult)\r\n            if (playListResult.code === 200) {\r\n                dispatch(playListLoadSuccess(playListResult.data))\r\n            } else {\r\n                dispatch(playListLoadFailure())\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n// 加载歌单具体信息\r\nexport const fetchAlbumDetailInfo = (albumId, company='netease') => {\r\n    console.log('albumId', albumId)\r\n    return (dispatch) => {\r\n        let args = {\r\n            albumId,\r\n            company,\r\n        }\r\n        dispatch(loadItemDetailStarted())\r\n        let api = new MusicApi()\r\n        api.albumDetailInfo(args, (r) => {\r\n            let playListResult = JSON.parse(r.response)\r\n            console.log('加载歌单完成', playListResult)\r\n            if (playListResult.code === 200) {\r\n                dispatch(loadItemDetailSuccess(playListResult))\r\n            } else {\r\n                dispatch(playListLoadFailure())\r\n            }\r\n        })\r\n    }\r\n}","export const PLAYLIST_TAG_CHANGE = \"PAGE/PLAYLIST_TAG_CHANGE\"\r\n\r\nexport const LOAD_ITEM_DETAIL_STARTED = \"PAGE/LOAD_ITEM_DETAIL_STARTED\"\r\n\r\nexport const LOAD_ITEM_DETAIL_SUCCESS = \"PAGE/LOAD_ITEM_DETAIL_SUCCESS\"\r\n\r\nexport const DELETE_ITEM_DETAIL = 'PAGE/DELETE_ITEM_DETAIL'\r\n\r\nexport const PLAYLIST_LOAD_STARTED = 'PAGE/PLAYLIST_LOAD_STARTED'\r\n\r\nexport const PLAYLIST_LOAD_SUCCESS = 'PAGE/LIST_LOAD_SUCCESS'\r\n\r\nexport const PLAYLIST_LOAD_FAILURE = 'PAGE/PLAYLIST_LOAD_FAILURE'\r\n\r\nexport const PLAYLIST_PAGE_CHANGE = 'PAGE/PLAYLIST_PAGE_CHANGE'\r\n\r\nexport const ALBUM_PAGE_CHANGE = 'PAGE/ALBUM_PAGE_CHANGE'","export const timeFormat = function(seconds) {\r\n    if (!seconds) {\r\n        return '00:00'\r\n    }\r\n    let m = String(Math.floor(seconds / 60))\r\n    let s = String(Math.floor(seconds % 60))\r\n    if (s.length === 1) {\r\n        s = \"0\" + s\r\n    }\r\n    if (m.length === 1) {\r\n        m = \"0\" + m\r\n    }\r\n    return `${m}:${s}`\r\n}\r\n\r\nexport const timeDeFormat = (timeInfo) => {\r\n    let timeList = timeInfo.split(':')\r\n    let length = timeList.length\r\n    let time = 0\r\n    timeList.map((value, index) => {\r\n        let exp = length - index - 1\r\n        time += value * 60 ** exp\r\n        return 0\r\n    })\r\n    return time\r\n}\r\n\r\nexport const loadCurrentSongIndexInLocalStorage = () => {\r\n    let currentSongIndex = JSON.parse(localStorage.getItem('currentSongIndex'))\r\n    if (currentSongIndex === null) {\r\n        currentSongIndex = -1\r\n    }\r\n    return currentSongIndex\r\n}\r\n\r\nexport const saveCurrentSongIndexInLocalStorage = (index) => {\r\n    localStorage.setItem('currentSongIndex', JSON.stringify(index))\r\n}\r\n\r\nexport const loadSongListInLocalStorage = () => {\r\n    let songList = JSON.parse(localStorage.getItem('songList'))\r\n    if (songList === null) {\r\n        songList = []\r\n    }\r\n    return songList\r\n}\r\n\r\nexport const saveSongToLocalStorage = (songInfo) => {\r\n    let songList = JSON.parse(localStorage.getItem('songList'))\r\n    if (songList === null) {\r\n        songList = []\r\n    }\r\n    songList.push(songInfo)\r\n    localStorage.setItem('songList', JSON.stringify(songList))\r\n}\r\n\r\nexport const deleteSongInLocalStorage = (songIndex) => {\r\n    let songList = JSON.parse(localStorage.getItem('songList'))\r\n    songList.splice(songIndex, 1)\r\n    localStorage.setItem('songList', JSON.stringify(songList))\r\n}\r\n\r\nexport const getCurrentSongInfo = (theState) => {\r\n    let songList = theState.songList\r\n    let currentSongIndex = theState.currentSongExtraInfo.currentSongIndex\r\n    let currentSongInfo = {}\r\n    if (currentSongIndex === -1) {\r\n        currentSongInfo = theState.initSongInfo\r\n    } else {\r\n        currentSongInfo = songList[currentSongIndex]\r\n    }\r\n    return currentSongInfo\r\n}\r\n\r\nconst clearTimeRepeat = (lyricList, repeatIndex, lyricBeforeTranslated) => {\r\n    let result = lyricList\r\n    let element = result[repeatIndex].lyric\r\n    if (element === '...') {\r\n        result[repeatIndex].lyric = lyricBeforeTranslated\r\n    } else {\r\n        result[repeatIndex].translatedLyric = element\r\n        result[repeatIndex].lyric = lyricBeforeTranslated\r\n    }\r\n}\r\n\r\nconst parseLyric = (lyric) => {\r\n    let oneLyricInfo = lyric\r\n    let indexOfTime = oneLyricInfo.indexOf(']')\r\n    let oneLyric = oneLyricInfo.slice(indexOfTime + 1)\r\n    let timeInfo = oneLyricInfo.slice(1, indexOfTime)\r\n    let time = timeDeFormat(timeInfo)\r\n    return {\r\n        oneLyric,\r\n        time\r\n    }\r\n}\r\n\r\nexport const parseLyricArray = (lyricsArray) => {\r\n    let result = []\r\n    for (let i = 0; i < lyricsArray.length; i++) {\r\n        let oneLyricInfo = lyricsArray[i]\r\n        let {oneLyric, time} = parseLyric(oneLyricInfo)\r\n        let repeatIndex = result.findIndex((theLyric) => {\r\n            return theLyric.time === time\r\n        })\r\n        let isTimeRepeat = repeatIndex !== -1\r\n        if (isTimeRepeat) {\r\n            clearTimeRepeat(result, repeatIndex, oneLyric)\r\n        } else {\r\n            if (isNaN(time)) {\r\n                continue\r\n            }\r\n            if (oneLyric === '') {\r\n                oneLyric = '...'\r\n            }\r\n            let lyricItem = {\r\n                time,\r\n                lyric: oneLyric,\r\n                translatedLyric: null,\r\n            }\r\n            result.push((lyricItem))\r\n        }\r\n    }\r\n    result.sort((prev, current) => prev.time - current.time)\r\n    return result\r\n}\r\n\r\nexport const argsFromQuery = (query) => {\r\n    if (query[0] === '?') {\r\n        query = query.slice(1)\r\n    }\r\n    let o = {}\r\n    if (query.length === 0) {\r\n        return o\r\n    }\r\n    query.split('&').forEach(e => {\r\n        let [k, v] = e.split('=')\r\n        o[k] = v\r\n    })\r\n    return o\r\n}\r\n\r\nexport const changeImgResolution = (url, pixel) => {\r\n    if (!url) {\r\n        return url\r\n    }\r\n    let list = url.split('?')\r\n    return `${list[0]}?param=${pixel}y${pixel}`\r\n}\r\n\r\nexport const parseClass = (classNames) => {\r\n    let classNameList = []\r\n    for (let c of Object.keys(classNames)) {\r\n        let isExist = classNames[c]\r\n        if (isExist) {\r\n            classNameList.push(c)\r\n        }\r\n    }\r\n    return classNameList.join(' ')\r\n}","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {fetchAlbumDetailInfo} from '../actions'\r\nimport {changeImgResolution} from '../../../utils'\r\n\r\nclass PlayListItem extends Component {\r\n\r\n    render() {\r\n        let {id, name, coverImgUrl} = {...this.props.itemInfo}\r\n        let coverThumbImgUrl = changeImgResolution(coverImgUrl, 400)\r\n        return (\r\n            <div className=\"album-container\">\r\n                <div className=\"album-img\" data-id={id} onClick={this.props.fetchAlbumDetailInfo.bind(this, id)}>\r\n                    <img src={coverThumbImgUrl} alt=\"歌单封面\"/>\r\n                </div>\r\n                <div className=\"album-info\" title={name}>\r\n                    <span>{name}</span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchAlbumDetailInfo: (AlbumId) => {\r\n            dispatch(fetchAlbumDetailInfo(AlbumId))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(PlayListItem)","import React, {Component} from 'react'\r\nimport './common.css'\r\n\r\nclass PageSelector extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.handleChangePage = this.handleChangePage.bind(this)\r\n        this.isPreviousAndNextCanBeClicked = this.isPreviousAndNextCanBeClicked.bind(this)\r\n    }\r\n\r\n    static getPageSelector (endPage, currentPage, totalTagCount) {\r\n        if (endPage <= totalTagCount) {\r\n            let result = []\r\n            for (let i = 1; i <= endPage; i++) {\r\n                result.push(i)\r\n            }\r\n            return result\r\n        }\r\n        let list = []\r\n        let lastList = []\r\n        let startList = []\r\n        let changingTagCount = totalTagCount - 3\r\n        let start = currentPage - changingTagCount/ 2\r\n        let end = currentPage + changingTagCount / 2\r\n        for (let i = start; i <= end; i++) {\r\n            if (i <= 1) {\r\n                lastList.push(changingTagCount + i + 1)\r\n            } else if (i >= endPage) {\r\n                startList.push(i - changingTagCount - 1)\r\n            } else {\r\n                list.push(i)\r\n            }\r\n        }\r\n        let result = [...startList,...list,...lastList]\r\n        if (result[0] !== 2) {\r\n            result.unshift('...')\r\n        }\r\n        if (result[result.length - 1] < endPage - 1) {\r\n            result.push('...')\r\n        }\r\n        result = [1, ...result, endPage]\r\n        return result\r\n    }\r\n\r\n    showMiddleTag() {\r\n        let {totalPage, currentPage} = {...this.props.selectorInfo}\r\n        if (totalPage === 0) {\r\n            return\r\n        }\r\n        let pageList = PageSelector.getPageSelector(totalPage, currentPage, 9)\r\n        return pageList.map((page, index) => {\r\n            if (page === '...') {\r\n                return (\r\n                    <span className=\"page-selector-ellipsis\" key={index}>...</span>\r\n                )\r\n            } else if (page === currentPage) {\r\n                return (\r\n                    <button className=\"page-selector-current page-selector-tag page-btn\" key={index}>{page}</button>\r\n                )\r\n            } else {\r\n                return (\r\n                    <button className=\"page-selector-tag page-btn\" key={index} onClick={this.handleChangePage(page)}>{page}</button>\r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n    handleChangePage(page) {\r\n        return () => {\r\n            this.props.changePage(page)\r\n            if (this.props.pushHistory) {\r\n                this.props.pushHistory(page)\r\n            }\r\n        }\r\n    }\r\n\r\n    isPreviousAndNextCanBeClicked() {\r\n        let {totalPage, currentPage} = {...this.props.selectorInfo}\r\n        let previousCanNotBeClicked = false\r\n        let nextCanNotBeClicked = false\r\n        if (totalPage === 1) {\r\n            previousCanNotBeClicked = true\r\n            nextCanNotBeClicked = true\r\n        }\r\n        if (currentPage === 1) {\r\n            previousCanNotBeClicked = true\r\n        } else if (currentPage === totalPage) {\r\n            nextCanNotBeClicked = true\r\n        }\r\n        let previousClassName = previousCanNotBeClicked ? 'previous-ban-click' : 'previous-can-click'\r\n        let nextClassName = nextCanNotBeClicked ? 'next-ban-click' : 'next-can-click'\r\n        return {\r\n            previousCanNotBeClicked,\r\n            nextCanNotBeClicked,\r\n            previousClassName,\r\n            nextClassName,\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let {currentPage} = {...this.props.selectorInfo}\r\n        let previousAndNext = this.isPreviousAndNextCanBeClicked()\r\n        let {previousCanNotBeClicked, nextCanNotBeClicked, previousClassName, nextClassName} = {...previousAndNext}\r\n        return (\r\n            <div className=\"page-selector\">\r\n                <button className={`${previousClassName} page-btn`} disabled={previousCanNotBeClicked} onClick={this.handleChangePage(currentPage - 1)}>&lt;</button>\r\n                {this.showMiddleTag()}\r\n                <button className={`${nextClassName} page-btn`} disabled={nextCanNotBeClicked} onClick={this.handleChangePage(currentPage + 1)}>&gt;</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PageSelector","import React from 'react'\r\nimport ReactDOM from \"react-dom\"\r\n\r\nconst Loading = () => {\r\n    let container = document.querySelector('#loading-container')\r\n    let icon = (\r\n        <div className=\"loading-container\">\r\n            <svg className=\"load\" viewBox=\"25 25 50 50\">\r\n                <circle className=\"loading\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\">\r\n                </circle>\r\n            </svg>\r\n        </div>\r\n    )\r\n\r\n    return ReactDOM.createPortal(icon, container)\r\n}\r\n\r\nexport default Loading","import React, { Component } from 'react'\r\nimport * as Status from '../status'\r\nimport {connect} from 'react-redux'\r\nimport {fetchHotPlayList, playListTagChange, playListPageChangePage} from '../actions'\r\nimport {withRouter} from 'react-router-dom'\r\nimport PlayListItem from './PlayListItem'\r\nimport {argsFromQuery} from '../../../utils'\r\nimport PageSelector from '../../common/PageSelector'\r\nimport Loading from \"../../common/Loading\"\r\n\r\nclass PlayList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.pushHistory = this.pushHistory.bind(this)\r\n        this.getSelectorInfo = this.getSelectorInfo.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.status !== 'success') {\r\n            let params = argsFromQuery(this.props.location.search)\r\n            let activeTag = params.cat\r\n            let page = params.page\r\n            this.props.fetchHotPlayList(activeTag, page)\r\n            this.props.playListTagChange(decodeURI(activeTag))\r\n            this.props.changePage(page)\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.location !== prevProps.location) {\r\n            let params = argsFromQuery(this.props.location.search)\r\n            let activeTag = params.cat\r\n            let page = params.page\r\n            this.props.fetchHotPlayList(activeTag, page)\r\n        }\r\n    }\r\n\r\n    pushHistory(newPage) {\r\n        this.props.history.push(`playlist?cat=${this.props.activeTag}&page=${newPage}`)\r\n    }\r\n\r\n    getSelectorInfo() {\r\n        return {\r\n            totalPage: this.props.totalPage,\r\n            currentPage: Number(this.props.currentPage),\r\n        }\r\n    }\r\n\r\n    showHotPlayList() {\r\n        switch (this.props.status) {\r\n            case Status.LOADING: {\r\n                return (\r\n                    <Loading />\r\n                )\r\n            }\r\n            case Status.SUCCESS: {\r\n                let playListResult = this.props.playListResult\r\n                return (\r\n                    <div className=\"playlist-result\">\r\n                        {playListResult.map((value, index) => {\r\n                            return <PlayListItem key={index} itemInfo={value} />\r\n                        })}\r\n                        <PageSelector selectorInfo={this.getSelectorInfo()} changePage={this.props.changePage} pushHistory={this.pushHistory}/>\r\n                    </div>\r\n                )\r\n            }\r\n            case Status.FAILURE: {\r\n                return (\r\n                    <div className=\"failed-container\">热门歌单加载失败</div>\r\n                )\r\n            }\r\n            default: {\r\n                return (\r\n                    <div>PlayList</div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.showHotPlayList()\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateTopProps = (state) => {\r\n    let theState = state.PlayListReducer\r\n    return {\r\n        status: theState.playListStatus,\r\n        playListResult: theState.playListResult,\r\n        activeTag: theState.activeTag,\r\n        currentPage: theState.currentPage,\r\n        pageSize: theState.pageSize,\r\n        totalPage: theState.totalPage,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchHotPlayList: (category, page) => {\r\n            dispatch(fetchHotPlayList(category, page))\r\n        },\r\n        playListTagChange: (tagName) => {\r\n            dispatch(playListTagChange(tagName))\r\n        },\r\n        changePage: (page) => {\r\n            dispatch(playListPageChangePage(page))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateTopProps, mapDispatchToProps)(withRouter(PlayList))","export const INIT = ''\r\nexport const LOADING = 'loading'\r\nexport const SUCCESS = 'success'\r\nexport const FAILURE = 'failure'","import React, { Component } from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nimport {connect} from 'react-redux'\r\nimport {playListTagChange} from \"../actions\"\r\n\r\nclass TagItem extends Component {\r\n\r\n    tagChange(value) {\r\n        this.props.playListTagChange(value)\r\n        this.props.toggleShow()\r\n    }\r\n\r\n    getClassName(value) {\r\n        return this.props.activeTag === value ? \"playlist-tag active-tag\" : \"playlist-tag\"\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"playlist-tag-tabs\">\r\n                {\r\n                    this.props.theTagTabs.map((value, index) => (\r\n                        <Link key={index} className={this.getClassName(value)} to={`/playlist?cat=${value}&page=1`} onClick={this.tagChange.bind(this, value)}>{value}</Link>\r\n                    ))\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateTopProps = (state) => {\r\n    let theState = state.PlayListReducer\r\n    return {\r\n        activeTag: theState.activeTag\r\n    }\r\n}\r\n\r\nconst mapDispatchTopProps = (dispatch) => {\r\n    return {\r\n        playListTagChange: (tagName) => {\r\n            dispatch(playListTagChange(tagName))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateTopProps, mapDispatchTopProps)(TagItem)","import React, { Component } from 'react'\r\nimport {playListTagChange} from '../actions'\r\nimport {connect} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport TagItem from './TagItem'\r\nimport {getSelectIcon} from './icon'\r\nimport {parseClass} from \"../../../utils\"\r\n\r\nclass TagSelector extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.mainTags = ['语种', '风格', '场景', '情感', '主题']\r\n        this.styleTags = ['流行', '摇滚', '民谣', '电子', '舞曲', '说唱', '轻音乐', '爵士', '乡村', 'R&B/Soul', '古典', '民族', '英伦', '金属', '朋克', '蓝调', '雷鬼', '拉丁', '古风', 'Bossa Nova']\r\n        this.languageTags = ['华语', '欧美', '日语', '韩语', '粤语', '小语种']\r\n        this.senceTags = ['清晨', '夜晚', '学习', '工作', '午休', '下午茶', '地铁', '驾车', '运动', '旅行', '散步', '酒吧']\r\n        this.emotionTags = ['怀旧', '清新', '浪漫', '性感', '伤感', '治愈', '放松', '孤独', '感动', '兴奋', '快乐', '安静', '思念']\r\n        this.themeTags = ['影视原声', 'ACG', '儿童', '校园', '游戏', '70后', '80后', '90后', '网络歌曲', 'KTV', '经典', '翻唱', '吉他', '钢琴', '器乐', '榜单', '00后']\r\n        this.mapTagToMain = {\r\n            '语种': this.languageTags,\r\n            '风格': this.styleTags,\r\n            '场景': this.senceTags,\r\n            '情感': this.emotionTags,\r\n            '主题': this.themeTags\r\n        }\r\n        this.state = {\r\n            show: false\r\n        }\r\n\r\n        this.toggleShow = this.toggleShow.bind(this)\r\n        this.hide = this.hide.bind(this)\r\n        this.clickOnBlankArea = this.clickOnBlankArea.bind(this)\r\n        document.onclick = this.hide\r\n    }\r\n\r\n    tagChange(value) {\r\n        this.props.playListTagChange(value)\r\n        this.toggleShow()\r\n    }\r\n\r\n    clickOnBlankArea(e) {\r\n        e.nativeEvent.stopImmediatePropagation()\r\n    }\r\n\r\n    toggleShow(e) {\r\n        this.setState((state) => ({\r\n            show: !state.show,\r\n        }))\r\n        if (e !== undefined) {\r\n            e.nativeEvent.stopImmediatePropagation()\r\n        }\r\n    }\r\n\r\n    hide() {\r\n        this.setState({\r\n            show: false\r\n        })\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.setState = () => {\r\n            return false\r\n        }\r\n    //  防止组件卸载的时候调用 setState 导致 react 报错\r\n    }\r\n\r\n    render() {\r\n        let classNameOfIcon = parseClass({\r\n            'select-icon': true,\r\n            'rotated': this.state.show,\r\n        })\r\n        let classNameOfTagsContainer = parseClass({\r\n            'playlist-tags-container': true,\r\n            'hidden': !this.state.show\r\n        })\r\n        let classNameOfMainTag = parseClass({\r\n            'playlist-main-tag': true,\r\n            'active-tag': this.props.activeTag === '全部',\r\n        })\r\n        return (\r\n            <div className=\"playlist-tags\">\r\n                <span className=\"active-tag-name\" >{this.props.activeTag}</span>\r\n                <span className=\"select-tag-button\" onClick={this.toggleShow}>\r\n                    {this.state.show ? '收起 ' : '展开 '}\r\n                    {getSelectIcon(classNameOfIcon)}\r\n                </span>\r\n                <div className={classNameOfTagsContainer} onClick={this.clickOnBlankArea}>\r\n                    <Link className={classNameOfMainTag}\r\n                          to={{pathname: 'playlist', search: '?cat=全部&page=1'}}\r\n                          onClick={this.tagChange.bind(this, '全部')}\r\n                    >\r\n                        全部\r\n                    </Link>\r\n                    {this.mainTags.map((value, index) => {\r\n                        let theTagTabs = this.mapTagToMain[value]\r\n                        return(\r\n                            <div key={index} className=\"playlist-tag-container\">\r\n                                <div className=\"playlist-tag-class\">{value}</div>\r\n                                <TagItem theTagTabs={theTagTabs} toggleShow={this.toggleShow}/>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateTopProps = (state) => {\r\n    let theState = state.PlayListReducer\r\n    return {\r\n        activeTag: theState.activeTag\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        playListTagChange: (tagName) => {\r\n            dispatch(playListTagChange(tagName))\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateTopProps, mapDispatchToProps)(TagSelector)","import React from \"react\"\r\n\r\nconst getSelectIcon = (className) => (\r\n    <svg className={className} viewBox=\"0 0 1024 1024\">\r\n        <path d=\"M127.5 330.9l0.7-0.7c12.3-12.3 32.4-12.3 44.7 0l339.9 339.9L853 330c12.5-12.5 32.9-12.5 45.4 0s12.5 32.9 0 45.4L536 737.8s-0.1 0.1-0.1 0.2l-0.7 0.7c-12.3 12.3-32.4 12.3-44.7 0l-363-363c-12.3-12.4-12.3-32.5 0-44.8z\">\r\n        </path>\r\n    </svg>\r\n)\r\n\r\nexport {\r\n    getSelectIcon,\r\n}","import React from \"react\"\r\n\r\nconst loadingIcon = (\r\n    <svg className=\"load\" viewBox=\"25 25 50 50\">\r\n        <circle className=\"loading\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\"/>\r\n    </svg>\r\n)\r\n\r\nexport {\r\n    loadingIcon,\r\n}","import * as search from './actionTypes.js'\r\nimport {MusicApi} from '../../api/api.js'\r\n\r\n// 搜索框输入改变\r\nexport const inputChange = (input) => ({\r\n    type: search.INPUT_CHANGE,\r\n    input,\r\n})\r\n\r\n// 开始搜索\r\nexport const searchStarted = (data) => ({\r\n    type: search.SEARCH_STARTED,\r\n    data,\r\n})\r\n\r\n// 搜索成功\r\nexport const searchSuccess = (result, searchContent, searchPage) => ({\r\n    type: search.SEARCH_SUCCESS,\r\n    result,\r\n    searchContent,\r\n    searchPage,\r\n})\r\n\r\n// 搜索失败\r\nexport const searchFailure = (error) => ({\r\n    type: search.SEARCH_FAILURE,\r\n    error,\r\n})\r\n\r\nexport const changePage = (page) => ({\r\n    type: search.CHANGE_PAGE,\r\n    page\r\n})\r\n\r\n// 拿到搜索数据\r\nexport const fetchSearchResult = (input, page=1, pageSize=20, company='netease') => {\r\n    return (dispatch) => {\r\n        let queryObj = {\r\n            input,\r\n            pageSize,\r\n            page,\r\n            company,\r\n        }\r\n        dispatch(searchStarted(input))\r\n        let api = new MusicApi()\r\n        api.searchResult(queryObj, (r) => {\r\n            let searchResult = JSON.parse(r.response)\r\n            console.log('搜索完成', searchResult)\r\n            if (searchResult.code === 200) {\r\n                dispatch(searchSuccess(searchResult, queryObj.input, page))\r\n            } else {\r\n                dispatch(searchFailure(searchResult))\r\n            }\r\n        })\r\n    }\r\n}","export const INPUT_CHANGE = 'NAV/INPUT_CHANGE'\r\n\r\nexport const SEARCH_STARTED = 'NAV/SEARCH_STARTED'\r\n\r\nexport const SEARCH_SUCCESS = 'NAV/SEARCH_SUCCESS'\r\n\r\nexport const SEARCH_FAILURE = 'NAV/SEARCH_FAILURE'\r\n\r\nexport const CHANGE_PAGE = 'PAGE/CHANGE_PAGE'","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport  {inputChange} from '../actions'\r\nimport {withRouter} from \"react-router-dom\"\r\nimport {argsFromQuery, parseClass} from \"../../../utils\"\r\n\r\nclass SearchBar extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.fillSearchContentInSearchBar()\r\n\r\n        this.onSearch = this.onSearch.bind(this)\r\n        this.onChange = this.onChange.bind(this)\r\n        this.onKeyPress = this.onKeyPress.bind(this)\r\n    }\r\n\r\n    parseUrlGetSearchContent(location) {\r\n        let searchObj = argsFromQuery(location.search)\r\n        let searchContent = decodeURI(searchObj['s'])\r\n        if (searchContent !== undefined) {\r\n            return searchContent\r\n        }\r\n    }\r\n\r\n    fillSearchContentInSearchBar() {\r\n        this.value = this.parseUrlGetSearchContent(this.props.location)\r\n        if (this.value === 'undefined') {\r\n            this.value = ''\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.location.search !== this.props.location.search) {\r\n            this.value = this.parseUrlGetSearchContent(this.props.location)\r\n        }\r\n    }\r\n\r\n    onChange(event) {\r\n        this.value = event.target.value\r\n        this.props.inputChange(this.value)\r\n    }\r\n\r\n    onSearch() {\r\n        let hasInputted = this.props.searchInput === undefined || this.props.searchInput === ''\r\n        if (hasInputted) {\r\n            return 0\r\n        }\r\n        let isEqualToOldSearchContent = this.props.searchContent !== this.props.searchInput\r\n        let isAtSearchPage = window.location.pathname !== '/search'\r\n        if (isEqualToOldSearchContent || isAtSearchPage) {\r\n            let urlObj = this.getSearchUrl()\r\n            this.props.history.push(urlObj)\r\n        }\r\n    }\r\n\r\n    getSearchUrl() {\r\n        console.log('this.props.searchInput', this.props.searchInput)\r\n        let name = this.props.searchInput.trim()\r\n        if (name === undefined) {\r\n            name = ''\r\n        }\r\n        let page = 1\r\n        return {\r\n            pathname: '/search',\r\n            search: `?s=${name}&page=${page}`,\r\n        }\r\n    }\r\n\r\n    onKeyPress(event) {\r\n        if (event.key === 'Enter') {\r\n            this.onSearch()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let classNameOfBar = parseClass({\r\n            'search-bar-container': true,\r\n            'before-searched': this.props.searchResult === undefined,\r\n        })\r\n        return(\r\n            <div className={classNameOfBar}>\r\n                <input type=\"text\" className=\"search-bar-input\" placeholder=\"搜索音乐、MV、歌单、用户\" onChange={this.onChange} onKeyDown={this.onKeyPress} value={this.value || ''}/>\r\n                <button className=\"search-bar-button\" onClick={this.onSearch}>搜索</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateTopProps = (state) => {\r\n    let theState = state.SearchBarReducer\r\n    return {\r\n        searchInput: theState.searchInput,\r\n        searchContent: theState.searchContent,\r\n        searchResult: theState.searchResult,\r\n        status: theState.status,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        inputChange:  (input) => {\r\n            dispatch(inputChange(input))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateTopProps, mapDispatchToProps)(withRouter(SearchBar))","import React from 'react'\r\n\r\nconst loading = (\r\n    <svg id=\"icon-loading-circle-fill\" className=\"message-icon\" viewBox=\"0 0 1024 1024\">\r\n        <path d=\"M960 447.008q-11.008-152.992-120-261.504t-260.992-120.512q-16-0.992-27.488 9.504t-11.488 26.496q0 14.016 9.504 24.512t23.488 11.488q55.008 4 107.008 26.016 60.992 26.016 108.992 73.504t74.016 109.504q22.016 51.008 26.016 106.016 0.992 14.016 11.488 23.488t24.512 9.504q15.008 0 26.016-11.008 11.008-12 8.992-27.008z\"  >\r\n        </path>\r\n    </svg>\r\n)\r\n\r\nconst success = (\r\n    <svg id=\"icon-success-circle-fill\" className=\"message-icon\" viewBox=\"0 0 1024 1024\">\r\n        <path d=\"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64z m193.5 301.7l-210.6 292c-12.7 17.7-39 17.7-51.7 0L318.5 484.9c-3.8-5.3 0-12.7 6.5-12.7h46.9c10.2 0 19.9 4.9 25.9 13.3l71.2 98.8 157.2-218c6-8.3 15.6-13.3 25.9-13.3H699c6.5 0 10.3 7.4 6.5 12.7z\"  >\r\n        </path>\r\n    </svg>\r\n)\r\n\r\nconst error = (\r\n    <svg id=\"icon-error-circle-fill\" className=\"message-icon\" viewBox=\"0 0 1024 1024\">\r\n        <path d=\"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64z m165.4 618.2l-66-0.3L512 563.4l-99.3 118.4-66.1 0.3c-4.4 0-8-3.5-8-8 0-1.9 0.7-3.7 1.9-5.2l130.1-155L340.5 359c-1.2-1.5-1.9-3.3-1.9-5.2 0-4.4 3.6-8 8-8l66.1 0.3L512 464.6l99.3-118.4 66-0.3c4.4 0 8 3.5 8 8 0 1.9-0.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z\"  >\r\n        </path>\r\n    </svg>\r\n)\r\n\r\nconst info = (\r\n    <svg id=\"icon-info-circle-fill\" className=\"message-icon\" viewBox=\"0 0 1024 1024\">\r\n        <path d=\"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64z m32 664c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V456c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v272z m-32-344c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48z\"  >\r\n        </path>\r\n    </svg>\r\n)\r\n\r\nconst warning = (\r\n    <svg id=\"icon-warning-circle-fill\" className=\"message-icon\" viewBox=\"0 0 1024 1024\">\r\n        <path d=\"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64z m-32 232c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v272c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V296z m32 440c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48z\"  >\r\n        </path>\r\n    </svg>\r\n)\r\n\r\nexport default {\r\n    loading,\r\n    success,\r\n    error,\r\n    info,\r\n    warning,\r\n}","import React, {Component} from \"react\"\r\nimport icons from './icons'\r\n\r\nclass Message extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.mapTypeToIcon = {...icons}\r\n    }\r\n    render() {\r\n        let {type, content} = this.props\r\n        return (\r\n            <div className={`message-container ${type}`}>\r\n                {this.mapTypeToIcon[type]}\r\n                <span className=\"message-content\">{content}</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Message","import React, {Component, Fragment} from \"react\"\r\nimport Message from './Message'\r\nimport './message.css'\r\n\r\nclass MessageList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            messages: [],\r\n        }\r\n        this.removeMessage = this.removeMessage.bind(this)\r\n    }\r\n\r\n    getMessageKey() {\r\n        const { messages } = this.state\r\n        return `message-${new Date().getTime()}-${messages.length}`\r\n    }\r\n\r\n    addMessage(message) {\r\n        const { messages } = this.state\r\n        message.key = this.getMessageKey()\r\n        messages.push(message)\r\n        this.setState({\r\n            messages: messages\r\n        })\r\n        setTimeout(() => {\r\n            this.removeMessage(message.key)\r\n        }, message.duration)\r\n    }\r\n\r\n    removeMessage(key) {\r\n        this.setState(previousState => ({\r\n            messages: previousState.messages.filter((message) => {\r\n                if (message.key === key) {\r\n                    if (message.onClose) {\r\n                        message.onClose()\r\n                    }\r\n                    return false\r\n                }\r\n                return true\r\n            })\r\n        }))\r\n    }\r\n\r\n\r\n    render() {\r\n        let {messages} = this.state\r\n        return (\r\n            <div className=\"message-list\">\r\n                {\r\n                    messages.map((message) => (\r\n                        <Fragment key={message.key}>\r\n                            <Message {...message} />\r\n                            <br/>\r\n                        </Fragment>\r\n                    ))\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MessageList","import * as audioController from './actionTypes'\r\nimport {MusicApi} from '../../api/api.js'\r\nimport {parseLyricArray} from '../../utils'\r\n\r\nexport  const toggleSongListWindow = () => {\r\n    return {\r\n        type: audioController.TOGGLE_SONG_LIST_WINDOW,\r\n    }\r\n}\r\n\r\nexport const changeAudioStatus = (status) => {\r\n    return {\r\n        type: audioController.CHANGE_AUDIO_STATUS,\r\n        status\r\n    }\r\n}\r\n\r\nexport const changePlayMode = (modeType) => {\r\n    return {\r\n        type: audioController.CHANGE_PLAY_MODE,\r\n        modeType,\r\n    }\r\n}\r\n\r\nexport const saveCurrentLyricIndex = (currentLyricIndex) => {\r\n    return {\r\n        type: audioController.GET_CURRENT_INDEX,\r\n        currentLyricIndex,\r\n    }\r\n}\r\n\r\nexport const appendTheSong = (songInfo) => {\r\n    return {\r\n        type: audioController.APPEND_THE_SONG,\r\n        songInfo,\r\n    }\r\n}\r\n\r\nexport const deleteTheSong = (songIndex) => {\r\n    return {\r\n        type: audioController.DELETE_THE_SONG,\r\n        songIndex,\r\n    }\r\n}\r\n\r\nexport const playTheSongInPage = (songInfo) => {\r\n    return {\r\n        type: audioController.PLAY_THE_SONG_IN_PAGE,\r\n        songInfo,\r\n    }\r\n}\r\n\r\nexport const playTheSongInList = (songIndex) => {\r\n    return {\r\n        type: audioController.PLAY_THE_SONG_IN_LIST,\r\n        songIndex,\r\n    }\r\n}\r\n\r\nexport const playNextSong = (modeType, loopStep=1) => {\r\n    return {\r\n        type: audioController.PLAY_NEXT_SONG,\r\n        modeType,\r\n        loopStep,\r\n    }\r\n}\r\n\r\n// export const getSong = (songUrl) => ({\r\n//     type: audioController.GET_SONG,\r\n//     songUrl,\r\n// })\r\n\r\nexport const getLyric = (lyric) => {\r\n    return {\r\n        type: audioController.GET_LYRIC,\r\n        lyric,\r\n    }\r\n}\r\n\r\n// export const getSongUrlFromNet = (url) => {\r\n//     return (dispatch) => {\r\n//         let api = new MusicApi()\r\n//         api.getSong(url, (r) => {\r\n//             let songUrl = JSON.parse(r.response).data\r\n//             dispatch(getSong(songUrl))\r\n//         })\r\n//     }\r\n// }\r\n\r\nexport const getLyricFromNet = (lrcUrl) => {\r\n    return (dispatch) => {\r\n        let api = new MusicApi()\r\n        api.getLyric(lrcUrl, (r) => {\r\n            let l = r.response\r\n            console.log(lrcUrl)\r\n            let lyricList = l.split('\\n').slice(0, -1)\r\n            if (lyricList.length === 0) {\r\n                lyricList = [l]\r\n            }\r\n            let result = parseLyricArray(lyricList)\r\n            dispatch(getLyric(result))\r\n        })\r\n    }\r\n}","export const CHANGE_AUDIO_STATUS = 'BAR/CHANGE_AUDIO_STATUS'\r\n\r\nexport const APPEND_THE_SONG = 'PAGE/APPEND_THE_SONG'\r\n\r\nexport const DELETE_THE_SONG = 'AUDIO/DELETE_THE_SONG'\r\n\r\nexport const PLAY_THE_SONG_IN_PAGE = 'PAGE/PLAY_THE_SONG'\r\n\r\nexport const PLAY_THE_SONG_IN_LIST = 'LIST/PLAY_THE_SONG'\r\n\r\nexport const PLAY_NEXT_SONG = 'AUDIO/PLAY_NEXT_SONG'\r\n\r\n// export const GET_SONG = 'AUDIO/GET_AUDIO'\r\n\r\nexport const GET_LYRIC = 'AUDIO/GET_LYRIC'\r\n\r\nexport const GET_CURRENT_INDEX = 'AUDIO/GET_CURRENT_INDEX'\r\n\r\nexport const CHANGE_PLAY_MODE = 'AUDIO/CHANGE_PLAY_MODE'\r\n\r\nexport  const TOGGLE_SONG_LIST_WINDOW = 'AUDIO/TOGGLE_SONG_LIST_WINDOW'","import React from \"react\"\r\n\r\nconst previousBtn = (\r\n    <svg className=\"svg-icon\" viewBox=\"0 0 1024 1024\">\r\n        <path d=\"M362.3 512l445-332.3v664.5L362.3 512zM216.7 179.7h80v664.5h-80V179.7z\">\r\n        </path>\r\n    </svg>\r\n)\r\n\r\nconst nextBtn = (\r\n    <svg className=\"svg-icon\" viewBox=\"0 0 1024 1024\">\r\n        <path d=\"M216.7 844.3V179.7l445 332.3-445 332.3z m590.6 0h-80V179.7h80v664.6z\">\r\n        </path>\r\n    </svg>\r\n)\r\n\r\nconst volumeBtn = (\r\n    <svg className=\"svg-icon\" viewBox=\"0 0 1024 1024\">\r\n        <path d=\"M697.5 76l-497 230.6-147.3-20v420l147.3-20 497 230.6V76z m-50 760.7l-424.9-195-13.7-6.8-15.2 2.1-90.6 12.3V343.8l90.6 12.3 15.2 2.1 13.7-6.8 424.9-194.9v680.2zM812 612h-50V412h50v200z m204.7 200h-50V212h50v600zM914.3 712h-50V312h50v400z\">\r\n        </path>\r\n    </svg>\r\n)\r\n\r\nconst listBtn = (\r\n    <svg className=\"svg-icon\" viewBox=\"0 0 1024 1024\">\r\n        <path d=\"M91.9 165.2h50v50h-50v-50z m150.2 0v50h690v-50h-690zM91.9 429.7h50v-50h-50v50z m150.2 0h690v-50h-690v50zM91.9 644.3h50v-50h-50v50z m150.2 0h690v-50h-690v50zM91.9 858.8h50v-50h-50v50z m150.2 0h690v-50h-690v50z\">\r\n        </path>\r\n    </svg>\r\n)\r\n\r\nconst deleteBtn = (\r\n    <svg className=\"svg-list-icon\" viewBox=\"0 0 1024 1024\">\r\n        <path d=\"M897.2 128H578.7c-1.6-34.7-30.2-62.4-65.3-62.4s-63.8 27.7-65.3 62.4h-320c-17.5 0-31.9 14.4-31.9 31.9s14.4 31.9 31.9 31.9H192v639.8c0 70.4 57.6 128 128 128h384.1c70.4 0 128-57.6 128-128V676.2c0.1-1.2 0.2-2.4 0.2-3.6 0.1-17.8-14.4-32.1-32.1-32.1-17.8 0-32.2 14.4-32.2 32.1v159.1c0 35.2-28.8 64-64 64H320c-35.2 0-64-28.8-64-64V191.8h511.9v223.1c0 17.7 14.4 32.1 32.2 32.1s32.2-14.4 32.2-32.1c0-1.2-0.1-2.4-0.2-3.6V191.8h65.1c17.6 0 31.9-14.4 31.9-31.9S914.7 128 897.2 128z\">\r\n        </path>\r\n        <path d=\"M386.9 350.6v386.6c0 16.8 13.8 30.6 30.6 30.6s30.6-13.8 30.6-30.5V350.6c0-16.8-13.8-30.6-30.6-30.6s-30.6 13.8-30.6 30.6zM576.7 350.6v386.6c0 16.8 13.8 30.6 30.6 30.6s30.6-13.8 30.6-30.5V350.6c0-16.8-13.8-30.6-30.6-30.6s-30.6 13.8-30.6 30.6z\">\r\n        </path>\r\n        <path d=\"M768 543.7a32.2 32.1 0 1 0 64.4 0 32.2 32.1 0 1 0-64.4 0Z\">\r\n        </path>\r\n    </svg>\r\n)\r\n\r\nconst getModeButtonSvg = (mode) => {\r\n    let loop = (\r\n        <svg className=\"svg-icon\" viewBox=\"0 0 1024 1024\">\r\n            <path d=\"M922 607.1V887H102V157h612.2V58.2l200 125-200 125V207H152v630h720V607.1h50z\">\r\n            </path>\r\n        </svg>\r\n    )\r\n    let circle = (\r\n        <svg className=\"svg-icon\" viewBox=\"0 0 1024 1024\">\r\n            <path\r\n                d=\"M922 607.1V887H102V157h612.2V58.2l200 125-200 125V207H152v630h720V607.1h50zM560.5 737.6V306.4h-34c-9.2 18.6-24.8 37.7-46.9 57.4-22.1 19.7-47.9 36.5-77.3 50.4v51c16.4-6.1 34.9-15.1 55.5-27.2s37.3-24.2 50-36.3v336h52.7z\">\r\n            </path>\r\n        </svg>\r\n    )\r\n    let random = (\r\n        <svg className=\"svg-icon\" viewBox=\"0 0 1024 1024\">\r\n            <path d=\"M726.6 774H594.4L458.8 512l135.6-262h132.2v98.7l200-125-200-125V200H564.4L430.7 457.7 297.4 200h-200v50h169.2l135.9 262-135.9 262H97.4v50h200l133.3-257.7L564.4 824h162.2v101.3l200-125-200-125z\">\r\n            </path>\r\n        </svg>\r\n    )\r\n    let mapModeToIcon = {\r\n        loop,\r\n        circle,\r\n        random,\r\n    }\r\n    return mapModeToIcon[mode]\r\n}\r\n\r\nconst getPlayButtonSvg = (status) => {\r\n    let play = (\r\n        <svg className=\"svg-icon\" viewBox=\"0 0 1024 1024\">\r\n            <path d=\"M243.2 208h166.4v608H243.2zM614.4 208h166.4v608h-166.4z\">\r\n            </path>\r\n        </svg>\r\n    )\r\n    let pause = (\r\n        <svg className=\"svg-icon\" viewBox=\"0 0 1024 1024\">\r\n            <path d=\"M289.5 844.3V179.7l445 332.3-445 332.3z\">\r\n            </path>\r\n        </svg>\r\n    )\r\n    let mapStatusToIcon = {\r\n        play,\r\n        pause,\r\n    }\r\n    return mapStatusToIcon[status]\r\n}\r\n\r\nconst getPlayButtonSvgInList = (isTheSongPlaying) => {\r\n    if (isTheSongPlaying) {\r\n        return (\r\n            <svg className=\"svg-list-icon\" viewBox=\"0 0 1024 1024\">\r\n                <path d=\"M910.8 303.6c-5.4-10.5-16.3-17.8-28.9-17.8-17.8 0-32.2 14.4-32.2 32.1 0 6 1.7 11.7 4.6 16.5l-0.1 0.1c26.9 52.4 42.1 111.8 42.1 174.7 0 211.6-171.6 383.2-383.2 383.2S129.8 720.8 129.8 509.2 301.4 126.1 513 126.1c62.5 0 121.5 15 173.6 41.5l0.2-0.4c4.6 2.6 10 4.1 15.7 4.1 17.8 0 32.2-14.4 32.2-32.1 0-13.1-7.9-24.4-19.3-29.4C654.6 78.9 585.9 61.5 513 61.5 265.7 61.5 65.3 262 65.3 509.2S265.7 956.9 513 956.9s447.7-200.4 447.7-447.7c0-74.1-18-144-49.9-205.6z\">\r\n                </path>\r\n                <path d=\"M385.4 352.2V672c0 17.5 14.3 31.9 31.9 31.9 17.6 0 32-14.4 31.9-31.9V352.2c0-17.5-14.3-31.9-31.9-31.9-17.5 0-31.9 14.3-31.9 31.9zM578.9 352.2V672c0 17.5 14.3 31.9 31.9 31.9 17.5 0 31.9-14.4 31.9-31.9V352.2c0-17.5-14.3-31.9-31.9-31.9-17.5 0-31.9 14.3-31.9 31.9z\">\r\n                </path>\r\n                <path d=\"M772.7 217.7a32.2 32.1 0 1 0 64.4 0 32.2 32.1 0 1 0-64.4 0Z\">\r\n                </path>\r\n            </svg>\r\n        )\r\n    } else {\r\n        return (\r\n            <svg className=\"svg-list-icon\" viewBox=\"0 0 1024 1024\">\r\n                <path d=\"M772.7 217.7a32.2 32.1 0 1 0 64.4 0 32.2 32.1 0 1 0-64.4 0Z\">\r\n                </path>\r\n                <path d=\"M415.8 679.9c5.9 0 11.5-1.6 16.2-4.5l231.1-134.6c10.9-5.2 18.5-16.3 18.5-29.2 0-11.9-6.4-22.3-16-27.8L439.7 352.2c-5.8-6.7-14.4-10.9-23.9-10.9-17.6 0-31.8 14.4-31.8 32.1 0 0.6 0 1.2 0.1 1.8l-0.4 0.2 0.5 269c-0.1 1.1-0.2 2.2-0.2 3.4 0 17.7 14.3 32.1 31.8 32.1z\">\r\n                </path>\r\n                <path d=\"M909.8 306.6c-5.4-10.5-16.3-17.8-28.9-17.8-17.8 0-32.2 14.4-32.2 32.1 0 6 1.7 11.7 4.6 16.5l-0.1 0.1c26.9 52.4 42.1 111.8 42.1 174.7 0 211.6-171.6 383.2-383.2 383.2S128.8 723.8 128.8 512.2 300.4 129.1 512 129.1c62.5 0 121.5 15 173.6 41.5l0.2-0.4c4.6 2.6 10 4.1 15.7 4.1 17.8 0 32.2-14.4 32.2-32.1 0-13.1-7.9-24.4-19.3-29.4C653.6 81.9 584.9 64.5 512 64.5 264.7 64.5 64.3 265 64.3 512.2S264.7 959.9 512 959.9s447.7-200.4 447.7-447.7c0-74.1-18-144-49.9-205.6z\">\r\n                </path>\r\n            </svg>\r\n        )\r\n    }\r\n}\r\n\r\nexport {\r\n    previousBtn,\r\n    nextBtn,\r\n    volumeBtn,\r\n    listBtn,\r\n    deleteBtn,\r\n    getModeButtonSvg,\r\n    getPlayButtonSvg,\r\n    getPlayButtonSvgInList,\r\n}","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {\r\n    changeAudioStatus,\r\n    getLyricFromNet,\r\n    saveCurrentLyricIndex,\r\n    changePlayMode,\r\n    playNextSong,\r\n    toggleSongListWindow\r\n} from '../actions'\r\nimport {timeFormat, getCurrentSongInfo, changeImgResolution, parseClass} from '../../../utils'\r\nimport * as icon from './icon'\r\n\r\nclass AudioController extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.mapEnglishToChinese = {\r\n            loop: '列表循环',\r\n            circle: '单曲循环',\r\n            random: '随机播放',\r\n        }\r\n        this.isFirstLoad = true\r\n        this.state = {\r\n            volume: 1,\r\n            currentTime: 0,\r\n            duration: null,\r\n            isHoverOnSongSlider: false,\r\n            isHoverOnVolumeBtn: false,\r\n        }\r\n        // this.coolDown = false\r\n        this.isSliding = false\r\n        this.isVolumeSliding = false\r\n        this.audio = React.createRef()\r\n        this.songSlider = React.createRef()\r\n        this.volumeSlider = React.createRef()\r\n        this.playOrPause = this.playOrPause.bind(this)\r\n        this.clickToSeek = this.clickToSeek.bind(this)\r\n        this.mouseDownToSeek = this.mouseDownToSeek.bind(this)\r\n        this.mouseMoveToSeek = this.mouseMoveToSeek.bind(this)\r\n        this.afterSeek = this.afterSeek.bind(this)\r\n        this.handleHover = this.handleHover.bind(this)\r\n        this.changePlayMode = this.changePlayMode.bind(this)\r\n        this.changeToPlayNextSong = this.changeToPlayNextSong.bind(this)\r\n        this.toggleSongList = this.toggleSongList.bind(this)\r\n        this.hoverVolumeBtn = this.hoverVolumeBtn.bind(this)\r\n        this.clickToChange = this.clickToChange.bind(this)\r\n        this.mouseDownToChange = this.mouseDownToChange.bind(this)\r\n        this.mouseMoveToChange = this.mouseMoveToChange.bind(this)\r\n        this.afterChange = this.afterChange.bind(this)\r\n        this.bindHotKey = this.bindHotKey.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        const a = this.audio.current\r\n        a.addEventListener('loadstart', () => {\r\n            this.props.getLyricFromNet(this.props.currentSongInfo.lrc)\r\n        })\r\n        a.addEventListener('canplay', () => {\r\n            const {currentTime, duration} = a\r\n            this.setState({\r\n                currentTime,\r\n                duration\r\n            })\r\n            let shouldAutoPlay = !this.isFirstLoad\r\n            if (shouldAutoPlay) {\r\n                a.play()\r\n            } else {\r\n                this.isFirstLoad = false\r\n            }\r\n        })\r\n        a.addEventListener('play', () => {\r\n            this.props.changeAudioStatus('play')\r\n        })\r\n        a.addEventListener('pause', () => {\r\n            this.props.changeAudioStatus('pause')\r\n        })\r\n        a.addEventListener('timeupdate', () => {\r\n            if (!this.isSliding) {\r\n                const {currentTime} = a\r\n                this.setState({\r\n                    currentTime\r\n                })\r\n                this.parseLyricIndex(currentTime)\r\n            }\r\n        })\r\n        a.addEventListener('ended', () => {\r\n            let {lengthOfSongList, playMode} = this.props\r\n            if (lengthOfSongList !== 0) {\r\n                this.props.playNextSong(playMode)\r\n                if (lengthOfSongList === 1 || playMode === 'circle') {\r\n                    a.play()\r\n                }\r\n            }\r\n        })\r\n        if (this.isFirstLoad && this.props.lengthOfSongList === 0) {\r\n            this.isFirstLoad = false\r\n        }\r\n        document.body.addEventListener('mouseup', this.afterSeek)\r\n        document.body.addEventListener('mouseup', this.afterChange)\r\n        window.addEventListener('keydown', this.bindHotKey)\r\n        a.addEventListener('error', (event) => {\r\n            if (event.target.error.code === 4) {\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    bindHotKey(event) {\r\n        let tagName = event.target.tagName\r\n        if (tagName === 'INPUT' || tagName === 'TEXTAREA') {\r\n            return\r\n        }\r\n        let {key, ctrlKey} = event\r\n        if (key === 'p' || key === 'P') {\r\n            this.playOrPause()\r\n        } else if (ctrlKey && key === 'ArrowRight') {\r\n            this.changeToPlayNextSong(1)()\r\n        } else if (ctrlKey && key === 'ArrowLeft') {\r\n            this.changeToPlayNextSong(-1)()\r\n        }\r\n    }\r\n\r\n    getNextLyricIndex(currentTime, data, deltaTime) {\r\n        let nextLyricIndex\r\n        let length = data.length\r\n        let theLastLyricTime = data[length - 1].time\r\n        let isAfterTheLastLyric = currentTime >= theLastLyricTime\r\n        let isBetweenTheLastTwoLyric = currentTime <= theLastLyricTime && currentTime >= theLastLyricTime - deltaTime\r\n        if (isAfterTheLastLyric) {\r\n            nextLyricIndex = length - 1\r\n        } else if (isBetweenTheLastTwoLyric) {\r\n            nextLyricIndex = length - 2\r\n        } else {\r\n            nextLyricIndex = data.findIndex((lyricInfo, index, data) => {\r\n                if (index === length -1) {\r\n                    return false\r\n                }\r\n                let isStart = lyricInfo.time - deltaTime <= currentTime\r\n                let isNotEnd = data[index + 1].time - deltaTime >= currentTime\r\n                return isStart && isNotEnd\r\n            })\r\n        }\r\n        return nextLyricIndex\r\n    }\r\n\r\n    parseLyricIndex(currentTime, deltaTime=0.2) {\r\n        let data = this.props.currentSongExtraInfo.currentLyric\r\n        if (data.length === 0) {\r\n            return false\r\n        }\r\n        let currentLyricIndex = this.getNextLyricIndex(currentTime, data, deltaTime)\r\n        let indexInStore = this.props.currentSongExtraInfo.currentLyricIndex\r\n        if (currentLyricIndex === indexInStore) {\r\n            return false\r\n        } else {\r\n            this.props.saveCurrentLyricIndex(currentLyricIndex)\r\n        }\r\n    }\r\n\r\n    playOrPause() {\r\n        const a = this.audio.current\r\n        if (a.currentSrc === '') {\r\n            return\r\n        }\r\n        if (this.props.AudioStatus === 'pause') {\r\n            a.play()\r\n            this.props.changeAudioStatus('play')\r\n        } else {\r\n            a.pause()\r\n            this.props.changeAudioStatus('pause')\r\n        }\r\n    }\r\n\r\n    clickToSeek(event) {\r\n        const a = this.audio.current\r\n        let target = event.target\r\n        if (!target.classList.contains('slider-point')) {\r\n            let { left, width } = event.currentTarget.getBoundingClientRect()\r\n            let clickPosition = (event.clientX - left) / width\r\n            let currentTime = clickPosition * a.duration\r\n            if (!isNaN(currentTime)) {\r\n                a.currentTime = currentTime\r\n            }\r\n        }\r\n    }\r\n\r\n    mouseDownToSeek() {\r\n        this.isSliding = true\r\n        document.body.classList.add('sliding')\r\n    }\r\n\r\n    // 自己写的节流方案\r\n    // mouseMoveToSeek(event) {\r\n    //     if (!this.isSliding) {\r\n    //         return\r\n    //     }\r\n    //     let clientX = event.clientX\r\n    //     if (!this.coolDown) {\r\n    //         this.seek(clientX)\r\n    //         this.coolDown = true\r\n    //         setTimeout(() => {\r\n    //             this.coolDown = false\r\n    //         }, 12)\r\n    //     }\r\n    // }\r\n\r\n    // 使用 api 来做到节流\r\n    mouseMoveToSeek(event) {\r\n        if (!this.isSliding) {\r\n            return\r\n        }\r\n        let clientX = event.clientX\r\n        window.requestAnimationFrame(() => {\r\n            this.seek(clientX)\r\n        })\r\n    }\r\n\r\n    seek(clientX) {\r\n        const a = this.audio.current\r\n        let {left, width} = this.songSlider.current.getBoundingClientRect()\r\n        let dragPosition = (clientX - left) / width\r\n        if (dragPosition >= 0 && dragPosition <= 1) {\r\n            let currentTime = Number((a.duration * dragPosition).toFixed(2))\r\n            let noSongLoad = isNaN(a.duration)\r\n            if (noSongLoad) {\r\n                currentTime = 0\r\n            }\r\n            this.setState({\r\n                currentTime\r\n            })\r\n        }\r\n    }\r\n\r\n    afterSeek() {\r\n        if (this.isSliding) {\r\n            const a = this.audio.current\r\n            a.currentTime = this.state.currentTime\r\n            this.isSliding = false\r\n            document.body.classList.remove('sliding')\r\n        }\r\n    }\r\n\r\n    clickToChange(event) {\r\n        const a = this.audio.current\r\n        let target = event.target\r\n        if (!target.classList.contains('slider-point')) {\r\n            let { left, width } = event.currentTarget.getBoundingClientRect()\r\n            let clickPosition = (event.clientX - left) / width\r\n            let volume = clickPosition.toFixed(2)\r\n            if (!isNaN(volume)) {\r\n                this.setState({\r\n                    volume\r\n                })\r\n                a.volume = volume\r\n            }\r\n        }\r\n    }\r\n\r\n    mouseDownToChange() {\r\n        this.isVolumeSliding = true\r\n        document.body.classList.add('sliding')\r\n    }\r\n\r\n    mouseMoveToChange(event) {\r\n        if (!this.isVolumeSliding) {\r\n            return\r\n        }\r\n        let clientX = event.clientX\r\n        window.requestAnimationFrame(() => {\r\n            this.change(clientX)\r\n        })\r\n    }\r\n\r\n    change(clientX) {\r\n        const a = this.audio.current\r\n        let {left, width} = this.volumeSlider.current.getBoundingClientRect()\r\n        let dragPosition = (clientX - left) / width\r\n        if (dragPosition >= 0 && dragPosition <= 1) {\r\n            let volume = dragPosition.toFixed(2)\r\n            this.setState({\r\n                volume\r\n            })\r\n            a.volume = volume\r\n        }\r\n    }\r\n\r\n    afterChange() {\r\n        if (this.isVolumeSliding) {\r\n            this.isVolumeSliding = false\r\n            document.body.classList.remove('sliding')\r\n        }\r\n    }\r\n\r\n    handleHover() {\r\n        this.setState((state) => ({\r\n            isHoverOnSongSlider: !state.isHoverOnSongSlider,\r\n        }))\r\n    }\r\n\r\n    hoverVolumeBtn() {\r\n        this.setState((state) => ({\r\n            isHoverOnVolumeBtn: !state.isHoverOnVolumeBtn,\r\n        }))\r\n    }\r\n\r\n    toggleSongList() {\r\n        this.props.toggleSongListWindow()\r\n        let pop = document.querySelector('.pop-up')\r\n        if (pop === null) {\r\n            let body = document.querySelector(\"body\")\r\n            body.classList.toggle('ban-scroll')\r\n        }\r\n    }\r\n\r\n    changePlayMode() {\r\n        let modeList = ['loop', 'circle', 'random']\r\n        let index = modeList.indexOf(this.props.playMode)\r\n        let nextIndex = (index + 1) % modeList.length\r\n        let nextModeType = modeList[nextIndex]\r\n        this.props.changePlayMode(nextModeType)\r\n    }\r\n\r\n    changeToPlayNextSong(loopStep) {\r\n        return () => {\r\n            this.props.playNextSong(this.props.playMode, loopStep)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let {currentTime, duration, volume} = this.state\r\n        let songPercentage = (currentTime / duration).toFixed(3) * 100\r\n        let {name, singer, pic, url} = this.props.currentSongInfo\r\n        pic = changeImgResolution(pic, 400)\r\n        let playMode = this.props.playMode\r\n        let playModeTitle = this.mapEnglishToChinese[playMode]\r\n        let classNameOfController = parseClass({\r\n            'audio-controller': true,\r\n            'playlist-opened': this.props.showSongListWindow,\r\n        })\r\n        let classNameOfSongSlider = parseClass({\r\n            'song-slider': true,\r\n            'hover': this.state.isHoverOnSongSlider,\r\n        })\r\n        let classNameOfVolumeSlider = parseClass({\r\n            'volume-bar': true,\r\n            'none-width': !this.state.isHoverOnVolumeBtn,\r\n        })\r\n        return (\r\n            <div className={classNameOfController}\r\n                 onMouseMove={this.mouseMoveToSeek}\r\n            >\r\n                <audio src={url} ref={this.audio}>\r\n                </audio>\r\n                <div className=\"album-cover\">\r\n                    <img src={pic} alt=\"专辑图片\" />\r\n                </div>\r\n                <div className=\"extra-info-container\">\r\n                    <div className={classNameOfSongSlider}\r\n                         onClick={this.clickToSeek}\r\n                         onMouseOver={this.handleHover}\r\n                         onMouseOut={this.handleHover}\r\n                         ref={this.songSlider}\r\n                    >\r\n                        <div className=\"slider-bg\">\r\n                        </div>\r\n                        <div className=\"slider-progress\" style={{width: `${songPercentage}%`}}>\r\n                            <div className=\"slider-point\" onMouseDown={this.mouseDownToSeek}>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <span className=\"music-timeline\">\r\n                        <span id=\"music-time-now\">{timeFormat(currentTime)}</span>\r\n                        <span> / </span>\r\n                        <span id=\"music-time-all\">{timeFormat(duration)}</span>\r\n                    </span>\r\n                    <div className=\"song-info\">\r\n                        <div className=\"song-info-name\" title={name}>{name}</div>\r\n                        <div className=\"song-info-singer\" title={singer}>{singer}</div>\r\n                    </div>\r\n                    <div className=\"controller-btn\">\r\n                        <span className=\"back-btn\" title=\"上一首(ctrl+←)\" onClick={this.changeToPlayNextSong(-1)}>\r\n                            {icon.previousBtn}\r\n                        </span>\r\n                        <span className={[\"play-btn\", this.props.AudioStatus].join(' ')}\r\n                              title=\"播放/暂停(p)\"\r\n                              onClick={this.playOrPause}\r\n                        >\r\n                            {icon.getPlayButtonSvg(this.props.AudioStatus)}\r\n                        </span>\r\n                        <span className=\"next-btn\" title=\"下一首(ctrl+→)\" onClick={this.changeToPlayNextSong(1)}>\r\n                            {icon.nextBtn}\r\n                        </span>\r\n                        <span className=\"volume-btn icon\" title={`音量：${volume * 100}`} onClick={this.hoverVolumeBtn}>\r\n                            {icon.volumeBtn}\r\n                            <div className={classNameOfVolumeSlider}\r\n                                 onMouseMove={this.mouseMoveToChange}\r\n                            >\r\n                                <div className=\"volume-slider\" ref={this.volumeSlider} onClick={this.clickToChange}>\r\n                                    <div className=\"slider-progress\" style={{width: `${volume * 100}%`}}>\r\n                                        <div className={this.state.isHoverOnVolumeBtn ? \"slider-point\" : \"hidden\"}\r\n                                             onMouseDown={this.mouseDownToChange}\r\n                                        >\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </span>\r\n                        <span className={this.state.isHoverOnVolumeBtn ? \"hidden\" : `mode-btn icon`}\r\n                              data-mode={playMode} title={playModeTitle}\r\n                              onClick={this.changePlayMode}\r\n                        >\r\n                            {icon.getModeButtonSvg(playMode)}\r\n                        </span>\r\n                        <span className={this.state.isHoverOnVolumeBtn ? \"hidden\" : \"list-btn icon\"}\r\n                              title=\"播放列表\"\r\n                              onClick={this.toggleSongList}\r\n                        >\r\n                            {icon.listBtn}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    let theState = state.AudioReducer\r\n    let currentSongInfo = getCurrentSongInfo(theState)\r\n    let lengthOfSongList = theState.songList.length\r\n    return {\r\n        lengthOfSongList: lengthOfSongList,\r\n        AudioStatus: theState.AudioStatus,\r\n        currentSongInfo: currentSongInfo,\r\n        currentSongExtraInfo: theState.currentSongExtraInfo,\r\n        playMode: theState.playMode,\r\n        showSongListWindow: theState.showSongListWindow,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeAudioStatus: (status) => {\r\n            dispatch(changeAudioStatus(status))\r\n        },\r\n        getLyricFromNet: (url) => {\r\n            dispatch(getLyricFromNet(url))\r\n        },\r\n        saveCurrentLyricIndex: (currentLyricIndex) => {\r\n            dispatch(saveCurrentLyricIndex(currentLyricIndex))\r\n        },\r\n        changePlayMode: (modeType) => {\r\n            dispatch(changePlayMode(modeType))\r\n        },\r\n        playNextSong: (modeType, loopStep) => {\r\n            dispatch(playNextSong(modeType, loopStep))\r\n        },\r\n        toggleSongListWindow: () => {\r\n            dispatch(toggleSongListWindow())\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AudioController)","import React, {Component} from 'react'\r\nimport {timeFormat, getCurrentSongInfo} from '../../../utils'\r\nimport {connect} from \"react-redux\"\r\nimport {playTheSongInList, deleteTheSong} from '../actions'\r\nimport {deleteBtn, getPlayButtonSvgInList} from './icon'\r\n\r\nclass SongItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.handlePlay = this.handlePlay.bind(this)\r\n        this.handlePause = this.handlePause.bind(this)\r\n    }\r\n\r\n    handlePlay() {\r\n        if (this.props.currentSongId !== this.props.songInfo.id) {\r\n            this.props.playTheSongInList(this.props.songIndex)\r\n        } else {\r\n            let audio = document.querySelector('audio')\r\n            audio.play()\r\n        }\r\n    }\r\n\r\n    handlePause() {\r\n        let audio = document.querySelector('audio')\r\n        audio.pause()\r\n    }\r\n\r\n    render() {\r\n        let {id, name, singer, time} = this.props.songInfo\r\n        let isTheSongPlaying = (this.props.AudioStatus === 'play') && (this.props.currentSongId === id)\r\n        return (\r\n            <div className=\"song-list-item-container\" style={isTheSongPlaying ? {color: 'rgb(255, 255, 255)'} : {}}>\r\n                <div className=\"song-list-item-name\">\r\n                    <span className=\"song-name\" title={name}>{name}</span>\r\n                    <span className=\"song-list-item-play vertical-middle\" onClick={isTheSongPlaying ? this.handlePause : this.handlePlay}>\r\n                        {getPlayButtonSvgInList(isTheSongPlaying)}\r\n                    </span>\r\n                    <span className=\"song-list-item-delete vertical-middle\" onClick={this.props.deleteTheSong.bind(this, this.props.songIndex)}>\r\n                        {deleteBtn}\r\n                    </span>\r\n                </div>\r\n                <div className=\"song-list-item-singer name\">\r\n                    <span title={singer}>{singer}</span>\r\n                </div>\r\n                <div className=\"song-list-item-time\">\r\n                    {timeFormat(time)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    let theState = state.AudioReducer\r\n    let currentSongInfo = getCurrentSongInfo(theState)\r\n    let currentSongId = currentSongInfo.id\r\n    return {\r\n        AudioStatus: theState.AudioStatus,\r\n        currentSongId: currentSongId,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        playTheSongInList: (songInfo) => {\r\n            dispatch(playTheSongInList(songInfo))\r\n        },\r\n        deleteTheSong: (songIndex) => {\r\n            dispatch(deleteTheSong(songIndex))\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SongItem)","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport SongItem from './SongItem'\r\nimport {getCurrentSongInfo, changeImgResolution, parseClass} from '../../../utils'\r\n\r\nclass SongList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.list = React.createRef()\r\n    }\r\n\r\n    getTheActiveLyricOffset() {\r\n        const list = this.list.current\r\n        let activeLyric = document.querySelector('.active')\r\n        if (activeLyric !== null) {\r\n            let {height} = list.getBoundingClientRect()\r\n            let i = Math.floor(height / 40 / 2)\r\n            list.scrollTop = activeLyric.offsetTop - 40 * i\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        this.getTheActiveLyricOffset()\r\n    }\r\n\r\n    render() {\r\n        let picUrl = this.props.currentSongInfo.pic\r\n        picUrl = changeImgResolution(picUrl, 400)\r\n        let {currentLyric, currentLyricIndex} = this.props.currentSongExtraInfo\r\n        let length = this.props.songList.length\r\n        let classNameOfSongList = parseClass({\r\n            'song-list': true,\r\n            'hidden': !this.props.showSongListWindow,\r\n        })\r\n        return (\r\n            <div className={classNameOfSongList}>\r\n                <div className=\"song-list-bg\">\r\n                </div>\r\n                <div className=\"song-list-img\" style={{backgroundImage: `url(${picUrl})`}}>\r\n                </div>\r\n                <span className=\"song-list-header\">播放列表&nbsp;&nbsp;&nbsp;{`(总${length}首)`}</span>\r\n                <div className=\"song-list-container\">\r\n                    <div className=\"song-list-head-container\">\r\n                        <div className=\"song-list-item-name\">\r\n                            <span title=\"\">歌曲</span>\r\n                        </div>\r\n                        <div className=\"song-list-item-singer\">\r\n                            <span title=\"\">歌手</span>\r\n                        </div>\r\n                        <div className=\"song-list-item-time\">时长</div>\r\n                    </div>\r\n                    {\r\n                        this.props.songList.map((value, index) => {\r\n                            return <SongItem key={index} songIndex={index} songInfo={value}/>\r\n                    })}\r\n                </div>\r\n                <div className=\"lyric-list\" ref={this.list}>\r\n                    {\r\n                        currentLyric.map((value, index) => {\r\n                            let classNameOfLyric = parseClass({\r\n                                'lyric-item': true,\r\n                                'active': currentLyricIndex === index,\r\n                            })\r\n                            if (value.translatedLyric === null) {\r\n                                return <p className={classNameOfLyric} key={index}>{value.lyric}</p>\r\n                            } else {\r\n                                return (\r\n                                    <p className={classNameOfLyric} key={index}>\r\n                                        {value.lyric}<br/>\r\n                                        {value.translatedLyric}\r\n                                    </p>\r\n                                )\r\n                            }\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    let theState = state.AudioReducer\r\n    let currentSongInfo = getCurrentSongInfo(theState)\r\n    return {\r\n        songList: theState.songList,\r\n        currentSongInfo: currentSongInfo,\r\n        currentSongExtraInfo: theState.currentSongExtraInfo,\r\n        showSongListWindow: theState.showSongListWindow,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(SongList)","import React, {Component} from 'react'\r\nimport AudioController from \"./AudioController\"\r\nimport SongList from \"./SongList\"\r\nimport './MusicController.css'\r\n\r\nclass MusicController extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"music-player\">\r\n                <AudioController />\r\n                <SongList />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MusicController","import React, {Component} from 'react'\r\nimport {getCurrentSongInfo, parseClass, timeFormat} from '../../../utils'\r\nimport {connect} from 'react-redux'\r\nimport {actions} from '../../audioController/'\r\nimport {message} from '../../common/message/'\r\n\r\nconst {appendTheSong, playTheSongInPage} = actions\r\n\r\nclass SearchItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.handlePlay = this.handlePlay.bind(this)\r\n        this.handleAppend = this.handleAppend.bind(this)\r\n        this.handlePause = this.handlePause.bind(this)\r\n    }\r\n\r\n    handlePlay() {\r\n        if (!this.props.result.copyright) {\r\n            message.warning('该歌曲不能播放', 2000)\r\n            return\r\n        }\r\n        if (this.props.currentSongId !== this.props.result.id) {\r\n            this.props.playTheSongInPage(this.props.result)\r\n            message.success('开始播放', 2000)\r\n            console.log('本歌曲第一次放')\r\n        } else {\r\n            let audio = document.querySelector('audio')\r\n            audio.play()\r\n        }\r\n    }\r\n\r\n    handlePause() {\r\n        let audio = document.querySelector('audio')\r\n        audio.pause()\r\n    }\r\n\r\n    getPlayOrPauseButtonSvg() {\r\n        let id = this.props.result.id\r\n        let isTheSongPlaying = (this.props.AudioStatus === 'play') && (this.props.currentSongId === id)\r\n        if (isTheSongPlaying) {\r\n            return (\r\n                <svg className=\"svg-list-icon\" viewBox=\"0 0 1024 1024\">\r\n                    <path d=\"M910.8 303.6c-5.4-10.5-16.3-17.8-28.9-17.8-17.8 0-32.2 14.4-32.2 32.1 0 6 1.7 11.7 4.6 16.5l-0.1 0.1c26.9 52.4 42.1 111.8 42.1 174.7 0 211.6-171.6 383.2-383.2 383.2S129.8 720.8 129.8 509.2 301.4 126.1 513 126.1c62.5 0 121.5 15 173.6 41.5l0.2-0.4c4.6 2.6 10 4.1 15.7 4.1 17.8 0 32.2-14.4 32.2-32.1 0-13.1-7.9-24.4-19.3-29.4C654.6 78.9 585.9 61.5 513 61.5 265.7 61.5 65.3 262 65.3 509.2S265.7 956.9 513 956.9s447.7-200.4 447.7-447.7c0-74.1-18-144-49.9-205.6z\">\r\n                    </path>\r\n                    <path d=\"M385.4 352.2V672c0 17.5 14.3 31.9 31.9 31.9 17.6 0 32-14.4 31.9-31.9V352.2c0-17.5-14.3-31.9-31.9-31.9-17.5 0-31.9 14.3-31.9 31.9zM578.9 352.2V672c0 17.5 14.3 31.9 31.9 31.9 17.5 0 31.9-14.4 31.9-31.9V352.2c0-17.5-14.3-31.9-31.9-31.9-17.5 0-31.9 14.3-31.9 31.9z\">\r\n                    </path>\r\n                    <path d=\"M772.7 217.7a32.2 32.1 0 1 0 64.4 0 32.2 32.1 0 1 0-64.4 0Z\">\r\n                    </path>\r\n                </svg>\r\n            )\r\n        } else {\r\n            return (\r\n                <svg className=\"svg-list-icon\" viewBox=\"0 0 1024 1024\">\r\n                    <path d=\"M772.7 217.7a32.2 32.1 0 1 0 64.4 0 32.2 32.1 0 1 0-64.4 0Z\">\r\n                    </path>\r\n                    <path d=\"M415.8 679.9c5.9 0 11.5-1.6 16.2-4.5l231.1-134.6c10.9-5.2 18.5-16.3 18.5-29.2 0-11.9-6.4-22.3-16-27.8L439.7 352.2c-5.8-6.7-14.4-10.9-23.9-10.9-17.6 0-31.8 14.4-31.8 32.1 0 0.6 0 1.2 0.1 1.8l-0.4 0.2 0.5 269c-0.1 1.1-0.2 2.2-0.2 3.4 0 17.7 14.3 32.1 31.8 32.1z\">\r\n                    </path>\r\n                    <path d=\"M909.8 306.6c-5.4-10.5-16.3-17.8-28.9-17.8-17.8 0-32.2 14.4-32.2 32.1 0 6 1.7 11.7 4.6 16.5l-0.1 0.1c26.9 52.4 42.1 111.8 42.1 174.7 0 211.6-171.6 383.2-383.2 383.2S128.8 723.8 128.8 512.2 300.4 129.1 512 129.1c62.5 0 121.5 15 173.6 41.5l0.2-0.4c4.6 2.6 10 4.1 15.7 4.1 17.8 0 32.2-14.4 32.2-32.1 0-13.1-7.9-24.4-19.3-29.4C653.6 81.9 584.9 64.5 512 64.5 264.7 64.5 64.3 265 64.3 512.2S264.7 959.9 512 959.9s447.7-200.4 447.7-447.7c0-74.1-18-144-49.9-205.6z\">\r\n                    </path>\r\n                </svg>\r\n            )\r\n        }\r\n    }\r\n\r\n    handleAppend() {\r\n        if (!this.props.result.copyright) {\r\n            message.warning('该歌曲不能播放', 2000)\r\n            return\r\n        }\r\n        this.props.appendTheSong(this.props.result)\r\n    }\r\n\r\n    render() {\r\n        let {id, name, singer, time} = this.props.result\r\n        let isTheSongPlaying = (this.props.AudioStatus === 'play') && (this.props.currentSongId === id)\r\n        let isOdd = (this.props.index + 1) % 2 !== 0\r\n        let color = !this.props.result.copyright ? '#aaa' : ''\r\n        let classNameOfItem = parseClass({\r\n            'search-item-container': true,\r\n            'odd': isOdd,\r\n        })\r\n        return(\r\n            <div className={classNameOfItem} style={{color: `${color}`}}>\r\n                <span className=\"search-item-number\">{`${this.props.index + 1}.`}</span>\r\n                <div className=\"search-item-name\">\r\n                    <span className=\"song-name\" title={name}>{name}</span>\r\n                    <span className=\"search-item-play vertical-middle\"\r\n                          onClick={isTheSongPlaying ? this.handlePause : this.handlePlay}>\r\n                        {this.getPlayOrPauseButtonSvg()}\r\n                    </span>\r\n                    <span className=\"search-item-append vertical-middle\" onClick={this.handleAppend}>\r\n                        <svg className=\"svg-list-icon\" viewBox=\"0 0 1024 1024\">\r\n                            <path d=\"M197.3 197.3c-173.8 173.8-173.8 455.5 0 629.3s455.5 173.8 629.3 0 173.8-455.5 0-629.3-455.5-173.7-629.3 0zM907 512c0 51.3-9.7 101.3-28.9 148.7-19.9 49-49.1 92.9-86.8 130.6s-81.7 66.9-130.6 86.8C613.3 897.3 563.3 907 512 907c-51.3 0-101.3-9.7-148.7-28.9-49-19.9-92.9-49.1-130.6-86.8s-66.9-81.7-86.8-130.6C126.7 613.3 117 563.3 117 512c0-51.3 9.7-101.3 28.9-148.7 19.9-49 49.1-92.9 86.8-130.6s81.7-66.9 130.6-86.8C410.7 126.7 460.7 117 512 117c51.3 0 101.3 9.7 148.7 28.9 49 19.9 92.9 49.1 130.6 86.8s66.9 81.7 86.8 130.6C897.3 410.7 907 460.7 907 512zM537 262v225h225v50H537v225h-50V537H262v-50h225V262h50z\">\r\n                            </path>\r\n                        </svg>\r\n                    </span>\r\n                </div>\r\n                <div className=\"search-item-singer name\">\r\n                    <span title={singer}>{singer}</span>\r\n                </div>\r\n                <div className=\"search-item-time\">\r\n                    {timeFormat(time)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    let theState = state.AudioReducer\r\n    let currentSongInfo = getCurrentSongInfo(theState)\r\n    let currentSongId = currentSongInfo.id\r\n    return {\r\n        AudioStatus: theState.AudioStatus,\r\n        currentSongId: currentSongId,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        appendTheSong: (songInfo) => {\r\n            dispatch(appendTheSong(songInfo))\r\n        },\r\n        playTheSongInPage: (songInfo) => {\r\n            dispatch(playTheSongInPage(songInfo))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchItem)","import React, {Component} from 'react'\r\nimport SearchItem from './SearchItem'\r\nimport {connect} from 'react-redux'\r\nimport PageSelector from \"../../common/PageSelector\"\r\nimport {changePage} from \"../actions\"\r\nimport {withRouter} from \"react-router-dom\"\r\n\r\nclass SearchList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.pushHistory = this.pushHistory.bind(this)\r\n        this.getSelectorInfo = this.getSelectorInfo.bind(this)\r\n    }\r\n\r\n    dataCleaning(data) {\r\n        let singerList = data.ar.map(artist => artist.name)\r\n        let singer = singerList.join('/')\r\n        let id = String(data.privilege.id)\r\n        return {\r\n            name: data.name,\r\n            singer,\r\n            time: data.dt / 1000,\r\n            id,\r\n            pic: data.al.picUrl,\r\n            lrc: `https://v1.itooi.cn/netease/lrc?id=${id}`,\r\n            url:`https://v1.itooi.cn/netease/url?id=${id}`,\r\n            copyright: data.privilege.fl !== 0,\r\n        }\r\n    }\r\n\r\n    pushHistory(newPage) {\r\n        this.props.history.push(`search?s=${this.props.searchContent}&page=${newPage}`)\r\n    }\r\n\r\n    getSelectorInfo() {\r\n        let totalCount = this.props.searchResult.data.songCount\r\n        if (totalCount > 600) {\r\n            totalCount = 600\r\n        }\r\n        let pageSize = this.props.pageSize\r\n        let totalPage = Math.ceil(totalCount / pageSize)\r\n        return {\r\n            totalPage,\r\n            currentPage: Number(this.props.searchPage),\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let searchData = this.props.searchResult.data.songs\r\n        let selectorInfo = this.getSelectorInfo()\r\n        return(\r\n            <div className=\"search-list-container\">\r\n                <span className=\"search-head-number\">\r\n                </span>\r\n                <div className=\"search-head-container\">\r\n                    <div className=\"search-head-name name\">\r\n                        <span title=\"歌名\">歌曲</span>\r\n                    </div>\r\n                    <div className=\"search-head-singer name\">\r\n                        <span title=\"歌手\">歌手</span>\r\n                    </div>\r\n                    <div className=\"search-head-time\">\r\n                        时长\r\n                    </div>\r\n                </div>\r\n                <div className=\"search-list\">\r\n                    {searchData.map((value, i) => {\r\n                        let num = i + this.props.pageSize * (this.props.searchPage - 1)\r\n                        return (\r\n                            <SearchItem key={i} index={num} result={this.dataCleaning(value)}/>\r\n                        )\r\n                    })}\r\n                </div>\r\n                    <PageSelector selectorInfo={selectorInfo} changePage={this.props.changePage} pushHistory={this.pushHistory}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateTopProps = (state) => {\r\n    let theState = state.SearchBarReducer\r\n    return {\r\n        searchContent: theState.searchContent,\r\n        searchResult: theState.searchResult,\r\n        searchPage: theState.searchPage,\r\n        pageSize: theState.pageSize,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changePage: (page) => {\r\n            dispatch(changePage(page))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateTopProps, mapDispatchToProps)(withRouter(SearchList))","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport * as Status from '../status'\r\nimport {fetchSearchResult, inputChange} from '../actions'\r\nimport SearchBar from './SearchBar'\r\nimport SearchList from './SearchList'\r\nimport {argsFromQuery} from '../../../utils'\r\nimport './SearchPage.css'\r\nimport Loading from \"../../common/Loading\"\r\n\r\nclass SearchPage extends Component {\r\n\r\n    componentDidMount() {\r\n        let query = argsFromQuery(this.props.location.search)\r\n        let s = query.s\r\n        let page = Number(query.page)\r\n        if (s !== undefined && s !== this.props.searchContent) {\r\n            this.props.fetchSearchResult(s, page)\r\n            this.props.inputChange(s)\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.location.search !== this.props.location.search) {\r\n            let query = argsFromQuery(this.props.location.search)\r\n            let s = query.s\r\n            let page = Number(query.page)\r\n            this.props.fetchSearchResult(s, page)\r\n        }\r\n    }\r\n\r\n    showSearchResult() {\r\n        switch (this.props.status) {\r\n            case Status.LOADING: {\r\n                return (\r\n                    <Loading />\r\n                )\r\n            }\r\n            case Status.SUCCESS: {\r\n                return (\r\n                    <SearchList />\r\n                )\r\n            }\r\n            case Status.FAILURE: {\r\n                return (\r\n                    <div className=\"failed-container\">歌曲搜索失败</div>\r\n                )\r\n            }\r\n            default: {\r\n                return (\r\n                    <div></div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"search-page-content\">\r\n                <SearchBar />\r\n                {this.showSearchResult()}\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateTopProps = (state) => {\r\n    let theState = state.SearchBarReducer\r\n    return {\r\n        status: theState.status,\r\n        searchResult: theState.searchResult,\r\n        searchContent: theState.searchContent,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchSearchResult: (input, page) => {\r\n            dispatch(fetchSearchResult(input, page))\r\n        },\r\n        inputChange: (input) => {\r\n            dispatch(inputChange(input))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateTopProps, mapDispatchToProps)(SearchPage)","export const LOADING = 'loading'\r\nexport const SUCCESS = 'success'\r\nexport const FAILURE = 'failure'","import React, {Component} from 'react'\r\nimport {changeImgResolution, parseClass} from '../../../utils'\r\nimport {SearchItem} from '../../searchPage'\r\nimport PageSelector from '../../common/PageSelector'\r\nimport {albumChangePage} from '../actions'\r\nimport {connect} from 'react-redux'\r\n\r\nclass AlbumDetail extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isAllDescriptionShowed: false,\r\n        }\r\n\r\n        this.descriptionToggle = this.descriptionToggle.bind(this)\r\n        this.getPageSelectorInfo = this.getPageSelectorInfo.bind(this)\r\n    }\r\n\r\n    descriptionToggle() {\r\n        this.setState((state) => ({\r\n            isAllDescriptionShowed: !state.isAllDescriptionShowed,\r\n        }))\r\n    }\r\n\r\n    static dataCleaning(fetchedData) {\r\n        let singerList = fetchedData.artists.map(artist => artist.name)\r\n        let singer = singerList.join('/')\r\n        return {\r\n            id: fetchedData.id,\r\n            name: fetchedData.name,\r\n            singer,\r\n            time: fetchedData.duration / 1000,\r\n            pic: fetchedData.album.blurPicUrl,\r\n            lrc: `https://v1.itooi.cn/netease/lrc?id=${fetchedData.id}`,\r\n            url: `https://v1.itooi.cn/netease/url?id=${fetchedData.id}`,\r\n            // copyright: fetchedData.privilege.fl !== 0,\r\n            copyright: true,\r\n        }\r\n    }\r\n\r\n    getPageSelectorInfo() {\r\n        let totalPage = Math.ceil(this.props.albumDetailInfo.data.trackCount / this.props.albumPageSize)\r\n        return {\r\n            totalPage,\r\n            currentPage: Number(this.props.albumCurrentPage),\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let data = this.props.albumDetailInfo.data\r\n        let {coverImgUrl, name, description, trackCount} = data\r\n        coverImgUrl = changeImgResolution(coverImgUrl, 200)\r\n\r\n        let {albumCurrentPage, albumPageSize} = {...this.props}\r\n        let start = (albumCurrentPage - 1) * albumPageSize\r\n        let end = start + albumPageSize\r\n        let dataOfShowedAlbums = data.tracks.slice(start, end)\r\n\r\n        let {isAllDescriptionShowed} = this.state\r\n        let classNameOfAlbumInfo = parseClass({\r\n            'album-list-info': true,\r\n            'all-description-showed': isAllDescriptionShowed,\r\n        })\r\n        let classNameOfDescription = parseClass({\r\n            'album-list-description': true,\r\n            'all-description-showed': isAllDescriptionShowed,\r\n        })\r\n        return (\r\n            <div className=\"album-list-container\">\r\n                <div className={classNameOfAlbumInfo}>\r\n                    <img className=\"album-list-bg\" src={coverImgUrl} alt=\"专辑图片\"/>\r\n                    <span className=\"album-list-pic\">\r\n                                <img src={coverImgUrl} alt=\"专辑图片\"/>\r\n                            </span>\r\n                    <div className=\"album-list-name\" title={name}>\r\n                        {`歌单：${name}`}\r\n                    </div>\r\n                    <p className={classNameOfDescription}>\r\n                        <span>介绍：</span><br/>\r\n                        {`${description}`}\r\n                    </p>\r\n                    <span className=\"description-toggle\" onClick={this.descriptionToggle}>{isAllDescriptionShowed ? '收起' : '展开'}</span>\r\n                </div>\r\n                <div className=\"album-list-count\">\r\n                    {`歌曲列表 (${trackCount}首歌)`}\r\n                </div>\r\n                <div className=\"album-list-items\">\r\n                    {dataOfShowedAlbums.map((value, i) => {\r\n                        let index = i + start\r\n                        return <SearchItem key={index} index={index} result={AlbumDetail.dataCleaning(value)}/>\r\n                    })}\r\n                </div>\r\n                <PageSelector selectorInfo={this.getPageSelectorInfo()} changePage={this.props.changePage} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    let theState = state.PlayListReducer\r\n    return {\r\n        albumDetailInfo: theState.albumDetailInfo,\r\n        albumCurrentPage: theState.albumCurrentPage,\r\n        albumPageSize: theState.albumPageSize,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changePage: (page) => {\r\n            dispatch(albumChangePage(page))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AlbumDetail)","import React, {Component} from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport {connect} from 'react-redux'\r\nimport {deleteItemDetail} from '../actions'\r\nimport * as Status from '../status'\r\nimport {loadingIcon} from '../../common/icon'\r\nimport AlbumDetail from './AlbumDetail'\r\n\r\nclass ModalPortal extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.deleteDetailInfo = this.deleteDetailInfo.bind(this)\r\n        this.container = document.querySelector('#pop-container')\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        let body = document.body\r\n        if (this.props.albumStatus !== Status.INIT) {\r\n            body.classList.add('ban-scroll')\r\n        } else {\r\n            body.classList.remove('ban-scroll')\r\n        }\r\n    }\r\n\r\n    deleteDetailInfo() {\r\n        this.props.deleteItemDetail()\r\n    }\r\n\r\n    showAlbumList() {\r\n        switch (this.props.albumStatus) {\r\n            case Status.INIT: {\r\n                return null\r\n            }\r\n            case Status.LOADING: {\r\n                return (\r\n                    <div className=\"pop-up\">\r\n                        <div className=\"pop-window\">\r\n                            <span className=\"modal-portal-toggle\" onClick={this.deleteDetailInfo}>×</span>\r\n                            <div className=\"loading-container\">\r\n                                {loadingIcon}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            case Status.SUCCESS: {\r\n                return (\r\n                    <div className=\"pop-up\">\r\n                        <div className=\"pop-window\">\r\n                            <span className=\"modal-portal-toggle\" onClick={this.deleteDetailInfo}>×</span>\r\n                            <AlbumDetail />\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            default: {\r\n                return null\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return ReactDOM.createPortal(this.showAlbumList(), this.container)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    let theState = state.PlayListReducer\r\n    return {\r\n        albumStatus: theState.albumStatus,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deleteItemDetail: () => {\r\n            dispatch(deleteItemDetail())\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalPortal)","import React, { Component } from 'react'\nimport PlayList from './PlayList'\nimport TagSelector from './TagSelector'\nimport ModalPortal from './ModalPortal'\nimport './playListPage.css'\n\nclass PlayListPage extends Component {\n\n    render() {\n        return (\n            <div className=\"playlist-content\">\n                <TagSelector />\n                <PlayList />\n                <ModalPortal />\n            </div>\n        )\n    }\n}\n\nexport default PlayListPage\n","import React, {Component} from 'react'\r\n\r\nclass NotFound extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"error-404\">\r\n                <img src=\"https://static.hdslb.com/error/very_sorry.png\" alt=\"not-found\"/>\r\n                <div className=\"error-description\">\r\n                    <b>错误号：404</b><br/>\r\n                    <b>请点击上方导航，进行浏览（未配置服务器进行页面重定向）</b>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NotFound","import React, { Component } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport {connect} from 'react-redux'\n\nclass Menu extends Component {\n\n    render() {\n        let {searchContent, searchPage} = {...this.props.searchBar}\n        let searchPath = `?s=${searchContent}&page=${searchPage}`\n        if (searchContent === '' || searchContent === undefined) {\n            searchPath = ''\n        }\n        let menus = [\n            {\n                text: '首页',\n                pathname: '/',\n                search: '',\n            },\n            {\n                text: '热门歌单',\n                pathname: `/playlist`,\n                search: `?cat=${this.props.playList.activeTag}&page=${this.props.playList.currentPage}`,\n            },\n            {\n                text: '搜索',\n                pathname: `/search`,\n                search: searchPath,\n            },\n        ]\n        return (\n            <nav>\n                <ul className=\"nav-container\">\n                    {\n                        menus.map((e, index) => {\n                                let href = `${e.pathname}${e.search}`\n                                let isCurrent = this.props.currentPathname === e.pathname\n                                return (\n                                    <li className=\"nav-item\" key={index}>\n                                        <Link className={isCurrent? \"nav-link nav-link-current\" : \"nav-link\"} to={href}>{e.text}</Link>\n                                    </li>\n                                )\n                            }\n                        )\n                    }\n                </ul>\n            </nav>\n        )\n    }\n}\n\nconst mapStateTopProps = (state, ownProps) => {\n    return {\n        playList: state.PlayListReducer,\n        searchBar: state.SearchBarReducer,\n        currentPathname: ownProps.location.pathname,\n    }\n}\n\nexport default withRouter(connect(mapStateTopProps, null)(Menu))\n","import React, {Component} from 'react'\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"page-footer\">\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer","import React, {Component} from 'react'\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport {view as Home} from './homePage/'\nimport {view as PlayListPage} from './playListPage/'\nimport {view as SearchPage} from './searchPage/'\nimport NotFound from './NotFound'\nimport Menu from './Menu'\nimport {view as MusicController} from './audioController/'\nimport Footer from './Footer'\nimport './App.css'\n\nclass App extends Component {\n\n    render() {\n        return (\n            // BrowserRouter 会使用 HTML5 的 history API 渲染单页路由\n            <Router basename={process.env.PUBLIC_URL}>\n                <React.Fragment>\n                    <Menu />\n                    {/*Router 只能有一个子元素 也可以放一个 Switch 组件*/}\n                    <div className=\"content-container\">\n                        <Switch>\n                            {/*Route 组件用来匹配 location.path 的值, 并且渲染相应的组件 */}\n                            {/*exact 表示路径完全匹配时才算匹配*/}\n                            <Route exact path=\"/\" component={Home} />\n                            <Route exact path=\"/playlist\" component={PlayListPage} />\n                            <Route exact path=\"/search\" component={SearchPage} />\n                            <Route component={NotFound} />\n                        </Switch>\n                    </div>\n                    <Footer />\n                    <MusicController />\n                </React.Fragment>\n            </Router>\n        )\n    }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { applyMiddleware, createStore, combineReducers} from 'redux'\r\nimport {reducer as homePageReducer} from './components/homePage/'\r\nimport {reducer as SearchBarReducer} from './components/searchPage/'\r\nimport {reducer as PlayListReducer} from './components/playListPage/'\r\nimport {reducer as AudioReducer} from './components/audioController/'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {loadSongListInLocalStorage, loadCurrentSongIndexInLocalStorage} from './utils'\r\n\r\nconst initValue = {\r\n    homePageReducer: {\r\n        images: [],\r\n        indexOfCurrentImg: 0,\r\n    },\r\n    SearchBarReducer: {\r\n        searchContent: '',\r\n        searchPage: 1,\r\n        pageSize: 20,\r\n    },\r\n    PlayListReducer: {\r\n        activeTag: '全部',\r\n        albumStatus: '',\r\n        albumDetailInfo: '',\r\n        albumCurrentPage: 1,\r\n        albumPageSize: 30,\r\n        currentPage: 1,\r\n        pageSize: 60,\r\n        totalPage: 20,\r\n    },\r\n    AudioReducer: {\r\n        AudioStatus: 'pause',\r\n        songList: loadSongListInLocalStorage(),\r\n        showSongListWindow: false,\r\n        currentSongExtraInfo: {\r\n            currentSongIndex: loadCurrentSongIndexInLocalStorage(),\r\n            currentLyric: [],\r\n            currentLyricIndex: -1,\r\n        },\r\n        playMode: 'loop',\r\n        initSongInfo: {\r\n            id: -1,\r\n            name: '歌曲',\r\n            singer: '歌手',\r\n            lrc: null,\r\n            pic: \"http://s4.music.126.net/style/web2/img/default/default_album.jpg\",\r\n            url: null,\r\n            time: null,\r\n        },\r\n    },\r\n}\r\n\r\nconst reducerObj = {\r\n    homePageReducer,\r\n    SearchBarReducer,\r\n    PlayListReducer,\r\n    AudioReducer,\r\n}\r\n\r\nconst reducer = combineReducers(reducerObj)\r\n\r\nconst middleware = [thunkMiddleware]\r\n\r\nconst storeEnhancers = composeWithDevTools(applyMiddleware(...middleware))\r\n\r\nconst Store = createStore(reducer, initValue, storeEnhancers)\r\n\r\nexport default Store","import * as homePage from './actionTypes.js'\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case homePage.GET_HOMEPAGE_IMG: {\r\n            return {\r\n                ...state,\r\n                images: action.imgObj,\r\n            }\r\n        }\r\n        case homePage.CHANGE_THE_INDEX_OF_IMG: {\r\n            return {\r\n                ...state,\r\n                indexOfCurrentImg: action.index,\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state === undefined ? {} : state\r\n        }\r\n    }\r\n}","import * as search from './actionTypes.js'\r\nimport * as Status from './status.js'\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case search.INPUT_CHANGE: {\r\n            return {\r\n                ...state,\r\n                searchInput: action.input\r\n            }\r\n        }\r\n        case search.SEARCH_STARTED: {\r\n            return {\r\n                ...state,\r\n                status: Status.LOADING\r\n            }\r\n        }\r\n        case search.SEARCH_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                status: Status.SUCCESS,\r\n                searchResult: action.result,\r\n                searchContent: action.searchContent,\r\n                searchPage: action.searchPage,\r\n            }\r\n        }\r\n        case search.SEARCH_FAILURE: {\r\n            return {\r\n                status: Status.FAILURE\r\n            }\r\n        }\r\n        case search.CHANGE_PAGE: {\r\n            return {\r\n                ...state,\r\n                searchPage: action.page,\r\n            }\r\n        }\r\n        default: {\r\n            return state === undefined ? [] : state\r\n        }\r\n    }\r\n}","import * as playList from './actionTypes.js'\r\nimport * as Status from './status.js'\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case playList.PLAYLIST_TAG_CHANGE: {\r\n            return {\r\n                ...state,\r\n                activeTag: action.tagName,\r\n                currentPage: 1,\r\n            }\r\n        }\r\n        case playList.LOAD_ITEM_DETAIL_STARTED: {\r\n            return {\r\n                ...state,\r\n                albumStatus: Status.LOADING\r\n            }\r\n        }\r\n        case playList.LOAD_ITEM_DETAIL_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                albumStatus: Status.SUCCESS,\r\n                albumDetailInfo: action.albumDetailInfo\r\n            }\r\n        }\r\n        case playList.DELETE_ITEM_DETAIL: {\r\n            return{\r\n                ...state,\r\n                albumStatus: '',\r\n                albumDetailInfo: '',\r\n                albumCurrentPage: 1,\r\n            }\r\n        }\r\n        case playList.PLAYLIST_LOAD_STARTED: {\r\n            return {\r\n                ...state,\r\n                playListStatus: Status.LOADING\r\n            }\r\n        }\r\n        case playList.PLAYLIST_LOAD_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                playListStatus: Status.SUCCESS,\r\n                playListResult: action.playListResult\r\n            }\r\n        }\r\n        case playList.PLAYLIST_LOAD_FAILURE: {\r\n            return {\r\n                ...state,\r\n                playListStatus: Status.FAILURE\r\n            }\r\n        }\r\n        case playList.PLAYLIST_PAGE_CHANGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.page,\r\n            }\r\n        }\r\n        case playList.ALBUM_PAGE_CHANGE: {\r\n            return {\r\n                ...state,\r\n                albumCurrentPage: action.page,\r\n            }\r\n        }\r\n        default: {\r\n            return state === undefined ? {} : state\r\n        }\r\n    }\r\n}","import * as audioController from './actionTypes'\r\nimport {saveSongToLocalStorage, deleteSongInLocalStorage, saveCurrentSongIndexInLocalStorage} from \"../../utils\"\r\nimport {message} from \"../common/message\"\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case audioController.TOGGLE_SONG_LIST_WINDOW: {\r\n            return {\r\n                ...state,\r\n                showSongListWindow: !state.showSongListWindow,\r\n            }\r\n        }\r\n        case audioController.CHANGE_AUDIO_STATUS: {\r\n            return {\r\n                ...state,\r\n                AudioStatus: action.status\r\n            }\r\n        }\r\n        case audioController.APPEND_THE_SONG: {\r\n            let songList = state['songList']\r\n            let cloneList = JSON.parse(JSON.stringify(songList))\r\n            let isTheSongNotExisted = songList.every((value) => value.id !== action.songInfo.id)\r\n            if (isTheSongNotExisted) {\r\n                cloneList.push(action.songInfo)\r\n                saveSongToLocalStorage(action.songInfo)\r\n                message.success('添加成功', 2000)\r\n            } else {\r\n\r\n                message.warning('歌曲已存在', 2000)\r\n            }\r\n            return {\r\n                ...state,\r\n                songList: cloneList,\r\n            }\r\n        }\r\n        case audioController.DELETE_THE_SONG: {\r\n            let songList = state['songList']\r\n            let cloneList = JSON.parse(JSON.stringify(songList))\r\n            let deleteSongIndex = action.songIndex\r\n            let currentSongIndex = state.currentSongExtraInfo.currentSongIndex\r\n            let listLength = cloneList.length\r\n            deleteSongInLocalStorage(deleteSongIndex)\r\n            cloneList.splice(deleteSongIndex, 1)\r\n            let justOneSong = listLength === 1\r\n            let isCurrentSong = currentSongIndex === deleteSongIndex\r\n            let isTheLastSong = currentSongIndex === listLength - 1\r\n            let beforeCurrentSong = currentSongIndex < deleteSongIndex\r\n            let updateCurrentSongIndex = -1\r\n            let updateCurrentLyric = state.currentSongExtraInfo.currentLyric\r\n            if (justOneSong) {\r\n                updateCurrentSongIndex = -1\r\n            } else if (isCurrentSong) {\r\n                if (isTheLastSong) {\r\n                    updateCurrentSongIndex = currentSongIndex - 1\r\n                } else {\r\n                    updateCurrentSongIndex = currentSongIndex\r\n                }\r\n                updateCurrentLyric = []\r\n            } else {\r\n                if (beforeCurrentSong) {\r\n                    updateCurrentSongIndex = currentSongIndex\r\n                } else {\r\n                    updateCurrentSongIndex = currentSongIndex -1\r\n                }\r\n            }\r\n            saveCurrentSongIndexInLocalStorage(updateCurrentSongIndex)\r\n            return {\r\n                ...state,\r\n                songList: cloneList,\r\n                currentSongExtraInfo: {\r\n                    ...state.currentSongExtraInfo,\r\n                    currentLyric: updateCurrentLyric,\r\n                    currentSongIndex: updateCurrentSongIndex,\r\n                }\r\n            }\r\n        }\r\n        case audioController.PLAY_THE_SONG_IN_PAGE: {\r\n            let songList = state['songList']\r\n            let cloneList = JSON.parse(JSON.stringify(songList))\r\n            let updateCurrentSongIndex = songList.findIndex((song) => song.id === action.songInfo.id)\r\n            let isTheSongNotExisted = updateCurrentSongIndex === -1\r\n            if (isTheSongNotExisted) {\r\n                cloneList.push(action.songInfo)\r\n                saveSongToLocalStorage(action.songInfo)\r\n                updateCurrentSongIndex = cloneList.length - 1\r\n            }\r\n            saveCurrentSongIndexInLocalStorage(updateCurrentSongIndex)\r\n            return {\r\n                ...state,\r\n                songList: cloneList,\r\n                currentSongExtraInfo: {\r\n                    ...state.currentSongExtraInfo,\r\n                    currentSongIndex: updateCurrentSongIndex,\r\n                    currentLyricIndex: -1,\r\n                },\r\n            }\r\n        }\r\n        case audioController.PLAY_THE_SONG_IN_LIST: {\r\n            saveCurrentSongIndexInLocalStorage(action.songIndex)\r\n            return {\r\n                ...state,\r\n                currentSongExtraInfo: {\r\n                    ...state.currentSongExtraInfo,\r\n                    currentSongIndex: action.songIndex,\r\n                    currentLyricIndex: -1,\r\n                    currentLyric: [],\r\n                }\r\n            }\r\n        }\r\n        case audioController.PLAY_NEXT_SONG: {\r\n            let modeType = action.modeType\r\n            let currentSongIndex = state.currentSongExtraInfo.currentSongIndex\r\n            let LengthOfSongList = state.songList.length\r\n            let mapModeTypeToNextStep = {\r\n                loop: action.loopStep,\r\n                circle: 0,\r\n                random: parseInt(LengthOfSongList * Math.random()),\r\n            }\r\n            let step = mapModeTypeToNextStep[modeType]\r\n            let nextSongIndex = (currentSongIndex + step + LengthOfSongList) % LengthOfSongList\r\n            if (currentSongIndex === -1) {\r\n                nextSongIndex = -1\r\n            }\r\n            let currentLyric = []\r\n            if (nextSongIndex === currentSongIndex) {\r\n                currentLyric = state.currentSongExtraInfo.currentLyric\r\n            }\r\n            saveCurrentSongIndexInLocalStorage(nextSongIndex)\r\n            return {\r\n                ...state,\r\n                currentSongExtraInfo: {\r\n                    ...state.currentSongExtraInfo,\r\n                    currentSongIndex: nextSongIndex,\r\n                    currentLyric,\r\n                    currentLyricIndex: -1,\r\n                },\r\n            }\r\n        }\r\n        // case audioController.GET_SONG: {\r\n        //     return {\r\n        //         ...state,\r\n        //         currentSongExtraInfo: {\r\n        //             ...state.currentSongExtraInfo,\r\n        //             url: action.url,\r\n        //         }\r\n        //     }\r\n        // }\r\n        case audioController.GET_LYRIC: {\r\n            return {\r\n                ...state,\r\n                currentSongExtraInfo: {\r\n                    ...state.currentSongExtraInfo,\r\n                    currentLyric: action.lyric,\r\n                },\r\n            }\r\n        }\r\n        case audioController.GET_CURRENT_INDEX: {\r\n            let index = action.currentLyricIndex\r\n            if (index === undefined) {\r\n                console.log('index undefined')\r\n                return {\r\n                    ...state,\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    currentSongExtraInfo: {\r\n                        ...state.currentSongExtraInfo,\r\n                        currentLyricIndex: index,\r\n                    },\r\n                }\r\n            }\r\n        }\r\n        case audioController.CHANGE_PLAY_MODE: {\r\n            return {\r\n                ...state,\r\n                playMode: action.modeType,\r\n            }\r\n        }\r\n        default: {\r\n            return state === undefined ? {} : state\r\n        }\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PlayerApp from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport Store from './Store'\n\nconst app = (\n    <Provider store={Store}>\n        <PlayerApp />\n    </Provider>\n)\n\nconst container = document.getElementById('root')\n\nReactDOM.render(app,container)\n\nserviceWorker.unregister();"],"sourceRoot":""}