{"version":3,"sources":["utils.js","components/homePage/views/ImageSlider.js","api/api.js","components/homePage/actions.js","components/common/message/message.js","components/homePage/views/Home.js","components/homePage/actionTypes.js","components/playListPage/actions.js","components/playListPage/actionTypes.js","components/playListPage/views/PlayListItem.js","components/common/PageSelector.js","components/common/Loading.js","components/playListPage/views/PlayList.js","components/playListPage/status.js","components/playListPage/views/TagItem.js","components/playListPage/views/TagSelector.js","components/playListPage/views/icon.js","components/common/icon.js","components/searchPage/actions.js","components/searchPage/actionTypes.js","components/searchPage/views/SearchBar.js","components/common/message/views/icons.js","components/common/message/views/Message.js","components/common/message/views/MessageList.js","components/audioController/actions.js","components/audioController/actionTypes.js","components/audioController/views/icon.js","components/audioController/views/AudioController.js","components/audioController/views/SongItem.js","components/audioController/views/SongList.js","components/audioController/views/MusicController.js","components/searchPage/views/icons.js","components/searchPage/views/SearchItem.js","components/searchPage/views/SearchList.js","components/searchPage/views/SearchPage.js","components/searchPage/status.js","components/playListPage/views/AlbumDetail.js","components/playListPage/views/ModalPortal.js","components/playListPage/views/PlayListPage.js","components/NotFound.js","components/Menu.js","components/Footer.js","components/App.js","serviceWorker.js","Store.js","components/homePage/reducer.js","components/searchPage/reducer.js","components/playListPage/reducer.js","components/audioController/reducer.js","index.js"],"names":["timeFormat","seconds","m","String","Math","floor","s","length","concat","saveCurrentSongIndexInLocalStorage","index","localStorage","setItem","JSON","stringify","saveSongToLocalStorage","songInfo","songList","parse","getItem","push","getCurrentSongInfo","theState","currentSongIndex","currentSongExtraInfo","initSongInfo","parseLyric","lyric","oneLyricInfo","indexOfTime","indexOf","oneLyric","slice","time","timeInfo","timeList","split","map","value","exp","pow","timeDeFormat","argsFromQuery","query","o","forEach","e","_e$split","_e$split2","Object","slicedToArray","k","v","changeImgResolution","url","pixel","list","parseClass","classNames","classNameList","_i","_Object$keys","keys","c","join","ImageSlider","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","currentIndex","handlerNextImage","bind","assertThisInitialized","autoPlay","stopAutoPlay","handleClickPoint","changeTheIndexOfImg","setState","step","lengthOfImages","images","indexOfNextImg","event","Number","target","dataset","playNextImage","_this2","timerID","setInterval","clearInterval","_this3","mode","react_default","a","createElement","className","onMouseOver","onMouseOut","onClick","data-step","classNameOfPoint","slide-point","active-point","key","data-index","_this$props","widthOfImg","heightOfSlider","widthOfSlider","offset","style","width","height","transform","src","picUrl","alt","_this$props2","mapIndexOffsetToStyle","-1","zIndex","scale","0","1","other","left","indexOffset","undefined","_style","styleOfImg","position","Component","MusicApi","queryObj","callback","_queryObj","objectSpread","input","pageSize","page","company","path","get","_queryObj2","category","_queryObj3","albumId","lrcUrl","Api","baseUrl","name","ajax","abortObj","abort","abortName","isPathEqualToUrl","args","method","data","abortRequest","request","_args","r","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","status","console","log","send","registerAbort","notification","Home","fetchImgInHomePage","views_ImageSlider","connect","homePageReducer","dispatch","getImgInHomePage","imgObj","response","type","playListTagChange","tagName","PlayListItem","_this$props$itemInfo","itemInfo","id","coverImgUrl","coverThumbImgUrl","data-id","fetchAlbumDetailInfo","title","AlbumId","arguments","albumDetailInfo","playListResult","code","PageSelector","handleChangePage","isPreviousAndNextCanBeClicked","_this$props$selectorI","selectorInfo","totalPage","currentPage","getPageSelector","changePage","pushHistory","_this$props$selectorI2","previousCanNotBeClicked","nextCanNotBeClicked","previousClassName","nextClassName","previousAndNext","_previousAndNext","disabled","showMiddleTag","endPage","totalTagCount","result","i","lastList","startList","changingTagCount","end","unshift","toConsumableArray","Loading","container","document","querySelector","icon","viewBox","cx","cy","fill","ReactDOM","createPortal","PlayList","getSelectorInfo","params","location","search","activeTag","cat","fetchHotPlayList","decodeURI","prevProps","prevState","snapshot","newPage","history","common_Loading","views_PlayListItem","common_PageSelector","showHotPlayList","PlayListReducer","playListStatus","hotPlayList","playListLoadSuccess","playListPageChangePage","withRouter","TagItem","toggleShow","theTagTabs","Link","getClassName","to","tagChange","TagSelector","mainTags","styleTags","languageTags","senceTags","emotionTags","themeTags","mapTagToMain","语种","风格","场景","情感","主题","show","hide","clickOnBlankArea","onclick","nativeEvent","stopImmediatePropagation","classNameOfIcon","select-icon","rotated","classNameOfTagsContainer","playlist-tags-container","hidden","classNameOfMainTag","playlist-main-tag","active-tag","d","pathname","views_TagItem","loadingIcon","inputChange","SearchBar","fillSearchContentInSearchBar","onSearch","onChange","onKeyPress","searchObj","searchContent","parseUrlGetSearchContent","searchInput","isEqualToOldSearchContent","isAtSearchPage","window","urlObj","getSearchUrl","trim","classNameOfBar","search-bar-container","before-searched","searchResult","placeholder","onKeyDown","SearchBarReducer","icons","loading","success","error","info","warning","Message","mapTypeToIcon","content","MessageList","messages","removeMessage","Date","getTime","message","getMessageKey","setTimeout","duration","previousState","filter","onClose","react","views_Message","div","body","appendChild","render","views_MessageList","addMessage","destroy","unmountComponentAtNode","removeChild","createNotification","common_message_message","toggleSongListWindow","changeAudioStatus","changePlayMode","modeType","saveCurrentLyricIndex","currentLyricIndex","appendTheSong","deleteTheSong","songIndex","playTheSongInPage","playTheSongInList","playNextSong","loopStep","getLyric","getLyricFromNet","l","lyricList","lyricsArray","_loop","_parseLyric","repeatIndex","findIndex","theLyric","lyricBeforeTranslated","element","translatedLyric","clearTimeRepeat","isNaN","lyricItem","sort","prev","current","parseLyricArray","previousBtn","nextBtn","volumeBtn","listBtn","deleteBtn","AudioController","mapEnglishToChinese","loop","circle","random","isFirstLoad","volume","currentTime","isHoverOnSongSlider","isHoverOnVolumeBtn","coolDown","isSliding","isVolumeSliding","audio","React","createRef","songSlider","volumeSlider","playOrPause","clickToSeek","mouseDownToSeek","mouseMoveToSeek","afterSeek","handleHover","changeToPlayNextSong","toggleSongList","hoverVolumeBtn","clickToChange","mouseDownToChange","mouseMoveToChange","afterChange","bindHotKey","addEventListener","currentSongInfo","lrc","play","parseLyricIndex","_this2$props","lengthOfSongList","playMode","ctrlKey","deltaTime","theLastLyricTime","lyricInfo","isStart","isNotEnd","currentLyric","getNextLyricIndex","currentSrc","AudioStatus","pause","classList","contains","_event$currentTarget$","currentTarget","getBoundingClientRect","clientX","add","requestAnimationFrame","seek","_this$songSlider$curr","dragPosition","toFixed","remove","_event$currentTarget$2","_this4","change","_this$volumeSlider$cu","toggle","modeList","nextModeType","_this5","_this$state","songPercentage","_this$props$currentSo","singer","pic","playModeTitle","classNameOfController","audio-controller","playlist-opened","showSongListWindow","classNameOfSongSlider","song-slider","hover","classNameOfVolumeSlider","volume-bar","none-width","onMouseMove","ref","onMouseDown","data-mode","AudioReducer","SongItem","handlePlay","handlePause","currentSongId","_this$props$songInfo","isTheSongPlaying","color","getPlayButtonSvgInList","SongList","activeLyric","scrollTop","offsetTop","getTheActiveLyricOffset","classNameOfSongList","song-list","backgroundImage","views_SongItem","classNameOfLyric","lyric-item","active","MusicController","views_AudioController","views_SongList","appendBtn","actions","SearchItem","handleAppend","copyright","_this$props$result","isOdd","classNameOfItem","search-item-container","odd","getPlayOrPauseButtonSvg","SearchList","ar","artist","privilege","dt","al","fl","totalCount","songCount","ceil","searchPage","searchData","songs","num","views_SearchItem","dataCleaning","SearchPage","fetchSearchResult","views_SearchList","views_SearchBar","showSearchResult","AlbumDetail","isAllDescriptionShowed","descriptionToggle","getPageSelectorInfo","trackCount","albumPageSize","albumCurrentPage","description","start","dataOfShowedAlbums","tracks","classNameOfAlbumInfo","album-list-info","all-description-showed","classNameOfDescription","album-list-description","fetchedData","artists","album","blurPicUrl","albumChangePage","ModalPortal","deleteDetailInfo","albumStatus","deleteItemDetail","views_AlbumDetail","showAlbumList","albumDetail","PlayListPage","views_TagSelector","views_PlayList","views_ModalPortal","NotFound","Menu","_this$props$searchBar","searchBar","searchPath","menus","text","playList","href","isCurrent","currentPathname","ownProps","Footer","App","BrowserRouter","basename","process","Fragment","components_Menu","Switch","Route","exact","component","components_Footer","audioController_views_MusicController","Boolean","hostname","match","initValue","loadSongListInLocalStorage","loadCurrentSongIndexInLocalStorage","reducerObj","action","cloneList","every","deleteSongIndex","listLength","splice","deleteSongInLocalStorage","justOneSong","isCurrentSong","isTheLastSong","beforeCurrentSong","updateCurrentSongIndex","updateCurrentLyric","song","LengthOfSongList","nextSongIndex","parseInt","reducer","combineReducers","middleware","thunkMiddleware","storeEnhancers","composeWithDevTools","applyMiddleware","apply","Store","createStore","app","es","store","src_components_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e3f4867c.chunk.js","sourcesContent":["export const timeFormat = function(seconds) {\r\n    if (!seconds) {\r\n        return '00:00'\r\n    }\r\n    let m = String(Math.floor(seconds / 60))\r\n    let s = String(Math.floor(seconds % 60))\r\n    if (s.length === 1) {\r\n        s = \"0\" + s\r\n    }\r\n    if (m.length === 1) {\r\n        m = \"0\" + m\r\n    }\r\n    return `${m}:${s}`\r\n}\r\n\r\nexport const timeDeFormat = (timeInfo) => {\r\n    let timeList = timeInfo.split(':')\r\n    let length = timeList.length\r\n    let time = 0\r\n    timeList.map((value, index) => {\r\n        let exp = length - index - 1\r\n        time += value * 60 ** exp\r\n        return 0\r\n    })\r\n    return time\r\n}\r\n\r\nexport const loadCurrentSongIndexInLocalStorage = () => {\r\n    let currentSongIndex = JSON.parse(localStorage.getItem('currentSongIndex'))\r\n    if (currentSongIndex === null) {\r\n        currentSongIndex = -1\r\n    }\r\n    return currentSongIndex\r\n}\r\n\r\nexport const saveCurrentSongIndexInLocalStorage = (index) => {\r\n    localStorage.setItem('currentSongIndex', JSON.stringify(index))\r\n}\r\n\r\nexport const loadSongListInLocalStorage = () => {\r\n    let songList = JSON.parse(localStorage.getItem('songList'))\r\n    if (songList === null) {\r\n        songList = []\r\n    }\r\n    return songList\r\n}\r\n\r\nexport const saveSongToLocalStorage = (songInfo) => {\r\n    let songList = JSON.parse(localStorage.getItem('songList'))\r\n    if (songList === null) {\r\n        songList = []\r\n    }\r\n    songList.push(songInfo)\r\n    localStorage.setItem('songList', JSON.stringify(songList))\r\n}\r\n\r\nexport const deleteSongInLocalStorage = (songIndex) => {\r\n    let songList = JSON.parse(localStorage.getItem('songList'))\r\n    songList.splice(songIndex, 1)\r\n    localStorage.setItem('songList', JSON.stringify(songList))\r\n}\r\n\r\nexport const getCurrentSongInfo = (theState) => {\r\n    let songList = theState.songList\r\n    let currentSongIndex = theState.currentSongExtraInfo.currentSongIndex\r\n    let currentSongInfo = {}\r\n    if (currentSongIndex === -1) {\r\n        currentSongInfo = theState.initSongInfo\r\n    } else {\r\n        currentSongInfo = songList[currentSongIndex]\r\n    }\r\n    return currentSongInfo\r\n}\r\n\r\nconst clearTimeRepeat = (lyricList, repeatIndex, lyricBeforeTranslated) => {\r\n    let result = lyricList\r\n    let element = result[repeatIndex].lyric\r\n    if (element === '...') {\r\n        result[repeatIndex].lyric = lyricBeforeTranslated\r\n    } else {\r\n        result[repeatIndex].translatedLyric = element\r\n        result[repeatIndex].lyric = lyricBeforeTranslated\r\n    }\r\n}\r\n\r\nconst parseLyric = (lyric) => {\r\n    let oneLyricInfo = lyric\r\n    let indexOfTime = oneLyricInfo.indexOf(']')\r\n    let oneLyric = oneLyricInfo.slice(indexOfTime + 1)\r\n    let timeInfo = oneLyricInfo.slice(1, indexOfTime)\r\n    let time = timeDeFormat(timeInfo)\r\n    return {\r\n        oneLyric,\r\n        time\r\n    }\r\n}\r\n\r\nexport const parseLyricArray = (lyricsArray) => {\r\n    let result = []\r\n    for (let i = 0; i < lyricsArray.length; i++) {\r\n        let oneLyricInfo = lyricsArray[i]\r\n        let {oneLyric, time} = parseLyric(oneLyricInfo)\r\n        let repeatIndex = result.findIndex((theLyric) => {\r\n            return theLyric.time === time\r\n        })\r\n        let isTimeRepeat = repeatIndex !== -1\r\n        if (isTimeRepeat) {\r\n            clearTimeRepeat(result, repeatIndex, oneLyric)\r\n        } else {\r\n            if (isNaN(time)) {\r\n                continue\r\n            }\r\n            if (oneLyric === '') {\r\n                oneLyric = '...'\r\n            }\r\n            let lyricItem = {\r\n                time,\r\n                lyric: oneLyric,\r\n                translatedLyric: null,\r\n            }\r\n            result.push((lyricItem))\r\n        }\r\n    }\r\n    result.sort((prev, current) => prev.time - current.time)\r\n    return result\r\n}\r\n\r\nexport const argsFromQuery = (query) => {\r\n    if (query[0] === '?') {\r\n        query = query.slice(1)\r\n    }\r\n    let o = {}\r\n    if (query.length === 0) {\r\n        return o\r\n    }\r\n    query.split('&').forEach(e => {\r\n        let [k, v] = e.split('=')\r\n        o[k] = v\r\n    })\r\n    return o\r\n}\r\n\r\nexport const changeImgResolution = (url, pixel) => {\r\n    if (!url) {\r\n        return url\r\n    }\r\n    let list = url.split('?')\r\n    return `${list[0]}?param=${pixel}y${pixel}`\r\n}\r\n\r\nexport const parseClass = (classNames) => {\r\n    let classNameList = []\r\n    for (let c of Object.keys(classNames)) {\r\n        let isExist = classNames[c]\r\n        if (isExist) {\r\n            classNameList.push(c)\r\n        }\r\n    }\r\n    return classNameList.join(' ')\r\n}","import React, { Component } from \"react\"\r\nimport {parseClass} from \"../../../utils\"\r\n\r\nclass ImageSlider extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            currentIndex: 0,\r\n        }\r\n        this.handlerNextImage = this.handlerNextImage.bind(this)\r\n        this.autoPlay = this.autoPlay.bind(this)\r\n        this.stopAutoPlay = this.stopAutoPlay.bind(this)\r\n        this.handleClickPoint = this.handleClickPoint.bind(this)\r\n        this.changeTheIndexOfImg = this.changeTheIndexOfImg.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.autoPlay()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.stopAutoPlay()\r\n    }\r\n\r\n    changeTheIndexOfImg(index) {\r\n        this.setState({\r\n            currentIndex: index,\r\n        })\r\n    }\r\n\r\n    playNextImage(step) {\r\n        let lengthOfImages = this.props.images.length\r\n        let indexOfNextImg = (this.state.currentIndex + step + lengthOfImages) % lengthOfImages\r\n        this.changeTheIndexOfImg(indexOfNextImg)\r\n    }\r\n\r\n    handlerNextImage(event) {\r\n        let step = Number(event.target.dataset.step)\r\n        this.playNextImage(step)\r\n    }\r\n\r\n    autoPlay() {\r\n        this.timerID = setInterval(() => {\r\n            this.playNextImage(1)\r\n        }, 500000)\r\n    }\r\n\r\n    stopAutoPlay() {\r\n        clearInterval(this.timerID)\r\n    }\r\n\r\n    handleClickPoint(event) {\r\n        let index = Number(event.target.dataset.index)\r\n        this.changeTheIndexOfImg(index)\r\n    }\r\n\r\n    render() {\r\n        let images = this.props.images\r\n        let mode = this.props.mode\r\n        return(\r\n            <div className='image-slider' onMouseOver={this.stopAutoPlay} onMouseOut={this.autoPlay}>\r\n                <button className='slide-button slide-left vertical-center'\r\n                        onClick={this.handlerNextImage}\r\n                        data-step=\"-1\"\r\n                >\r\n                    &lt;\r\n                </button>\r\n                {this[mode]()}\r\n                <button className='slide-button slide-right vertical-center'\r\n                        onClick={this.handlerNextImage}\r\n                        data-step=\"1\"\r\n                >\r\n                    &gt;\r\n                </button>\r\n                <div className='slide-point-container'>\r\n                    {\r\n                        images.map((value, index) => {\r\n                            let classNameOfPoint = parseClass({\r\n                                'slide-point': true,\r\n                                'active-point': index === this.state.currentIndex,\r\n                            })\r\n                            return (\r\n                                <span className={classNameOfPoint}\r\n                                  key={index}\r\n                                  data-index={index}\r\n                                  onClick={this.handleClickPoint}\r\n                                > </span>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    smooth() {\r\n        let {widthOfImg, heightOfSlider, images} = this.props\r\n        let widthOfSlider = images.length * widthOfImg\r\n        let offset = -(this.state.currentIndex % widthOfSlider) * widthOfImg || 0\r\n        return (\r\n            <div className='image-slider-container'\r\n                 style={{\r\n                     width: widthOfSlider,\r\n                     height: heightOfSlider,\r\n                     transform: `translate(${offset}px, 0px)`\r\n                 }}\r\n            >\r\n                {\r\n                    images.map((value, index) => (\r\n                        <img key={index} src={value.picUrl} alt=\"轮播图\" />\r\n                    ))\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    carousel() {\r\n        let {widthOfImg, heightOfSlider, images} = this.props\r\n        let currentIndex = this.state.currentIndex\r\n        let length = images.length\r\n        let mapIndexOffsetToStyle = {\r\n            '-1': {\r\n                offset: -widthOfImg / 3,\r\n                zIndex: 1,\r\n                scale: 0.9,\r\n            },\r\n            '0': {\r\n                offset: 0,\r\n                zIndex: 3,\r\n                scale: 1,\r\n            },\r\n            '1': {\r\n                offset: widthOfImg / 3,\r\n                zIndex: 1,\r\n                scale: 0.9,\r\n            },\r\n            other: {\r\n                offset: 0,\r\n                zIndex: 0,\r\n                scale: 0.9,\r\n            }\r\n        }\r\n        return (\r\n            <div className='image-slider-container'\r\n                 style={{\r\n                     width: widthOfImg,\r\n                     height: heightOfSlider,\r\n                     left: '50%',\r\n                     transform: 'translateX(-50%)',\r\n                 }}\r\n            >\r\n                {\r\n                    images.map((value, index) => {\r\n                        let indexOffset = index - currentIndex\r\n                        if (indexOffset === length - 1) {\r\n                            indexOffset = -1\r\n                        } else if (indexOffset === 1 - length) {\r\n                            indexOffset = 1\r\n                        }\r\n                        let style = mapIndexOffsetToStyle[indexOffset]\r\n                        if (style === undefined) {\r\n                            style = mapIndexOffsetToStyle['other']\r\n                        }\r\n                        let {offset, scale, zIndex} = style\r\n                        let styleOfImg = {\r\n                            position: 'absolute',\r\n                            transform: `translate(${offset}px, 0px) scale(${scale})`,\r\n                            zIndex: zIndex,\r\n                        }\r\n                        return (\r\n                            <img key={index} src={value.picUrl} alt=\"轮播图\" style={styleOfImg} />\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ImageSlider","const ajax = function(args, callback) {\r\n    let {method, url, data} = {...args}\r\n    let r = new XMLHttpRequest()\r\n    r.open(method, url, true)\r\n    // r.setRequestHeader('Content-Type', 'application/json')\r\n    r.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded')\r\n    r.onreadystatechange = () => {\r\n        if (r.readyState === 4) {\r\n            if ((r.status >= 200 && r.status < 300) || r.status === 304) {\r\n                callback(r)\r\n            } else {\r\n                console.log('error')\r\n            }\r\n        }\r\n    }\r\n    r.send(data)\r\n    return r\r\n}\r\n\r\nclass Api {\r\n    constructor() {\r\n        this.baseUrl = 'https://v1.itooi.cn/'\r\n    }\r\n\r\n    registerAbort(name, ajax) {\r\n        MusicApi.abortObj[name] = ajax.abort.bind(ajax)\r\n    }\r\n\r\n    abortRequest(abortName) {\r\n        let isRequesting = MusicApi.abortObj[abortName] !== undefined\r\n        if (isRequesting) {\r\n            MusicApi.abortObj[abortName]()\r\n        }\r\n    }\r\n\r\n    get(path, callback, abortName, isPathEqualToUrl) {\r\n        let method = 'GET'\r\n        let url = this.baseUrl + path\r\n        if (isPathEqualToUrl) {\r\n            url = path\r\n        }\r\n        let args = {\r\n            method,\r\n            url,\r\n            data: null,\r\n        }\r\n        this.abortRequest(abortName)\r\n        let request = ajax(args, callback)\r\n        this.registerAbort(abortName, request)\r\n    }\r\n}\r\n\r\nclass MusicApi extends Api {\r\n    searchResult(queryObj, callback) {\r\n        let {input, pageSize, page, company} = {...queryObj}\r\n        let path = `${company}/search?keyword=${input}&type=song&pageSize=${pageSize}&page=${(page - 1)}`\r\n        // 如果需要源数据，加上 &format=1\r\n        let abortName = 'searchResult'\r\n        this.get(path, callback, abortName)\r\n    }\r\n\r\n    hotPlayList(queryObj, callback) {\r\n        let {category, pageSize, page, company} = {...queryObj}\r\n        let path = `${company}/songList/hot?categoryType=${category}&pageSize=${pageSize}&page=${(page - 1)}`\r\n        let abortName = 'hotPlayList'\r\n        this.get(path, callback, abortName)\r\n    }\r\n\r\n    albumDetailInfo(queryObj, callback) {\r\n        let {albumId, company} = {...queryObj}\r\n        let path = `${company}/songList?id=${albumId}`\r\n        let abortName = 'albumDetail'\r\n        this.get(path, callback, abortName)\r\n    }\r\n\r\n    // getSong() {\r\n    //     let abortName = 'getSong'\r\n    //     this.get()\r\n    // }\r\n\r\n    getLyric(lrcUrl, callback) {\r\n        let abortName = 'getLyric'\r\n        this.get(lrcUrl, callback, abortName, true)\r\n    }\r\n\r\n    getImgInHomePage(callback) {\r\n        let url = 'https://v1.itooi.cn/netease/banner'\r\n        let abortName = 'getImgInHomePage'\r\n        this.get(url, callback, abortName, true)\r\n    }\r\n}\r\n\r\nMusicApi.abortObj = {}\r\n\r\nexport {\r\n    MusicApi,\r\n}","import * as homePage from './actionTypes'\r\nimport {MusicApi} from '../../api/api.js'\r\n\r\nexport const getImgInHomePage = (imgObj) => ({\r\n    type: homePage.GET_HOMEPAGE_IMG,\r\n    imgObj,\r\n})\r\n\r\nexport const fetchImgInHomePage = () => {\r\n    return (dispatch) => {\r\n        let api = new MusicApi()\r\n        api.getImgInHomePage((r) => {\r\n            let imgObj = JSON.parse(r.response).data\r\n            dispatch(getImgInHomePage(imgObj))\r\n            console.log('轮播图信息', imgObj)\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport MessageList from './views/MessageList'\r\n\r\nconst createNotification = () => {\r\n    const div = document.createElement('div')\r\n    document.body.appendChild(div)\r\n    const notification = ReactDOM.render(<MessageList />, div)\r\n    return {\r\n        addMessage(message) {\r\n            return notification.addMessage(message)\r\n        },\r\n        destroy() {\r\n            ReactDOM.unmountComponentAtNode(div)\r\n            document.body.removeChild(div)\r\n        }\r\n    }\r\n}\r\n\r\nlet notification\r\nconst message = (type, content, duration = 2000, onClose) => {\r\n    if (!notification) {\r\n        notification = createNotification()\r\n    }\r\n    return notification.addMessage({ type, content, duration, onClose })\r\n}\r\n\r\nexport default {\r\n    info(content, duration, onClose) {\r\n        return message('info', content, duration, onClose)\r\n    },\r\n    success(content, duration, onClose) {\r\n        return message('success', content, duration, onClose)\r\n    },\r\n    warning(content, duration, onClose) {\r\n        return message('warning', content, duration, onClose)\r\n    },\r\n    error(content, duration, onClose) {\r\n        return message('error', content, duration, onClose)\r\n    },\r\n    loading(content, duration = 0, onClose) {\r\n        return message('loading', content, duration, onClose)\r\n    }\r\n}\r\n","import React, { Component } from 'react'\nimport ImageSlider from \"./ImageSlider\"\nimport {connect} from \"react-redux\"\nimport {fetchImgInHomePage} from \"../actions\"\nimport './Home.css'\n\nclass Home extends Component {\n    componentDidMount() {\n        console.log('this.props.images.length', this.props.images)\n        if (this.props.images.length === 0) {\n            this.props.fetchImgInHomePage()\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <ImageSlider\n                    {...{\n                        images: this.props.images,\n                        fetchImgInHomePage: this.props.fetchImgInHomePage,\n                        mode: 'carousel',\n                        widthOfImg: 730,\n                        heightOfSlider: 336,\n                    }}\n                />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    let theState = state.homePageReducer\n    return {\n        images: theState.images,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchImgInHomePage: () => {\n            dispatch(fetchImgInHomePage())\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\n","export const GET_HOMEPAGE_IMG = 'HOMEPAGE/GET_IMG'","import * as playList from './actionTypes.js'\r\nimport {MusicApi} from '../../api/api.js'\r\n\r\n// 热门歌单标签切换\r\nexport const playListTagChange = (tagName) => ({\r\n    type: playList.PLAYLIST_TAG_CHANGE,\r\n    tagName\r\n    })\r\n\r\n// 开始加载歌单具体信息\r\nexport const loadItemDetailStarted = () => ({\r\n    type: playList.LOAD_ITEM_DETAIL_STARTED,\r\n})\r\n\r\n// 加载歌单具体信息成功\r\nexport const loadItemDetailSuccess = (albumDetailInfo) => ({\r\n    type: playList.LOAD_ITEM_DETAIL_SUCCESS,\r\n    albumDetailInfo\r\n})\r\n\r\n// 删除歌单具体信息，即初始化模态弹窗\r\nexport const deleteItemDetail = () => {\r\n    MusicApi.abortObj.albumDetail()\r\n    return {\r\n    type: playList.DELETE_ITEM_DETAIL,\r\n    }\r\n}\r\n\r\n// 热门歌单列表开始加载\r\nexport const playListLoadStarted = () => ({\r\n    type: playList.PLAYLIST_LOAD_STARTED,\r\n})\r\n\r\n// 热门歌单列表加载成功\r\nexport const playListLoadSuccess = (playListResult) => ({\r\n    type: playList.PLAYLIST_LOAD_SUCCESS,\r\n    playListResult,\r\n})\r\n\r\n// 热门歌单列表加载成功\r\nexport const playListLoadFailure = () => ({\r\n    type: playList.PLAYLIST_LOAD_FAILURE,\r\n})\r\n\r\nexport const playListPageChangePage = (page) => ({\r\n    type: playList.PLAYLIST_PAGE_CHANGE,\r\n    page,\r\n})\r\n\r\nexport const albumChangePage = (page) => ({\r\n    type: playList.ALBUM_PAGE_CHANGE,\r\n    page,\r\n})\r\n\r\n// 异步加载热门歌单列表\r\nexport const fetchHotPlayList = (category=\"全部\", page=1, pageSize=60, company='netease') => {\r\n    return (dispatch) => {\r\n        let queryObj = {\r\n            category,\r\n            pageSize,\r\n            page,\r\n            company,\r\n        }\r\n        dispatch(playListLoadStarted())\r\n        let api = new MusicApi()\r\n        api.hotPlayList(queryObj, (r) => {\r\n            let playListResult = JSON.parse(r.response)\r\n            console.log('加载热门歌单列表完成', playListResult)\r\n            if (playListResult.code === 200) {\r\n                dispatch(playListLoadSuccess(playListResult.data))\r\n            } else {\r\n                dispatch(playListLoadFailure())\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n// 加载歌单具体信息\r\nexport const fetchAlbumDetailInfo = (albumId, company='netease') => {\r\n    console.log('albumId', albumId)\r\n    return (dispatch) => {\r\n        let args = {\r\n            albumId,\r\n            company,\r\n        }\r\n        dispatch(loadItemDetailStarted())\r\n        let api = new MusicApi()\r\n        api.albumDetailInfo(args, (r) => {\r\n            let playListResult = JSON.parse(r.response)\r\n            console.log('加载歌单完成', playListResult)\r\n            if (playListResult.code === 200) {\r\n                dispatch(loadItemDetailSuccess(playListResult))\r\n            } else {\r\n                dispatch(playListLoadFailure())\r\n            }\r\n        })\r\n    }\r\n}","export const PLAYLIST_TAG_CHANGE = \"PAGE/PLAYLIST_TAG_CHANGE\"\r\n\r\nexport const LOAD_ITEM_DETAIL_STARTED = \"PAGE/LOAD_ITEM_DETAIL_STARTED\"\r\n\r\nexport const LOAD_ITEM_DETAIL_SUCCESS = \"PAGE/LOAD_ITEM_DETAIL_SUCCESS\"\r\n\r\nexport const DELETE_ITEM_DETAIL = 'PAGE/DELETE_ITEM_DETAIL'\r\n\r\nexport const PLAYLIST_LOAD_STARTED = 'PAGE/PLAYLIST_LOAD_STARTED'\r\n\r\nexport const PLAYLIST_LOAD_SUCCESS = 'PAGE/LIST_LOAD_SUCCESS'\r\n\r\nexport const PLAYLIST_LOAD_FAILURE = 'PAGE/PLAYLIST_LOAD_FAILURE'\r\n\r\nexport const PLAYLIST_PAGE_CHANGE = 'PAGE/PLAYLIST_PAGE_CHANGE'\r\n\r\nexport const ALBUM_PAGE_CHANGE = 'PAGE/ALBUM_PAGE_CHANGE'","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {fetchAlbumDetailInfo} from '../actions'\r\nimport {changeImgResolution} from '../../../utils'\r\n\r\nclass PlayListItem extends Component {\r\n\r\n    render() {\r\n        let {id, name, coverImgUrl} = {...this.props.itemInfo}\r\n        let coverThumbImgUrl = changeImgResolution(coverImgUrl, 400)\r\n        return (\r\n            <div className=\"album-container\">\r\n                <div className=\"album-img\" data-id={id} onClick={this.props.fetchAlbumDetailInfo.bind(this, id)}>\r\n                    <img src={coverThumbImgUrl} alt=\"歌单封面\"/>\r\n                </div>\r\n                <div className=\"album-info\" title={name}>\r\n                    <span>{name}</span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchAlbumDetailInfo: (AlbumId) => {\r\n            dispatch(fetchAlbumDetailInfo(AlbumId))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(PlayListItem)","import React, {Component} from 'react'\r\nimport './common.css'\r\n\r\nclass PageSelector extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.handleChangePage = this.handleChangePage.bind(this)\r\n        this.isPreviousAndNextCanBeClicked = this.isPreviousAndNextCanBeClicked.bind(this)\r\n    }\r\n\r\n    static getPageSelector (endPage, currentPage, totalTagCount) {\r\n        if (endPage <= totalTagCount) {\r\n            let result = []\r\n            for (let i = 1; i <= endPage; i++) {\r\n                result.push(i)\r\n            }\r\n            return result\r\n        }\r\n        let list = []\r\n        let lastList = []\r\n        let startList = []\r\n        let changingTagCount = totalTagCount - 3\r\n        let start = currentPage - changingTagCount/ 2\r\n        let end = currentPage + changingTagCount / 2\r\n        for (let i = start; i <= end; i++) {\r\n            if (i <= 1) {\r\n                lastList.push(changingTagCount + i + 1)\r\n            } else if (i >= endPage) {\r\n                startList.push(i - changingTagCount - 1)\r\n            } else {\r\n                list.push(i)\r\n            }\r\n        }\r\n        let result = [...startList,...list,...lastList]\r\n        if (result[0] !== 2) {\r\n            result.unshift('...')\r\n        }\r\n        if (result[result.length - 1] < endPage - 1) {\r\n            result.push('...')\r\n        }\r\n        result = [1, ...result, endPage]\r\n        return result\r\n    }\r\n\r\n    showMiddleTag() {\r\n        let {totalPage, currentPage} = {...this.props.selectorInfo}\r\n        if (totalPage === 0) {\r\n            return\r\n        }\r\n        let pageList = PageSelector.getPageSelector(totalPage, currentPage, 9)\r\n        return pageList.map((page, index) => {\r\n            if (page === '...') {\r\n                return (\r\n                    <span className=\"page-selector-ellipsis\" key={index}>...</span>\r\n                )\r\n            } else if (page === currentPage) {\r\n                return (\r\n                    <button className=\"page-selector-current page-selector-tag page-btn\" key={index}>{page}</button>\r\n                )\r\n            } else {\r\n                return (\r\n                    <button className=\"page-selector-tag page-btn\" key={index} onClick={this.handleChangePage(page)}>{page}</button>\r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n    handleChangePage(page) {\r\n        return () => {\r\n            this.props.changePage(page)\r\n            if (this.props.pushHistory) {\r\n                this.props.pushHistory(page)\r\n            }\r\n        }\r\n    }\r\n\r\n    isPreviousAndNextCanBeClicked() {\r\n        let {totalPage, currentPage} = {...this.props.selectorInfo}\r\n        let previousCanNotBeClicked = false\r\n        let nextCanNotBeClicked = false\r\n        if (totalPage === 1) {\r\n            previousCanNotBeClicked = true\r\n            nextCanNotBeClicked = true\r\n        }\r\n        if (currentPage === 1) {\r\n            previousCanNotBeClicked = true\r\n        } else if (currentPage === totalPage) {\r\n            nextCanNotBeClicked = true\r\n        }\r\n        let previousClassName = previousCanNotBeClicked ? 'previous-ban-click' : 'previous-can-click'\r\n        let nextClassName = nextCanNotBeClicked ? 'next-ban-click' : 'next-can-click'\r\n        return {\r\n            previousCanNotBeClicked,\r\n            nextCanNotBeClicked,\r\n            previousClassName,\r\n            nextClassName,\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let {currentPage} = {...this.props.selectorInfo}\r\n        let previousAndNext = this.isPreviousAndNextCanBeClicked()\r\n        let {previousCanNotBeClicked, nextCanNotBeClicked, previousClassName, nextClassName} = {...previousAndNext}\r\n        return (\r\n            <div className=\"page-selector\">\r\n                <button className={`${previousClassName} page-btn`} disabled={previousCanNotBeClicked} onClick={this.handleChangePage(currentPage - 1)}>&lt;</button>\r\n                {this.showMiddleTag()}\r\n                <button className={`${nextClassName} page-btn`} disabled={nextCanNotBeClicked} onClick={this.handleChangePage(currentPage + 1)}>&gt;</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PageSelector","import React from 'react'\r\nimport ReactDOM from \"react-dom\"\r\n\r\nconst Loading = () => {\r\n    let container = document.querySelector('#loading-container')\r\n    let icon = (\r\n        <div className=\"loading-container\">\r\n            <svg className=\"load\" viewBox=\"25 25 50 50\">\r\n                <circle className=\"loading\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\">\r\n                </circle>\r\n            </svg>\r\n        </div>\r\n    )\r\n\r\n    return ReactDOM.createPortal(icon, container)\r\n}\r\n\r\nexport default Loading","import React, { Component } from 'react'\r\nimport * as Status from '../status'\r\nimport {connect} from 'react-redux'\r\nimport {fetchHotPlayList, playListTagChange, playListPageChangePage} from '../actions'\r\nimport {withRouter} from 'react-router-dom'\r\nimport PlayListItem from './PlayListItem'\r\nimport {argsFromQuery} from '../../../utils'\r\nimport PageSelector from '../../common/PageSelector'\r\nimport Loading from \"../../common/Loading\"\r\n\r\nclass PlayList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.pushHistory = this.pushHistory.bind(this)\r\n        this.getSelectorInfo = this.getSelectorInfo.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.status !== 'success') {\r\n            let params = argsFromQuery(this.props.location.search)\r\n            let activeTag = params.cat\r\n            let page = params.page\r\n            this.props.fetchHotPlayList(activeTag, page)\r\n            this.props.playListTagChange(decodeURI(activeTag))\r\n            this.props.changePage(page)\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.location !== prevProps.location) {\r\n            let params = argsFromQuery(this.props.location.search)\r\n            let activeTag = params.cat\r\n            let page = params.page\r\n            this.props.fetchHotPlayList(activeTag, page)\r\n        }\r\n    }\r\n\r\n    pushHistory(newPage) {\r\n        this.props.history.push(`playlist?cat=${this.props.activeTag}&page=${newPage}`)\r\n    }\r\n\r\n    getSelectorInfo() {\r\n        return {\r\n            totalPage: this.props.totalPage,\r\n            currentPage: Number(this.props.currentPage),\r\n        }\r\n    }\r\n\r\n    showHotPlayList() {\r\n        switch (this.props.status) {\r\n            case Status.LOADING: {\r\n                return (\r\n                    <Loading />\r\n                )\r\n            }\r\n            case Status.SUCCESS: {\r\n                let playListResult = this.props.playListResult\r\n                return (\r\n                    <div className=\"playlist-result\">\r\n                        {playListResult.map((value, index) => {\r\n                            return <PlayListItem key={index} itemInfo={value} />\r\n                        })}\r\n                        <PageSelector selectorInfo={this.getSelectorInfo()} changePage={this.props.changePage} pushHistory={this.pushHistory}/>\r\n                    </div>\r\n                )\r\n            }\r\n            case Status.FAILURE: {\r\n                return (\r\n                    <div className=\"failed-container\">热门歌单加载失败</div>\r\n                )\r\n            }\r\n            default: {\r\n                return (\r\n                    <div>PlayList</div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.showHotPlayList()\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateTopProps = (state) => {\r\n    let theState = state.PlayListReducer\r\n    return {\r\n        status: theState.playListStatus,\r\n        playListResult: theState.playListResult,\r\n        activeTag: theState.activeTag,\r\n        currentPage: theState.currentPage,\r\n        pageSize: theState.pageSize,\r\n        totalPage: theState.totalPage,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchHotPlayList: (category, page) => {\r\n            dispatch(fetchHotPlayList(category, page))\r\n        },\r\n        playListTagChange: (tagName) => {\r\n            dispatch(playListTagChange(tagName))\r\n        },\r\n        changePage: (page) => {\r\n            dispatch(playListPageChangePage(page))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateTopProps, mapDispatchToProps)(withRouter(PlayList))","export const INIT = ''\r\nexport const LOADING = 'loading'\r\nexport const SUCCESS = 'success'\r\nexport const FAILURE = 'failure'","import React, { Component } from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nimport {connect} from 'react-redux'\r\nimport {playListTagChange} from \"../actions\"\r\n\r\nclass TagItem extends Component {\r\n\r\n    tagChange(value) {\r\n        this.props.playListTagChange(value)\r\n        this.props.toggleShow()\r\n    }\r\n\r\n    getClassName(value) {\r\n        return this.props.activeTag === value ? \"playlist-tag active-tag\" : \"playlist-tag\"\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"playlist-tag-tabs\">\r\n                {\r\n                    this.props.theTagTabs.map((value, index) => (\r\n                        <Link key={index} className={this.getClassName(value)} to={`/playlist?cat=${value}&page=1`} onClick={this.tagChange.bind(this, value)}>{value}</Link>\r\n                    ))\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateTopProps = (state) => {\r\n    let theState = state.PlayListReducer\r\n    return {\r\n        activeTag: theState.activeTag\r\n    }\r\n}\r\n\r\nconst mapDispatchTopProps = (dispatch) => {\r\n    return {\r\n        playListTagChange: (tagName) => {\r\n            dispatch(playListTagChange(tagName))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateTopProps, mapDispatchTopProps)(TagItem)","import React, { Component } from 'react'\r\nimport {playListTagChange} from '../actions'\r\nimport {connect} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport TagItem from './TagItem'\r\nimport {getSelectIcon} from './icon'\r\nimport {parseClass} from \"../../../utils\"\r\n\r\nclass TagSelector extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.mainTags = ['语种', '风格', '场景', '情感', '主题']\r\n        this.styleTags = ['流行', '摇滚', '民谣', '电子', '舞曲', '说唱', '轻音乐', '爵士', '乡村', 'R&B/Soul', '古典', '民族', '英伦', '金属', '朋克', '蓝调', '雷鬼', '拉丁', '古风', 'Bossa Nova']\r\n        this.languageTags = ['华语', '欧美', '日语', '韩语', '粤语', '小语种']\r\n        this.senceTags = ['清晨', '夜晚', '学习', '工作', '午休', '下午茶', '地铁', '驾车', '运动', '旅行', '散步', '酒吧']\r\n        this.emotionTags = ['怀旧', '清新', '浪漫', '性感', '伤感', '治愈', '放松', '孤独', '感动', '兴奋', '快乐', '安静', '思念']\r\n        this.themeTags = ['影视原声', 'ACG', '儿童', '校园', '游戏', '70后', '80后', '90后', '网络歌曲', 'KTV', '经典', '翻唱', '吉他', '钢琴', '器乐', '榜单', '00后']\r\n        this.mapTagToMain = {\r\n            '语种': this.languageTags,\r\n            '风格': this.styleTags,\r\n            '场景': this.senceTags,\r\n            '情感': this.emotionTags,\r\n            '主题': this.themeTags\r\n        }\r\n        this.state = {\r\n            show: false\r\n        }\r\n\r\n        this.toggleShow = this.toggleShow.bind(this)\r\n        this.hide = this.hide.bind(this)\r\n        this.clickOnBlankArea = this.clickOnBlankArea.bind(this)\r\n        document.onclick = this.hide\r\n    }\r\n\r\n    tagChange(value) {\r\n        this.props.playListTagChange(value)\r\n        this.toggleShow()\r\n    }\r\n\r\n    clickOnBlankArea(e) {\r\n        e.nativeEvent.stopImmediatePropagation()\r\n    }\r\n\r\n    toggleShow(e) {\r\n        this.setState((state) => ({\r\n            show: !state.show,\r\n        }))\r\n        if (e !== undefined) {\r\n            e.nativeEvent.stopImmediatePropagation()\r\n        }\r\n    }\r\n\r\n    hide() {\r\n        this.setState({\r\n            show: false\r\n        })\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.setState = () => {\r\n            return false\r\n        }\r\n    //  防止组件卸载的时候调用 setState 导致 react 报错\r\n    }\r\n\r\n    render() {\r\n        let classNameOfIcon = parseClass({\r\n            'select-icon': true,\r\n            'rotated': this.state.show,\r\n        })\r\n        let classNameOfTagsContainer = parseClass({\r\n            'playlist-tags-container': true,\r\n            'hidden': !this.state.show\r\n        })\r\n        let classNameOfMainTag = parseClass({\r\n            'playlist-main-tag': true,\r\n            'active-tag': this.props.activeTag === '全部',\r\n        })\r\n        return (\r\n            <div className=\"playlist-tags\">\r\n                <span className=\"active-tag-name\" >{this.props.activeTag}</span>\r\n                <span className=\"select-tag-button\" onClick={this.toggleShow}>\r\n                    {this.state.show ? '收起 ' : '展开 '}\r\n                    {getSelectIcon(classNameOfIcon)}\r\n                </span>\r\n                <div className={classNameOfTagsContainer} onClick={this.clickOnBlankArea}>\r\n                    <Link className={classNameOfMainTag}\r\n                          to={{pathname: 'playlist', search: '?cat=全部&page=1'}}\r\n                          onClick={this.tagChange.bind(this, '全部')}\r\n                    >\r\n                        全部\r\n                    </Link>\r\n                    {this.mainTags.map((value, index) => {\r\n                        let theTagTabs = this.mapTagToMain[value]\r\n                        return(\r\n                            <div key={index} className=\"playlist-tag-container\">\r\n                                <div className=\"playlist-tag-class\">{value}</div>\r\n                                <TagItem theTagTabs={theTagTabs} toggleShow={this.toggleShow}/>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateTopProps = (state) => {\r\n    let theState = state.PlayListReducer\r\n    return {\r\n        activeTag: theState.activeTag\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        playListTagChange: (tagName) => {\r\n            dispatch(playListTagChange(tagName))\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateTopProps, mapDispatchToProps)(TagSelector)","import React from \"react\"\r\n\r\nconst getSelectIcon = (className) => (\r\n    <svg className={className} viewBox=\"0 0 1024 1024\">\r\n        <path d=\"M127.5 330.9l0.7-0.7c12.3-12.3 32.4-12.3 44.7 0l339.9 339.9L853 330c12.5-12.5 32.9-12.5 45.4 0s12.5 32.9 0 45.4L536 737.8s-0.1 0.1-0.1 0.2l-0.7 0.7c-12.3 12.3-32.4 12.3-44.7 0l-363-363c-12.3-12.4-12.3-32.5 0-44.8z\">\r\n        </path>\r\n    </svg>\r\n)\r\n\r\nexport {\r\n    getSelectIcon,\r\n}","import React from \"react\"\r\n\r\nconst loadingIcon = (\r\n    <svg className=\"load\" viewBox=\"25 25 50 50\">\r\n        <circle className=\"loading\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\"/>\r\n    </svg>\r\n)\r\n\r\nexport {\r\n    loadingIcon,\r\n}","import * as search from './actionTypes.js'\r\nimport {MusicApi} from '../../api/api.js'\r\n\r\n// 搜索框输入改变\r\nexport const inputChange = (input) => ({\r\n    type: search.INPUT_CHANGE,\r\n    input,\r\n})\r\n\r\n// 开始搜索\r\nexport const searchStarted = (data) => ({\r\n    type: search.SEARCH_STARTED,\r\n    data,\r\n})\r\n\r\n// 搜索成功\r\nexport const searchSuccess = (result, searchContent, searchPage) => ({\r\n    type: search.SEARCH_SUCCESS,\r\n    result,\r\n    searchContent,\r\n    searchPage,\r\n})\r\n\r\n// 搜索失败\r\nexport const searchFailure = (error) => ({\r\n    type: search.SEARCH_FAILURE,\r\n    error,\r\n})\r\n\r\nexport const changePage = (page) => ({\r\n    type: search.CHANGE_PAGE,\r\n    page\r\n})\r\n\r\n// 拿到搜索数据\r\nexport const fetchSearchResult = (input, page=1, pageSize=20, company='netease') => {\r\n    return (dispatch) => {\r\n        let queryObj = {\r\n            input,\r\n            pageSize,\r\n            page,\r\n            company,\r\n        }\r\n        dispatch(searchStarted(input))\r\n        let api = new MusicApi()\r\n        api.searchResult(queryObj, (r) => {\r\n            let searchResult = JSON.parse(r.response)\r\n            console.log('搜索完成', searchResult)\r\n            if (searchResult.code === 200) {\r\n                dispatch(searchSuccess(searchResult, queryObj.input, page))\r\n            } else {\r\n                dispatch(searchFailure(searchResult))\r\n            }\r\n        })\r\n    }\r\n}","export const INPUT_CHANGE = 'NAV/INPUT_CHANGE'\r\n\r\nexport const SEARCH_STARTED = 'NAV/SEARCH_STARTED'\r\n\r\nexport const SEARCH_SUCCESS = 'NAV/SEARCH_SUCCESS'\r\n\r\nexport const SEARCH_FAILURE = 'NAV/SEARCH_FAILURE'\r\n\r\nexport const CHANGE_PAGE = 'PAGE/CHANGE_PAGE'","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport  {inputChange} from '../actions'\r\nimport {withRouter} from \"react-router-dom\"\r\nimport {argsFromQuery, parseClass} from \"../../../utils\"\r\n\r\nclass SearchBar extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.fillSearchContentInSearchBar()\r\n\r\n        this.onSearch = this.onSearch.bind(this)\r\n        this.onChange = this.onChange.bind(this)\r\n        this.onKeyPress = this.onKeyPress.bind(this)\r\n    }\r\n\r\n    parseUrlGetSearchContent(location) {\r\n        let searchObj = argsFromQuery(location.search)\r\n        let searchContent = decodeURI(searchObj['s'])\r\n        if (searchContent !== undefined) {\r\n            return searchContent\r\n        }\r\n    }\r\n\r\n    fillSearchContentInSearchBar() {\r\n        this.value = this.parseUrlGetSearchContent(this.props.location)\r\n        if (this.value === 'undefined') {\r\n            this.value = ''\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.location.search !== this.props.location.search) {\r\n            this.value = this.parseUrlGetSearchContent(this.props.location)\r\n        }\r\n    }\r\n\r\n    onChange(event) {\r\n        this.value = event.target.value\r\n        this.props.inputChange(this.value)\r\n    }\r\n\r\n    onSearch() {\r\n        let hasInputted = this.props.searchInput === undefined || this.props.searchInput === ''\r\n        if (hasInputted) {\r\n            return 0\r\n        }\r\n        let isEqualToOldSearchContent = this.props.searchContent !== this.props.searchInput\r\n        let isAtSearchPage = window.location.pathname !== '/search'\r\n        if (isEqualToOldSearchContent || isAtSearchPage) {\r\n            let urlObj = this.getSearchUrl()\r\n            this.props.history.push(urlObj)\r\n        }\r\n    }\r\n\r\n    getSearchUrl() {\r\n        console.log('this.props.searchInput', this.props.searchInput)\r\n        let name = this.props.searchInput.trim()\r\n        if (name === undefined) {\r\n            name = ''\r\n        }\r\n        let page = 1\r\n        return {\r\n            pathname: '/search',\r\n            search: `?s=${name}&page=${page}`,\r\n        }\r\n    }\r\n\r\n    onKeyPress(event) {\r\n        if (event.key === 'Enter') {\r\n            this.onSearch()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let classNameOfBar = parseClass({\r\n            'search-bar-container': true,\r\n            'before-searched': this.props.searchResult === undefined,\r\n        })\r\n        return(\r\n            <div className={classNameOfBar}>\r\n                <input type=\"text\" className=\"search-bar-input\" placeholder=\"搜索音乐、MV、歌单、用户\" onChange={this.onChange} onKeyDown={this.onKeyPress} value={this.value || ''}/>\r\n                <button className=\"search-bar-button\" onClick={this.onSearch}>搜索</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateTopProps = (state) => {\r\n    let theState = state.SearchBarReducer\r\n    return {\r\n        searchInput: theState.searchInput,\r\n        searchContent: theState.searchContent,\r\n        searchResult: theState.searchResult,\r\n        status: theState.status,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        inputChange:  (input) => {\r\n            dispatch(inputChange(input))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateTopProps, mapDispatchToProps)(withRouter(SearchBar))","import React from 'react'\r\n\r\nconst loading = (\r\n    <svg id=\"icon-loading-circle-fill\" className=\"message-icon\" viewBox=\"0 0 1024 1024\">\r\n        <path d=\"M960 447.008q-11.008-152.992-120-261.504t-260.992-120.512q-16-0.992-27.488 9.504t-11.488 26.496q0 14.016 9.504 24.512t23.488 11.488q55.008 4 107.008 26.016 60.992 26.016 108.992 73.504t74.016 109.504q22.016 51.008 26.016 106.016 0.992 14.016 11.488 23.488t24.512 9.504q15.008 0 26.016-11.008 11.008-12 8.992-27.008z\"  >\r\n        </path>\r\n    </svg>\r\n)\r\n\r\nconst success = (\r\n    <svg id=\"icon-success-circle-fill\" className=\"message-icon\" viewBox=\"0 0 1024 1024\">\r\n        <path d=\"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64z m193.5 301.7l-210.6 292c-12.7 17.7-39 17.7-51.7 0L318.5 484.9c-3.8-5.3 0-12.7 6.5-12.7h46.9c10.2 0 19.9 4.9 25.9 13.3l71.2 98.8 157.2-218c6-8.3 15.6-13.3 25.9-13.3H699c6.5 0 10.3 7.4 6.5 12.7z\"  >\r\n        </path>\r\n    </svg>\r\n)\r\n\r\nconst error = (\r\n    <svg id=\"icon-error-circle-fill\" className=\"message-icon\" viewBox=\"0 0 1024 1024\">\r\n        <path d=\"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64z m165.4 618.2l-66-0.3L512 563.4l-99.3 118.4-66.1 0.3c-4.4 0-8-3.5-8-8 0-1.9 0.7-3.7 1.9-5.2l130.1-155L340.5 359c-1.2-1.5-1.9-3.3-1.9-5.2 0-4.4 3.6-8 8-8l66.1 0.3L512 464.6l99.3-118.4 66-0.3c4.4 0 8 3.5 8 8 0 1.9-0.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z\"  >\r\n        </path>\r\n    </svg>\r\n)\r\n\r\nconst info = (\r\n    <svg id=\"icon-info-circle-fill\" className=\"message-icon\" viewBox=\"0 0 1024 1024\">\r\n        <path d=\"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64z m32 664c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V456c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v272z m-32-344c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48z\"  >\r\n        </path>\r\n    </svg>\r\n)\r\n\r\nconst warning = (\r\n    <svg id=\"icon-warning-circle-fill\" className=\"message-icon\" viewBox=\"0 0 1024 1024\">\r\n        <path d=\"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64z m-32 232c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v272c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V296z m32 440c-26.5 0-48-21.5-48-48s21.5-48 48-48 48 21.5 48 48-21.5 48-48 48z\"  >\r\n        </path>\r\n    </svg>\r\n)\r\n\r\nexport default {\r\n    loading,\r\n    success,\r\n    error,\r\n    info,\r\n    warning,\r\n}","import React, {Component} from \"react\"\r\nimport icons from './icons'\r\n\r\nclass Message extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.mapTypeToIcon = {...icons}\r\n    }\r\n    render() {\r\n        let {type, content} = this.props\r\n        return (\r\n            <div className={`message-container ${type}`}>\r\n                {this.mapTypeToIcon[type]}\r\n                <span className=\"message-content\">{content}</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Message","import React, {Component, Fragment} from \"react\"\r\nimport Message from './Message'\r\nimport './message.css'\r\n\r\nclass MessageList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            messages: [],\r\n        }\r\n        this.removeMessage = this.removeMessage.bind(this)\r\n    }\r\n\r\n    getMessageKey() {\r\n        const { messages } = this.state\r\n        return `message-${new Date().getTime()}-${messages.length}`\r\n    }\r\n\r\n    addMessage(message) {\r\n        const { messages } = this.state\r\n        message.key = this.getMessageKey()\r\n        messages.push(message)\r\n        this.setState({\r\n            messages: messages\r\n        })\r\n        setTimeout(() => {\r\n            this.removeMessage(message.key)\r\n        }, message.duration)\r\n    }\r\n\r\n    removeMessage(key) {\r\n        this.setState(previousState => ({\r\n            messages: previousState.messages.filter((message) => {\r\n                if (message.key === key) {\r\n                    if (message.onClose) {\r\n                        message.onClose()\r\n                    }\r\n                    return false\r\n                }\r\n                return true\r\n            })\r\n        }))\r\n    }\r\n\r\n\r\n    render() {\r\n        let {messages} = this.state\r\n        return (\r\n            <div className=\"message-list\">\r\n                {\r\n                    messages.map((message) => (\r\n                        <Fragment key={message.key}>\r\n                            <Message {...message} />\r\n                            <br/>\r\n                        </Fragment>\r\n                    ))\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MessageList","import * as audioController from './actionTypes'\r\nimport {MusicApi} from '../../api/api.js'\r\nimport {parseLyricArray} from '../../utils'\r\n\r\nexport  const toggleSongListWindow = () => {\r\n    return {\r\n        type: audioController.TOGGLE_SONG_LIST_WINDOW,\r\n    }\r\n}\r\n\r\nexport const changeAudioStatus = (status) => {\r\n    return {\r\n        type: audioController.CHANGE_AUDIO_STATUS,\r\n        status\r\n    }\r\n}\r\n\r\nexport const changePlayMode = (modeType) => {\r\n    return {\r\n        type: audioController.CHANGE_PLAY_MODE,\r\n        modeType,\r\n    }\r\n}\r\n\r\nexport const saveCurrentLyricIndex = (currentLyricIndex) => {\r\n    return {\r\n        type: audioController.GET_CURRENT_INDEX,\r\n        currentLyricIndex,\r\n    }\r\n}\r\n\r\nexport const appendTheSong = (songInfo) => {\r\n    return {\r\n        type: audioController.APPEND_THE_SONG,\r\n        songInfo,\r\n    }\r\n}\r\n\r\nexport const deleteTheSong = (songIndex) => {\r\n    return {\r\n        type: audioController.DELETE_THE_SONG,\r\n        songIndex,\r\n    }\r\n}\r\n\r\nexport const playTheSongInPage = (songInfo) => {\r\n    return {\r\n        type: audioController.PLAY_THE_SONG_IN_PAGE,\r\n        songInfo,\r\n    }\r\n}\r\n\r\nexport const playTheSongInList = (songIndex) => {\r\n    return {\r\n        type: audioController.PLAY_THE_SONG_IN_LIST,\r\n        songIndex,\r\n    }\r\n}\r\n\r\nexport const playNextSong = (modeType, loopStep=1) => {\r\n    return {\r\n        type: audioController.PLAY_NEXT_SONG,\r\n        modeType,\r\n        loopStep,\r\n    }\r\n}\r\n\r\n// export const getSong = (songUrl) => ({\r\n//     type: audioController.GET_SONG,\r\n//     songUrl,\r\n// })\r\n\r\nexport const getLyric = (lyric) => {\r\n    return {\r\n        type: audioController.GET_LYRIC,\r\n        lyric,\r\n    }\r\n}\r\n\r\n// export const getSongUrlFromNet = (url) => {\r\n//     return (dispatch) => {\r\n//         let api = new MusicApi()\r\n//         api.getSong(url, (r) => {\r\n//             let songUrl = JSON.parse(r.response).data\r\n//             dispatch(getSong(songUrl))\r\n//         })\r\n//     }\r\n// }\r\n\r\nexport const getLyricFromNet = (lrcUrl) => {\r\n    return (dispatch) => {\r\n        let api = new MusicApi()\r\n        api.getLyric(lrcUrl, (r) => {\r\n            let l = r.response\r\n            console.log(lrcUrl)\r\n            let lyricList = l.split('\\n').slice(0, -1)\r\n            if (lyricList.length === 0) {\r\n                lyricList = [l]\r\n            }\r\n            let result = parseLyricArray(lyricList)\r\n            dispatch(getLyric(result))\r\n        })\r\n    }\r\n}","export const CHANGE_AUDIO_STATUS = 'BAR/CHANGE_AUDIO_STATUS'\r\n\r\nexport const APPEND_THE_SONG = 'PAGE/APPEND_THE_SONG'\r\n\r\nexport const DELETE_THE_SONG = 'AUDIO/DELETE_THE_SONG'\r\n\r\nexport const PLAY_THE_SONG_IN_PAGE = 'PAGE/PLAY_THE_SONG'\r\n\r\nexport const PLAY_THE_SONG_IN_LIST = 'LIST/PLAY_THE_SONG'\r\n\r\nexport const PLAY_NEXT_SONG = 'AUDIO/PLAY_NEXT_SONG'\r\n\r\n// export const GET_SONG = 'AUDIO/GET_AUDIO'\r\n\r\nexport const GET_LYRIC = 'AUDIO/GET_LYRIC'\r\n\r\nexport const GET_CURRENT_INDEX = 'AUDIO/GET_CURRENT_INDEX'\r\n\r\nexport const CHANGE_PLAY_MODE = 'AUDIO/CHANGE_PLAY_MODE'\r\n\r\nexport  const TOGGLE_SONG_LIST_WINDOW = 'AUDIO/TOGGLE_SONG_LIST_WINDOW'","import React from \"react\"\r\n\r\nconst previousBtn = (\r\n    <svg className=\"svg-icon\" viewBox=\"0 0 1024 1024\">\r\n        <path d=\"M362.3 512l445-332.3v664.5L362.3 512zM216.7 179.7h80v664.5h-80V179.7z\">\r\n        </path>\r\n    </svg>\r\n)\r\n\r\nconst nextBtn = (\r\n    <svg className=\"svg-icon\" viewBox=\"0 0 1024 1024\">\r\n        <path d=\"M216.7 844.3V179.7l445 332.3-445 332.3z m590.6 0h-80V179.7h80v664.6z\">\r\n        </path>\r\n    </svg>\r\n)\r\n\r\nconst volumeBtn = (\r\n    <svg className=\"svg-icon\" viewBox=\"0 0 1024 1024\">\r\n        <path d=\"M697.5 76l-497 230.6-147.3-20v420l147.3-20 497 230.6V76z m-50 760.7l-424.9-195-13.7-6.8-15.2 2.1-90.6 12.3V343.8l90.6 12.3 15.2 2.1 13.7-6.8 424.9-194.9v680.2zM812 612h-50V412h50v200z m204.7 200h-50V212h50v600zM914.3 712h-50V312h50v400z\">\r\n        </path>\r\n    </svg>\r\n)\r\n\r\nconst listBtn = (\r\n    <svg className=\"svg-icon\" viewBox=\"0 0 1024 1024\">\r\n        <path d=\"M91.9 165.2h50v50h-50v-50z m150.2 0v50h690v-50h-690zM91.9 429.7h50v-50h-50v50z m150.2 0h690v-50h-690v50zM91.9 644.3h50v-50h-50v50z m150.2 0h690v-50h-690v50zM91.9 858.8h50v-50h-50v50z m150.2 0h690v-50h-690v50z\">\r\n        </path>\r\n    </svg>\r\n)\r\n\r\nconst deleteBtn = (\r\n    <svg className=\"svg-list-icon\" viewBox=\"0 0 1024 1024\">\r\n        <path d=\"M897.2 128H578.7c-1.6-34.7-30.2-62.4-65.3-62.4s-63.8 27.7-65.3 62.4h-320c-17.5 0-31.9 14.4-31.9 31.9s14.4 31.9 31.9 31.9H192v639.8c0 70.4 57.6 128 128 128h384.1c70.4 0 128-57.6 128-128V676.2c0.1-1.2 0.2-2.4 0.2-3.6 0.1-17.8-14.4-32.1-32.1-32.1-17.8 0-32.2 14.4-32.2 32.1v159.1c0 35.2-28.8 64-64 64H320c-35.2 0-64-28.8-64-64V191.8h511.9v223.1c0 17.7 14.4 32.1 32.2 32.1s32.2-14.4 32.2-32.1c0-1.2-0.1-2.4-0.2-3.6V191.8h65.1c17.6 0 31.9-14.4 31.9-31.9S914.7 128 897.2 128z\">\r\n        </path>\r\n        <path d=\"M386.9 350.6v386.6c0 16.8 13.8 30.6 30.6 30.6s30.6-13.8 30.6-30.5V350.6c0-16.8-13.8-30.6-30.6-30.6s-30.6 13.8-30.6 30.6zM576.7 350.6v386.6c0 16.8 13.8 30.6 30.6 30.6s30.6-13.8 30.6-30.5V350.6c0-16.8-13.8-30.6-30.6-30.6s-30.6 13.8-30.6 30.6z\">\r\n        </path>\r\n        <path d=\"M768 543.7a32.2 32.1 0 1 0 64.4 0 32.2 32.1 0 1 0-64.4 0Z\">\r\n        </path>\r\n    </svg>\r\n)\r\n\r\nconst getModeButtonSvg = (mode) => {\r\n    let loop = (\r\n        <svg className=\"svg-icon\" viewBox=\"0 0 1024 1024\">\r\n            <path d=\"M922 607.1V887H102V157h612.2V58.2l200 125-200 125V207H152v630h720V607.1h50z\">\r\n            </path>\r\n        </svg>\r\n    )\r\n    let circle = (\r\n        <svg className=\"svg-icon\" viewBox=\"0 0 1024 1024\">\r\n            <path\r\n                d=\"M922 607.1V887H102V157h612.2V58.2l200 125-200 125V207H152v630h720V607.1h50zM560.5 737.6V306.4h-34c-9.2 18.6-24.8 37.7-46.9 57.4-22.1 19.7-47.9 36.5-77.3 50.4v51c16.4-6.1 34.9-15.1 55.5-27.2s37.3-24.2 50-36.3v336h52.7z\">\r\n            </path>\r\n        </svg>\r\n    )\r\n    let random = (\r\n        <svg className=\"svg-icon\" viewBox=\"0 0 1024 1024\">\r\n            <path d=\"M726.6 774H594.4L458.8 512l135.6-262h132.2v98.7l200-125-200-125V200H564.4L430.7 457.7 297.4 200h-200v50h169.2l135.9 262-135.9 262H97.4v50h200l133.3-257.7L564.4 824h162.2v101.3l200-125-200-125z\">\r\n            </path>\r\n        </svg>\r\n    )\r\n    let mapModeToIcon = {\r\n        loop,\r\n        circle,\r\n        random,\r\n    }\r\n    return mapModeToIcon[mode]\r\n}\r\n\r\nconst getPlayButtonSvg = (status) => {\r\n    let play = (\r\n        <svg className=\"svg-icon\" viewBox=\"0 0 1024 1024\">\r\n            <path d=\"M243.2 208h166.4v608H243.2zM614.4 208h166.4v608h-166.4z\">\r\n            </path>\r\n        </svg>\r\n    )\r\n    let pause = (\r\n        <svg className=\"svg-icon\" viewBox=\"0 0 1024 1024\">\r\n            <path d=\"M289.5 844.3V179.7l445 332.3-445 332.3z\">\r\n            </path>\r\n        </svg>\r\n    )\r\n    let mapStatusToIcon = {\r\n        play,\r\n        pause,\r\n    }\r\n    return mapStatusToIcon[status]\r\n}\r\n\r\nconst getPlayButtonSvgInList = (isTheSongPlaying) => {\r\n    if (isTheSongPlaying) {\r\n        return (\r\n            <svg className=\"svg-list-icon\" viewBox=\"0 0 1024 1024\">\r\n                <path d=\"M910.8 303.6c-5.4-10.5-16.3-17.8-28.9-17.8-17.8 0-32.2 14.4-32.2 32.1 0 6 1.7 11.7 4.6 16.5l-0.1 0.1c26.9 52.4 42.1 111.8 42.1 174.7 0 211.6-171.6 383.2-383.2 383.2S129.8 720.8 129.8 509.2 301.4 126.1 513 126.1c62.5 0 121.5 15 173.6 41.5l0.2-0.4c4.6 2.6 10 4.1 15.7 4.1 17.8 0 32.2-14.4 32.2-32.1 0-13.1-7.9-24.4-19.3-29.4C654.6 78.9 585.9 61.5 513 61.5 265.7 61.5 65.3 262 65.3 509.2S265.7 956.9 513 956.9s447.7-200.4 447.7-447.7c0-74.1-18-144-49.9-205.6z\">\r\n                </path>\r\n                <path d=\"M385.4 352.2V672c0 17.5 14.3 31.9 31.9 31.9 17.6 0 32-14.4 31.9-31.9V352.2c0-17.5-14.3-31.9-31.9-31.9-17.5 0-31.9 14.3-31.9 31.9zM578.9 352.2V672c0 17.5 14.3 31.9 31.9 31.9 17.5 0 31.9-14.4 31.9-31.9V352.2c0-17.5-14.3-31.9-31.9-31.9-17.5 0-31.9 14.3-31.9 31.9z\">\r\n                </path>\r\n                <path d=\"M772.7 217.7a32.2 32.1 0 1 0 64.4 0 32.2 32.1 0 1 0-64.4 0Z\">\r\n                </path>\r\n            </svg>\r\n        )\r\n    } else {\r\n        return (\r\n            <svg className=\"svg-list-icon\" viewBox=\"0 0 1024 1024\">\r\n                <path d=\"M772.7 217.7a32.2 32.1 0 1 0 64.4 0 32.2 32.1 0 1 0-64.4 0Z\">\r\n                </path>\r\n                <path d=\"M415.8 679.9c5.9 0 11.5-1.6 16.2-4.5l231.1-134.6c10.9-5.2 18.5-16.3 18.5-29.2 0-11.9-6.4-22.3-16-27.8L439.7 352.2c-5.8-6.7-14.4-10.9-23.9-10.9-17.6 0-31.8 14.4-31.8 32.1 0 0.6 0 1.2 0.1 1.8l-0.4 0.2 0.5 269c-0.1 1.1-0.2 2.2-0.2 3.4 0 17.7 14.3 32.1 31.8 32.1z\">\r\n                </path>\r\n                <path d=\"M909.8 306.6c-5.4-10.5-16.3-17.8-28.9-17.8-17.8 0-32.2 14.4-32.2 32.1 0 6 1.7 11.7 4.6 16.5l-0.1 0.1c26.9 52.4 42.1 111.8 42.1 174.7 0 211.6-171.6 383.2-383.2 383.2S128.8 723.8 128.8 512.2 300.4 129.1 512 129.1c62.5 0 121.5 15 173.6 41.5l0.2-0.4c4.6 2.6 10 4.1 15.7 4.1 17.8 0 32.2-14.4 32.2-32.1 0-13.1-7.9-24.4-19.3-29.4C653.6 81.9 584.9 64.5 512 64.5 264.7 64.5 64.3 265 64.3 512.2S264.7 959.9 512 959.9s447.7-200.4 447.7-447.7c0-74.1-18-144-49.9-205.6z\">\r\n                </path>\r\n            </svg>\r\n        )\r\n    }\r\n}\r\n\r\nexport {\r\n    previousBtn,\r\n    nextBtn,\r\n    volumeBtn,\r\n    listBtn,\r\n    deleteBtn,\r\n    getModeButtonSvg,\r\n    getPlayButtonSvg,\r\n    getPlayButtonSvgInList,\r\n}","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {\r\n    changeAudioStatus,\r\n    getLyricFromNet,\r\n    saveCurrentLyricIndex,\r\n    changePlayMode,\r\n    playNextSong,\r\n    toggleSongListWindow\r\n} from '../actions'\r\nimport {timeFormat, getCurrentSongInfo, changeImgResolution, parseClass} from '../../../utils'\r\nimport * as icon from './icon'\r\n\r\nclass AudioController extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.mapEnglishToChinese = {\r\n            loop: '列表循环',\r\n            circle: '单曲循环',\r\n            random: '随机播放',\r\n        }\r\n        this.isFirstLoad = true\r\n        this.state = {\r\n            volume: 1,\r\n            currentTime: 0,\r\n            duration: null,\r\n            isHoverOnSongSlider: false,\r\n            isHoverOnVolumeBtn: false,\r\n        }\r\n        this.coolDown = false\r\n        this.isSliding = false\r\n        this.isVolumeSliding = false\r\n        this.audio = React.createRef()\r\n        this.songSlider = React.createRef()\r\n        this.volumeSlider = React.createRef()\r\n        this.playOrPause = this.playOrPause.bind(this)\r\n        this.clickToSeek = this.clickToSeek.bind(this)\r\n        this.mouseDownToSeek = this.mouseDownToSeek.bind(this)\r\n        this.mouseMoveToSeek = this.mouseMoveToSeek.bind(this)\r\n        this.afterSeek = this.afterSeek.bind(this)\r\n        this.handleHover = this.handleHover.bind(this)\r\n        this.changePlayMode = this.changePlayMode.bind(this)\r\n        this.changeToPlayNextSong = this.changeToPlayNextSong.bind(this)\r\n        this.toggleSongList = this.toggleSongList.bind(this)\r\n        this.hoverVolumeBtn = this.hoverVolumeBtn.bind(this)\r\n        this.clickToChange = this.clickToChange.bind(this)\r\n        this.mouseDownToChange = this.mouseDownToChange.bind(this)\r\n        this.mouseMoveToChange = this.mouseMoveToChange.bind(this)\r\n        this.afterChange = this.afterChange.bind(this)\r\n        this.bindHotKey = this.bindHotKey.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        const a = this.audio.current\r\n        a.addEventListener('loadstart', () => {\r\n            this.props.getLyricFromNet(this.props.currentSongInfo.lrc)\r\n        })\r\n        a.addEventListener('canplay', () => {\r\n            const {currentTime, duration} = a\r\n            this.setState({\r\n                currentTime,\r\n                duration\r\n            })\r\n            let shouldAutoPlay = !this.isFirstLoad\r\n            if (shouldAutoPlay) {\r\n                a.play()\r\n            } else {\r\n                this.isFirstLoad = false\r\n            }\r\n        })\r\n        a.addEventListener('play', () => {\r\n            this.props.changeAudioStatus('play')\r\n        })\r\n        a.addEventListener('pause', () => {\r\n            this.props.changeAudioStatus('pause')\r\n        })\r\n        a.addEventListener('timeupdate', () => {\r\n            if (!this.isSliding) {\r\n                const {currentTime} = a\r\n                this.setState({\r\n                    currentTime\r\n                })\r\n                this.parseLyricIndex(currentTime)\r\n            }\r\n        })\r\n        a.addEventListener('ended', () => {\r\n            let {lengthOfSongList, playMode} = this.props\r\n            if (lengthOfSongList !== 0) {\r\n                this.props.playNextSong(playMode)\r\n                if (lengthOfSongList === 1 || playMode === 'circle') {\r\n                    a.play()\r\n                }\r\n            }\r\n        })\r\n        if (this.isFirstLoad && this.props.lengthOfSongList === 0) {\r\n            this.isFirstLoad = false\r\n        }\r\n        document.body.addEventListener('mouseup', this.afterSeek)\r\n        document.body.addEventListener('mouseup', this.afterChange)\r\n        window.addEventListener('keydown', this.bindHotKey)\r\n    }\r\n\r\n    bindHotKey(event) {\r\n        let tagName = event.target.tagName\r\n        if (tagName === 'INPUT' || tagName === 'TEXTAREA') {\r\n            return\r\n        }\r\n        let {key, ctrlKey} = event\r\n        if (key === 'p' || key === 'P') {\r\n            this.playOrPause()\r\n        } else if (ctrlKey && key === 'ArrowRight') {\r\n            this.changeToPlayNextSong(1)()\r\n        } else if (ctrlKey && key === 'ArrowLeft') {\r\n            this.changeToPlayNextSong(-1)()\r\n        }\r\n    }\r\n\r\n    getNextLyricIndex(currentTime, data, deltaTime) {\r\n        let nextLyricIndex\r\n        let length = data.length\r\n        let theLastLyricTime = data[length - 1].time\r\n        let isAfterTheLastLyric = currentTime >= theLastLyricTime\r\n        let isBetweenTheLastTwoLyric = currentTime <= theLastLyricTime && currentTime >= theLastLyricTime - deltaTime\r\n        if (isAfterTheLastLyric) {\r\n            nextLyricIndex = length - 1\r\n        } else if (isBetweenTheLastTwoLyric) {\r\n            nextLyricIndex = length - 2\r\n        } else {\r\n            nextLyricIndex = data.findIndex((lyricInfo, index, data) => {\r\n                if (index === length -1) {\r\n                    return false\r\n                }\r\n                let isStart = lyricInfo.time - deltaTime <= currentTime\r\n                let isNotEnd = data[index + 1].time - deltaTime >= currentTime\r\n                return isStart && isNotEnd\r\n            })\r\n        }\r\n        return nextLyricIndex\r\n    }\r\n\r\n    parseLyricIndex(currentTime, deltaTime=0.2) {\r\n        let data = this.props.currentSongExtraInfo.currentLyric\r\n        if (data.length === 0) {\r\n            return false\r\n        }\r\n        let currentLyricIndex = this.getNextLyricIndex(currentTime, data, deltaTime)\r\n        let indexInStore = this.props.currentSongExtraInfo.currentLyricIndex\r\n        if (currentLyricIndex === indexInStore) {\r\n            return false\r\n        } else {\r\n            this.props.saveCurrentLyricIndex(currentLyricIndex)\r\n        }\r\n    }\r\n\r\n    playOrPause() {\r\n        const a = this.audio.current\r\n        if (a.currentSrc === '') {\r\n            return\r\n        }\r\n        if (this.props.AudioStatus === 'pause') {\r\n            a.play()\r\n            this.props.changeAudioStatus('play')\r\n        } else {\r\n            a.pause()\r\n            this.props.changeAudioStatus('pause')\r\n        }\r\n    }\r\n\r\n    clickToSeek(event) {\r\n        const a = this.audio.current\r\n        let target = event.target\r\n        if (!target.classList.contains('slider-point')) {\r\n            let { left, width } = event.currentTarget.getBoundingClientRect()\r\n            let clickPosition = (event.clientX - left) / width\r\n            let currentTime = clickPosition * a.duration\r\n            if (!isNaN(currentTime)) {\r\n                a.currentTime = currentTime\r\n            }\r\n        }\r\n    }\r\n\r\n    mouseDownToSeek() {\r\n        this.isSliding = true\r\n        document.body.classList.add('sliding')\r\n    }\r\n\r\n    // 自己写的节流方案\r\n    // mouseMoveToSeek(event) {\r\n    //     if (!this.isSliding) {\r\n    //         return\r\n    //     }\r\n    //     if (!this.coolDown) {\r\n    //         let clientX = event.clientX\r\n    //         this.seek(clientX)\r\n    //         this.coolDown = true\r\n    //         setTimeout(() => {\r\n    //             this.coolDown = false\r\n    //         }, 12)\r\n    //     }\r\n    // }\r\n\r\n    // 使用 api 来做到节流\r\n    mouseMoveToSeek(event) {\r\n        if (!this.isSliding) {\r\n            return\r\n        }\r\n        if (!this.coolDown) {\r\n            let clientX = event.clientX\r\n            window.requestAnimationFrame(() => {\r\n                this.seek(clientX)\r\n                this.coolDown = false\r\n            })\r\n            this.coolDown = true\r\n        }\r\n    }\r\n\r\n    seek(clientX) {\r\n        const a = this.audio.current\r\n        let {left, width} = this.songSlider.current.getBoundingClientRect()\r\n        let dragPosition = (clientX - left) / width\r\n        if (dragPosition >= 0 && dragPosition <= 1) {\r\n            let currentTime = Number((a.duration * dragPosition).toFixed(2))\r\n            let noSongLoad = isNaN(a.duration)\r\n            if (noSongLoad) {\r\n                currentTime = 0\r\n            }\r\n            this.setState({\r\n                currentTime\r\n            })\r\n        }\r\n    }\r\n\r\n    afterSeek() {\r\n        if (this.isSliding) {\r\n            const a = this.audio.current\r\n            a.currentTime = this.state.currentTime\r\n            this.isSliding = false\r\n            document.body.classList.remove('sliding')\r\n        }\r\n    }\r\n\r\n    clickToChange(event) {\r\n        const a = this.audio.current\r\n        let target = event.target\r\n        if (!target.classList.contains('slider-point')) {\r\n            let { left, width } = event.currentTarget.getBoundingClientRect()\r\n            let clickPosition = (event.clientX - left) / width\r\n            let volume = clickPosition.toFixed(2)\r\n            if (!isNaN(volume)) {\r\n                this.setState({\r\n                    volume\r\n                })\r\n                a.volume = volume\r\n            }\r\n        }\r\n    }\r\n\r\n    mouseDownToChange() {\r\n        this.isVolumeSliding = true\r\n        document.body.classList.add('sliding')\r\n    }\r\n\r\n    mouseMoveToChange(event) {\r\n        if (!this.isVolumeSliding) {\r\n            return\r\n        }\r\n        let clientX = event.clientX\r\n        window.requestAnimationFrame(() => {\r\n            this.change(clientX)\r\n        })\r\n    }\r\n\r\n    change(clientX) {\r\n        const a = this.audio.current\r\n        let {left, width} = this.volumeSlider.current.getBoundingClientRect()\r\n        let dragPosition = (clientX - left) / width\r\n        if (dragPosition >= 0 && dragPosition <= 1) {\r\n            let volume = dragPosition.toFixed(2)\r\n            this.setState({\r\n                volume\r\n            })\r\n            a.volume = volume\r\n        }\r\n    }\r\n\r\n    afterChange() {\r\n        if (this.isVolumeSliding) {\r\n            this.isVolumeSliding = false\r\n            document.body.classList.remove('sliding')\r\n        }\r\n    }\r\n\r\n    handleHover() {\r\n        this.setState((state) => ({\r\n            isHoverOnSongSlider: !state.isHoverOnSongSlider,\r\n        }))\r\n    }\r\n\r\n    hoverVolumeBtn() {\r\n        this.setState((state) => ({\r\n            isHoverOnVolumeBtn: !state.isHoverOnVolumeBtn,\r\n        }))\r\n    }\r\n\r\n    toggleSongList() {\r\n        this.props.toggleSongListWindow()\r\n        let pop = document.querySelector('.pop-up')\r\n        if (pop === null) {\r\n            let body = document.querySelector(\"body\")\r\n            body.classList.toggle('ban-scroll')\r\n        }\r\n    }\r\n\r\n    changePlayMode() {\r\n        let modeList = ['loop', 'circle', 'random']\r\n        let index = modeList.indexOf(this.props.playMode)\r\n        let nextIndex = (index + 1) % modeList.length\r\n        let nextModeType = modeList[nextIndex]\r\n        this.props.changePlayMode(nextModeType)\r\n    }\r\n\r\n    changeToPlayNextSong(loopStep) {\r\n        return () => {\r\n            this.props.playNextSong(this.props.playMode, loopStep)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let {currentTime, duration, volume} = this.state\r\n        let songPercentage = (currentTime / duration).toFixed(3) * 100\r\n        let {name, singer, pic, url} = this.props.currentSongInfo\r\n        pic = changeImgResolution(pic, 400)\r\n        let playMode = this.props.playMode\r\n        let playModeTitle = this.mapEnglishToChinese[playMode]\r\n        let classNameOfController = parseClass({\r\n            'audio-controller': true,\r\n            'playlist-opened': this.props.showSongListWindow,\r\n        })\r\n        let classNameOfSongSlider = parseClass({\r\n            'song-slider': true,\r\n            'hover': this.state.isHoverOnSongSlider,\r\n        })\r\n        let classNameOfVolumeSlider = parseClass({\r\n            'volume-bar': true,\r\n            'none-width': !this.state.isHoverOnVolumeBtn,\r\n        })\r\n        return (\r\n            <div className={classNameOfController}\r\n                 onMouseMove={this.mouseMoveToSeek}\r\n            >\r\n                <audio src={url} ref={this.audio}>\r\n                </audio>\r\n                <div className=\"album-cover\">\r\n                    <img src={pic} alt=\"专辑图片\" />\r\n                </div>\r\n                <div className=\"extra-info-container\">\r\n                    <div className={classNameOfSongSlider}\r\n                         onClick={this.clickToSeek}\r\n                         onMouseOver={this.handleHover}\r\n                         onMouseOut={this.handleHover}\r\n                         ref={this.songSlider}\r\n                    >\r\n                        <div className=\"slider-bg\">\r\n                        </div>\r\n                        <div className=\"slider-progress\" style={{width: `${songPercentage}%`}}>\r\n                            <div className=\"slider-point\" onMouseDown={this.mouseDownToSeek}>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <span className=\"music-timeline\">\r\n                        <span id=\"music-time-now\">{timeFormat(currentTime)}</span>\r\n                        <span> / </span>\r\n                        <span id=\"music-time-all\">{timeFormat(duration)}</span>\r\n                    </span>\r\n                    <div className=\"song-info\">\r\n                        <div className=\"song-info-name\" title={name}>{name}</div>\r\n                        <div className=\"song-info-singer\" title={singer}>{singer}</div>\r\n                    </div>\r\n                    <div className=\"controller-btn\">\r\n                        <span className=\"back-btn\" title=\"上一首(ctrl+←)\" onClick={this.changeToPlayNextSong(-1)}>\r\n                            {icon.previousBtn}\r\n                        </span>\r\n                        <span className={[\"play-btn\", this.props.AudioStatus].join(' ')}\r\n                              title=\"播放/暂停(p)\"\r\n                              onClick={this.playOrPause}\r\n                        >\r\n                            {icon.getPlayButtonSvg(this.props.AudioStatus)}\r\n                        </span>\r\n                        <span className=\"next-btn\" title=\"下一首(ctrl+→)\" onClick={this.changeToPlayNextSong(1)}>\r\n                            {icon.nextBtn}\r\n                        </span>\r\n                        <span className=\"volume-btn icon\" title={`音量：${volume * 100}`} onClick={this.hoverVolumeBtn}>\r\n                            {icon.volumeBtn}\r\n                            <div className={classNameOfVolumeSlider}\r\n                                 onMouseMove={this.mouseMoveToChange}\r\n                            >\r\n                                <div className=\"volume-slider\" ref={this.volumeSlider} onClick={this.clickToChange}>\r\n                                    <div className=\"slider-progress\" style={{width: `${volume * 100}%`}}>\r\n                                        <div className={this.state.isHoverOnVolumeBtn ? \"slider-point\" : \"hidden\"}\r\n                                             onMouseDown={this.mouseDownToChange}\r\n                                        >\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </span>\r\n                        <span className={this.state.isHoverOnVolumeBtn ? \"hidden\" : `mode-btn icon`}\r\n                              data-mode={playMode} title={playModeTitle}\r\n                              onClick={this.changePlayMode}\r\n                        >\r\n                            {icon.getModeButtonSvg(playMode)}\r\n                        </span>\r\n                        <span className={this.state.isHoverOnVolumeBtn ? \"hidden\" : \"list-btn icon\"}\r\n                              title=\"播放列表\"\r\n                              onClick={this.toggleSongList}\r\n                        >\r\n                            {icon.listBtn}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    let theState = state.AudioReducer\r\n    let currentSongInfo = getCurrentSongInfo(theState)\r\n    let lengthOfSongList = theState.songList.length\r\n    return {\r\n        lengthOfSongList: lengthOfSongList,\r\n        AudioStatus: theState.AudioStatus,\r\n        currentSongInfo: currentSongInfo,\r\n        currentSongExtraInfo: theState.currentSongExtraInfo,\r\n        playMode: theState.playMode,\r\n        showSongListWindow: theState.showSongListWindow,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeAudioStatus: (status) => {\r\n            dispatch(changeAudioStatus(status))\r\n        },\r\n        getLyricFromNet: (url) => {\r\n            dispatch(getLyricFromNet(url))\r\n        },\r\n        saveCurrentLyricIndex: (currentLyricIndex) => {\r\n            dispatch(saveCurrentLyricIndex(currentLyricIndex))\r\n        },\r\n        changePlayMode: (modeType) => {\r\n            dispatch(changePlayMode(modeType))\r\n        },\r\n        playNextSong: (modeType, loopStep) => {\r\n            dispatch(playNextSong(modeType, loopStep))\r\n        },\r\n        toggleSongListWindow: () => {\r\n            dispatch(toggleSongListWindow())\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AudioController)","import React, {Component} from 'react'\r\nimport {timeFormat, getCurrentSongInfo} from '../../../utils'\r\nimport {connect} from \"react-redux\"\r\nimport {playTheSongInList, deleteTheSong} from '../actions'\r\nimport {deleteBtn, getPlayButtonSvgInList} from './icon'\r\n\r\nclass SongItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.handlePlay = this.handlePlay.bind(this)\r\n        this.handlePause = this.handlePause.bind(this)\r\n    }\r\n\r\n    handlePlay() {\r\n        if (this.props.currentSongId !== this.props.songInfo.id) {\r\n            this.props.playTheSongInList(this.props.songIndex)\r\n        } else {\r\n            let audio = document.querySelector('audio')\r\n            audio.play()\r\n        }\r\n    }\r\n\r\n    handlePause() {\r\n        let audio = document.querySelector('audio')\r\n        audio.pause()\r\n    }\r\n\r\n    render() {\r\n        let {id, name, singer, time} = this.props.songInfo\r\n        let isTheSongPlaying = (this.props.AudioStatus === 'play') && (this.props.currentSongId === id)\r\n        return (\r\n            <div className=\"song-list-item-container\" style={isTheSongPlaying ? {color: 'rgb(255, 255, 255)'} : {}}>\r\n                <div className=\"song-list-item-name\">\r\n                    <span className=\"song-name\" title={name}>{name}</span>\r\n                    <span className=\"song-list-item-play vertical-middle\" onClick={isTheSongPlaying ? this.handlePause : this.handlePlay}>\r\n                        {getPlayButtonSvgInList(isTheSongPlaying)}\r\n                    </span>\r\n                    <span className=\"song-list-item-delete vertical-middle\" onClick={this.props.deleteTheSong.bind(this, this.props.songIndex)}>\r\n                        {deleteBtn}\r\n                    </span>\r\n                </div>\r\n                <div className=\"song-list-item-singer name\">\r\n                    <span title={singer}>{singer}</span>\r\n                </div>\r\n                <div className=\"song-list-item-time\">\r\n                    {timeFormat(time)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    let theState = state.AudioReducer\r\n    let currentSongInfo = getCurrentSongInfo(theState)\r\n    let currentSongId = currentSongInfo.id\r\n    return {\r\n        AudioStatus: theState.AudioStatus,\r\n        currentSongId: currentSongId,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        playTheSongInList: (songInfo) => {\r\n            dispatch(playTheSongInList(songInfo))\r\n        },\r\n        deleteTheSong: (songIndex) => {\r\n            dispatch(deleteTheSong(songIndex))\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SongItem)","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport SongItem from './SongItem'\r\nimport {getCurrentSongInfo, changeImgResolution, parseClass} from '../../../utils'\r\n\r\nclass SongList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.list = React.createRef()\r\n    }\r\n\r\n    getTheActiveLyricOffset() {\r\n        const list = this.list.current\r\n        let activeLyric = document.querySelector('.active')\r\n        if (activeLyric !== null) {\r\n            let {height} = list.getBoundingClientRect()\r\n            let i = Math.floor(height / 40 / 2)\r\n            list.scrollTop = activeLyric.offsetTop - 40 * i\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        this.getTheActiveLyricOffset()\r\n    }\r\n\r\n    render() {\r\n        let picUrl = this.props.currentSongInfo.pic\r\n        picUrl = changeImgResolution(picUrl, 400)\r\n        let {currentLyric, currentLyricIndex} = this.props.currentSongExtraInfo\r\n        let length = this.props.songList.length\r\n        let classNameOfSongList = parseClass({\r\n            'song-list': true,\r\n            'hidden': !this.props.showSongListWindow,\r\n        })\r\n        return (\r\n            <div className={classNameOfSongList}>\r\n                <div className=\"song-list-bg\">\r\n                </div>\r\n                <div className=\"song-list-img\" style={{backgroundImage: `url(${picUrl})`}}>\r\n                </div>\r\n                <span className=\"song-list-header\">播放列表&nbsp;&nbsp;&nbsp;{`(总${length}首)`}</span>\r\n                <div className=\"song-list-container\">\r\n                    <div className=\"song-list-head-container\">\r\n                        <div className=\"song-list-item-name\">\r\n                            <span title=\"\">歌曲</span>\r\n                        </div>\r\n                        <div className=\"song-list-item-singer\">\r\n                            <span title=\"\">歌手</span>\r\n                        </div>\r\n                        <div className=\"song-list-item-time\">时长</div>\r\n                    </div>\r\n                    {\r\n                        this.props.songList.map((value, index) => {\r\n                            return <SongItem key={index} songIndex={index} songInfo={value}/>\r\n                    })}\r\n                </div>\r\n                <div className=\"lyric-list\" ref={this.list}>\r\n                    {\r\n                        currentLyric.map((value, index) => {\r\n                            let classNameOfLyric = parseClass({\r\n                                'lyric-item': true,\r\n                                'active': currentLyricIndex === index,\r\n                            })\r\n                            if (value.translatedLyric === null) {\r\n                                return <p className={classNameOfLyric} key={index}>{value.lyric}</p>\r\n                            } else {\r\n                                return (\r\n                                    <p className={classNameOfLyric} key={index}>\r\n                                        {value.lyric}<br/>\r\n                                        {value.translatedLyric}\r\n                                    </p>\r\n                                )\r\n                            }\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    let theState = state.AudioReducer\r\n    let currentSongInfo = getCurrentSongInfo(theState)\r\n    return {\r\n        songList: theState.songList,\r\n        currentSongInfo: currentSongInfo,\r\n        currentSongExtraInfo: theState.currentSongExtraInfo,\r\n        showSongListWindow: theState.showSongListWindow,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(SongList)","import React, {Component} from 'react'\r\nimport AudioController from \"./AudioController\"\r\nimport SongList from \"./SongList\"\r\nimport './MusicController.css'\r\n\r\nclass MusicController extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"music-player\">\r\n                <AudioController />\r\n                <SongList />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MusicController","import React from 'react'\r\n\r\nconst appendBtn = (\r\n    <svg className=\"svg-list-icon\" viewBox=\"0 0 1024 1024\">\r\n        <path d=\"M197.3 197.3c-173.8 173.8-173.8 455.5 0 629.3s455.5 173.8 629.3 0 173.8-455.5 0-629.3-455.5-173.7-629.3 0zM907 512c0 51.3-9.7 101.3-28.9 148.7-19.9 49-49.1 92.9-86.8 130.6s-81.7 66.9-130.6 86.8C613.3 897.3 563.3 907 512 907c-51.3 0-101.3-9.7-148.7-28.9-49-19.9-92.9-49.1-130.6-86.8s-66.9-81.7-86.8-130.6C126.7 613.3 117 563.3 117 512c0-51.3 9.7-101.3 28.9-148.7 19.9-49 49.1-92.9 86.8-130.6s81.7-66.9 130.6-86.8C410.7 126.7 460.7 117 512 117c51.3 0 101.3 9.7 148.7 28.9 49 19.9 92.9 49.1 130.6 86.8s66.9 81.7 86.8 130.6C897.3 410.7 907 460.7 907 512zM537 262v225h225v50H537v225h-50V537H262v-50h225V262h50z\">\r\n        </path>\r\n    </svg>\r\n)\r\n\r\nconst getPlayOrPauseButtonSvg = (isTheSongPlaying) => {\r\n    if (isTheSongPlaying) {\r\n        return (\r\n            <svg className=\"svg-list-icon\" viewBox=\"0 0 1024 1024\">\r\n                <path d=\"M910.8 303.6c-5.4-10.5-16.3-17.8-28.9-17.8-17.8 0-32.2 14.4-32.2 32.1 0 6 1.7 11.7 4.6 16.5l-0.1 0.1c26.9 52.4 42.1 111.8 42.1 174.7 0 211.6-171.6 383.2-383.2 383.2S129.8 720.8 129.8 509.2 301.4 126.1 513 126.1c62.5 0 121.5 15 173.6 41.5l0.2-0.4c4.6 2.6 10 4.1 15.7 4.1 17.8 0 32.2-14.4 32.2-32.1 0-13.1-7.9-24.4-19.3-29.4C654.6 78.9 585.9 61.5 513 61.5 265.7 61.5 65.3 262 65.3 509.2S265.7 956.9 513 956.9s447.7-200.4 447.7-447.7c0-74.1-18-144-49.9-205.6z\">\r\n                </path>\r\n                <path d=\"M385.4 352.2V672c0 17.5 14.3 31.9 31.9 31.9 17.6 0 32-14.4 31.9-31.9V352.2c0-17.5-14.3-31.9-31.9-31.9-17.5 0-31.9 14.3-31.9 31.9zM578.9 352.2V672c0 17.5 14.3 31.9 31.9 31.9 17.5 0 31.9-14.4 31.9-31.9V352.2c0-17.5-14.3-31.9-31.9-31.9-17.5 0-31.9 14.3-31.9 31.9z\">\r\n                </path>\r\n                <path d=\"M772.7 217.7a32.2 32.1 0 1 0 64.4 0 32.2 32.1 0 1 0-64.4 0Z\">\r\n                </path>\r\n            </svg>\r\n        )\r\n    } else {\r\n        return (\r\n            <svg className=\"svg-list-icon\" viewBox=\"0 0 1024 1024\">\r\n                <path d=\"M772.7 217.7a32.2 32.1 0 1 0 64.4 0 32.2 32.1 0 1 0-64.4 0Z\">\r\n                </path>\r\n                <path d=\"M415.8 679.9c5.9 0 11.5-1.6 16.2-4.5l231.1-134.6c10.9-5.2 18.5-16.3 18.5-29.2 0-11.9-6.4-22.3-16-27.8L439.7 352.2c-5.8-6.7-14.4-10.9-23.9-10.9-17.6 0-31.8 14.4-31.8 32.1 0 0.6 0 1.2 0.1 1.8l-0.4 0.2 0.5 269c-0.1 1.1-0.2 2.2-0.2 3.4 0 17.7 14.3 32.1 31.8 32.1z\">\r\n                </path>\r\n                <path d=\"M909.8 306.6c-5.4-10.5-16.3-17.8-28.9-17.8-17.8 0-32.2 14.4-32.2 32.1 0 6 1.7 11.7 4.6 16.5l-0.1 0.1c26.9 52.4 42.1 111.8 42.1 174.7 0 211.6-171.6 383.2-383.2 383.2S128.8 723.8 128.8 512.2 300.4 129.1 512 129.1c62.5 0 121.5 15 173.6 41.5l0.2-0.4c4.6 2.6 10 4.1 15.7 4.1 17.8 0 32.2-14.4 32.2-32.1 0-13.1-7.9-24.4-19.3-29.4C653.6 81.9 584.9 64.5 512 64.5 264.7 64.5 64.3 265 64.3 512.2S264.7 959.9 512 959.9s447.7-200.4 447.7-447.7c0-74.1-18-144-49.9-205.6z\">\r\n                </path>\r\n            </svg>\r\n        )\r\n    }\r\n}\r\n\r\nexport {\r\n    appendBtn,\r\n    getPlayOrPauseButtonSvg,\r\n}","import React, {Component} from 'react'\r\nimport {getCurrentSongInfo, parseClass, timeFormat} from '../../../utils'\r\nimport {connect} from 'react-redux'\r\nimport {actions} from '../../audioController/'\r\nimport {message} from '../../common/message/'\r\nimport {appendBtn, getPlayOrPauseButtonSvg} from \"./icons\"\r\n\r\nconst {appendTheSong, playTheSongInPage} = actions\r\n\r\nclass SearchItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.handlePlay = this.handlePlay.bind(this)\r\n        this.handleAppend = this.handleAppend.bind(this)\r\n        this.handlePause = this.handlePause.bind(this)\r\n    }\r\n\r\n    handlePlay() {\r\n        if (!this.props.result.copyright) {\r\n            message.warning('该歌曲不能播放')\r\n            return\r\n        }\r\n        if (this.props.currentSongId !== this.props.result.id) {\r\n            this.props.playTheSongInPage(this.props.result)\r\n            message.success('开始播放')\r\n            console.log('本歌曲第一次放')\r\n        } else {\r\n            let audio = document.querySelector('audio')\r\n            audio.play()\r\n        }\r\n    }\r\n\r\n    handlePause() {\r\n        let audio = document.querySelector('audio')\r\n        audio.pause()\r\n    }\r\n\r\n    handleAppend() {\r\n        if (!this.props.result.copyright) {\r\n            message.warning('该歌曲不能播放')\r\n            return\r\n        }\r\n        this.props.appendTheSong(this.props.result)\r\n    }\r\n\r\n    render() {\r\n        let {id, name, singer, time} = this.props.result\r\n        let isTheSongPlaying = (this.props.AudioStatus === 'play') && (this.props.currentSongId === id)\r\n        let isOdd = (this.props.index + 1) % 2 !== 0\r\n        let color = !this.props.result.copyright ? '#aaa' : ''\r\n        let classNameOfItem = parseClass({\r\n            'search-item-container': true,\r\n            'odd': isOdd,\r\n        })\r\n        return(\r\n            <div className={classNameOfItem} style={{color: `${color}`}}>\r\n                <span className=\"search-item-number\">{`${this.props.index + 1}.`}</span>\r\n                <div className=\"search-item-name\">\r\n                    <span className=\"song-name\" title={name}>{name}</span>\r\n                    <span className=\"search-item-play vertical-middle\"\r\n                          onClick={isTheSongPlaying ? this.handlePause : this.handlePlay}>\r\n                        {getPlayOrPauseButtonSvg(isTheSongPlaying)}\r\n                    </span>\r\n                    <span className=\"search-item-append vertical-middle\" onClick={this.handleAppend}>\r\n                        {appendBtn}\r\n                    </span>\r\n                </div>\r\n                <div className=\"search-item-singer name\">\r\n                    <span title={singer}>{singer}</span>\r\n                </div>\r\n                <div className=\"search-item-time\">\r\n                    {timeFormat(time)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    let theState = state.AudioReducer\r\n    let currentSongInfo = getCurrentSongInfo(theState)\r\n    let currentSongId = currentSongInfo.id\r\n    return {\r\n        AudioStatus: theState.AudioStatus,\r\n        currentSongId: currentSongId,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        appendTheSong: (songInfo) => {\r\n            dispatch(appendTheSong(songInfo))\r\n        },\r\n        playTheSongInPage: (songInfo) => {\r\n            dispatch(playTheSongInPage(songInfo))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchItem)","import React, {Component} from 'react'\r\nimport SearchItem from './SearchItem'\r\nimport {connect} from 'react-redux'\r\nimport PageSelector from \"../../common/PageSelector\"\r\nimport {changePage} from \"../actions\"\r\nimport {withRouter} from \"react-router-dom\"\r\n\r\nclass SearchList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.pushHistory = this.pushHistory.bind(this)\r\n        this.getSelectorInfo = this.getSelectorInfo.bind(this)\r\n    }\r\n\r\n    dataCleaning(data) {\r\n        let singerList = data.ar.map(artist => artist.name)\r\n        let singer = singerList.join('/')\r\n        let id = String(data.privilege.id)\r\n        return {\r\n            name: data.name,\r\n            singer,\r\n            time: data.dt / 1000,\r\n            id,\r\n            pic: data.al.picUrl,\r\n            lrc: `https://v1.itooi.cn/netease/lrc?id=${id}`,\r\n            url:`https://v1.itooi.cn/netease/url?id=${id}`,\r\n            copyright: data.privilege.fl !== 0,\r\n        }\r\n    }\r\n\r\n    pushHistory(newPage) {\r\n        this.props.history.push(`search?s=${this.props.searchContent}&page=${newPage}`)\r\n    }\r\n\r\n    getSelectorInfo() {\r\n        let totalCount = this.props.searchResult.data.songCount\r\n        if (totalCount > 600) {\r\n            totalCount = 600\r\n        }\r\n        let pageSize = this.props.pageSize\r\n        let totalPage = Math.ceil(totalCount / pageSize)\r\n        return {\r\n            totalPage,\r\n            currentPage: Number(this.props.searchPage),\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let searchData = this.props.searchResult.data.songs\r\n        let selectorInfo = this.getSelectorInfo()\r\n        return(\r\n            <div className=\"search-list-container\">\r\n                <span className=\"search-head-number\">\r\n                </span>\r\n                <div className=\"search-head-container\">\r\n                    <div className=\"search-head-name name\">\r\n                        <span title=\"歌名\">歌曲</span>\r\n                    </div>\r\n                    <div className=\"search-head-singer name\">\r\n                        <span title=\"歌手\">歌手</span>\r\n                    </div>\r\n                    <div className=\"search-head-time\">\r\n                        时长\r\n                    </div>\r\n                </div>\r\n                <div className=\"search-list\">\r\n                    {searchData.map((value, i) => {\r\n                        let num = i + this.props.pageSize * (this.props.searchPage - 1)\r\n                        return (\r\n                            <SearchItem key={i} index={num} result={this.dataCleaning(value)}/>\r\n                        )\r\n                    })}\r\n                </div>\r\n                    <PageSelector selectorInfo={selectorInfo} changePage={this.props.changePage} pushHistory={this.pushHistory}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateTopProps = (state) => {\r\n    let theState = state.SearchBarReducer\r\n    return {\r\n        searchContent: theState.searchContent,\r\n        searchResult: theState.searchResult,\r\n        searchPage: theState.searchPage,\r\n        pageSize: theState.pageSize,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changePage: (page) => {\r\n            dispatch(changePage(page))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateTopProps, mapDispatchToProps)(withRouter(SearchList))","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport * as Status from '../status'\r\nimport {fetchSearchResult, inputChange} from '../actions'\r\nimport SearchBar from './SearchBar'\r\nimport SearchList from './SearchList'\r\nimport {argsFromQuery} from '../../../utils'\r\nimport './SearchPage.css'\r\nimport Loading from \"../../common/Loading\"\r\n\r\nclass SearchPage extends Component {\r\n\r\n    componentDidMount() {\r\n        let query = argsFromQuery(this.props.location.search)\r\n        let s = query.s\r\n        let page = Number(query.page)\r\n        if (s !== undefined && s !== this.props.searchContent) {\r\n            this.props.fetchSearchResult(s, page)\r\n            this.props.inputChange(s)\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.location.search !== this.props.location.search) {\r\n            let query = argsFromQuery(this.props.location.search)\r\n            let s = query.s\r\n            let page = Number(query.page)\r\n            this.props.fetchSearchResult(s, page)\r\n        }\r\n    }\r\n\r\n    showSearchResult() {\r\n        switch (this.props.status) {\r\n            case Status.LOADING: {\r\n                return (\r\n                    <Loading />\r\n                )\r\n            }\r\n            case Status.SUCCESS: {\r\n                return (\r\n                    <SearchList />\r\n                )\r\n            }\r\n            case Status.FAILURE: {\r\n                return (\r\n                    <div className=\"failed-container\">歌曲搜索失败</div>\r\n                )\r\n            }\r\n            default: {\r\n                return (\r\n                    <div></div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"search-page-content\">\r\n                <SearchBar />\r\n                {this.showSearchResult()}\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateTopProps = (state) => {\r\n    let theState = state.SearchBarReducer\r\n    return {\r\n        status: theState.status,\r\n        searchResult: theState.searchResult,\r\n        searchContent: theState.searchContent,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchSearchResult: (input, page) => {\r\n            dispatch(fetchSearchResult(input, page))\r\n        },\r\n        inputChange: (input) => {\r\n            dispatch(inputChange(input))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateTopProps, mapDispatchToProps)(SearchPage)","export const LOADING = 'loading'\r\nexport const SUCCESS = 'success'\r\nexport const FAILURE = 'failure'","import React, {Component} from 'react'\r\nimport {changeImgResolution, parseClass} from '../../../utils'\r\nimport {SearchItem} from '../../searchPage'\r\nimport PageSelector from '../../common/PageSelector'\r\nimport {albumChangePage} from '../actions'\r\nimport {connect} from 'react-redux'\r\n\r\nclass AlbumDetail extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isAllDescriptionShowed: false,\r\n        }\r\n\r\n        this.descriptionToggle = this.descriptionToggle.bind(this)\r\n        this.getPageSelectorInfo = this.getPageSelectorInfo.bind(this)\r\n    }\r\n\r\n    descriptionToggle() {\r\n        this.setState((state) => ({\r\n            isAllDescriptionShowed: !state.isAllDescriptionShowed,\r\n        }))\r\n    }\r\n\r\n    static dataCleaning(fetchedData) {\r\n        let singerList = fetchedData.artists.map(artist => artist.name)\r\n        let singer = singerList.join('/')\r\n        return {\r\n            id: fetchedData.id,\r\n            name: fetchedData.name,\r\n            singer,\r\n            time: fetchedData.duration / 1000,\r\n            pic: fetchedData.album.blurPicUrl,\r\n            lrc: `https://v1.itooi.cn/netease/lrc?id=${fetchedData.id}`,\r\n            url: `https://v1.itooi.cn/netease/url?id=${fetchedData.id}`,\r\n            // copyright: fetchedData.privilege.fl !== 0,\r\n            copyright: true,\r\n        }\r\n    }\r\n\r\n    getPageSelectorInfo() {\r\n        let totalPage = Math.ceil(this.props.albumDetailInfo.data.trackCount / this.props.albumPageSize)\r\n        return {\r\n            totalPage,\r\n            currentPage: Number(this.props.albumCurrentPage),\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let data = this.props.albumDetailInfo.data\r\n        let {coverImgUrl, name, description, trackCount} = data\r\n        coverImgUrl = changeImgResolution(coverImgUrl, 200)\r\n\r\n        let {albumCurrentPage, albumPageSize} = {...this.props}\r\n        let start = (albumCurrentPage - 1) * albumPageSize\r\n        let end = start + albumPageSize\r\n        let dataOfShowedAlbums = data.tracks.slice(start, end)\r\n\r\n        let {isAllDescriptionShowed} = this.state\r\n        let classNameOfAlbumInfo = parseClass({\r\n            'album-list-info': true,\r\n            'all-description-showed': isAllDescriptionShowed,\r\n        })\r\n        let classNameOfDescription = parseClass({\r\n            'album-list-description': true,\r\n            'all-description-showed': isAllDescriptionShowed,\r\n        })\r\n        return (\r\n            <div className=\"album-list-container\">\r\n                <div className={classNameOfAlbumInfo}>\r\n                    <img className=\"album-list-bg\" src={coverImgUrl} alt=\"专辑图片\"/>\r\n                    <span className=\"album-list-pic\">\r\n                                <img src={coverImgUrl} alt=\"专辑图片\"/>\r\n                            </span>\r\n                    <div className=\"album-list-name\" title={name}>\r\n                        {`歌单：${name}`}\r\n                    </div>\r\n                    <p className={classNameOfDescription}>\r\n                        <span>介绍：</span><br/>\r\n                        {`${description}`}\r\n                    </p>\r\n                    <span className=\"description-toggle\" onClick={this.descriptionToggle}>{isAllDescriptionShowed ? '收起' : '展开'}</span>\r\n                </div>\r\n                <div className=\"album-list-count\">\r\n                    {`歌曲列表 (${trackCount}首歌)`}\r\n                </div>\r\n                <div className=\"album-list-items\">\r\n                    {dataOfShowedAlbums.map((value, i) => {\r\n                        let index = i + start\r\n                        return <SearchItem key={index} index={index} result={AlbumDetail.dataCleaning(value)}/>\r\n                    })}\r\n                </div>\r\n                <PageSelector selectorInfo={this.getPageSelectorInfo()} changePage={this.props.changePage} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    let theState = state.PlayListReducer\r\n    return {\r\n        albumDetailInfo: theState.albumDetailInfo,\r\n        albumCurrentPage: theState.albumCurrentPage,\r\n        albumPageSize: theState.albumPageSize,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changePage: (page) => {\r\n            dispatch(albumChangePage(page))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AlbumDetail)","import React, {Component} from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport {connect} from 'react-redux'\r\nimport {deleteItemDetail} from '../actions'\r\nimport * as Status from '../status'\r\nimport {loadingIcon} from '../../common/icon'\r\nimport AlbumDetail from './AlbumDetail'\r\n\r\nclass ModalPortal extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.deleteDetailInfo = this.deleteDetailInfo.bind(this)\r\n        this.container = document.querySelector('#pop-container')\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        let body = document.body\r\n        if (this.props.albumStatus !== Status.INIT) {\r\n            body.classList.add('ban-scroll')\r\n        } else {\r\n            body.classList.remove('ban-scroll')\r\n        }\r\n    }\r\n\r\n    deleteDetailInfo() {\r\n        this.props.deleteItemDetail()\r\n    }\r\n\r\n    showAlbumList() {\r\n        switch (this.props.albumStatus) {\r\n            case Status.INIT: {\r\n                return null\r\n            }\r\n            case Status.LOADING: {\r\n                return (\r\n                    <div className=\"pop-up\">\r\n                        <div className=\"pop-window\">\r\n                            <span className=\"modal-portal-toggle\" onClick={this.deleteDetailInfo}>×</span>\r\n                            <div className=\"loading-container\">\r\n                                {loadingIcon}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            case Status.SUCCESS: {\r\n                return (\r\n                    <div className=\"pop-up\">\r\n                        <div className=\"pop-window\">\r\n                            <span className=\"modal-portal-toggle\" onClick={this.deleteDetailInfo}>×</span>\r\n                            <AlbumDetail />\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            default: {\r\n                return null\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return ReactDOM.createPortal(this.showAlbumList(), this.container)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    let theState = state.PlayListReducer\r\n    return {\r\n        albumStatus: theState.albumStatus,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deleteItemDetail: () => {\r\n            dispatch(deleteItemDetail())\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalPortal)","import React, { Component } from 'react'\nimport PlayList from './PlayList'\nimport TagSelector from './TagSelector'\nimport ModalPortal from './ModalPortal'\nimport './playListPage.css'\n\nclass PlayListPage extends Component {\n\n    render() {\n        return (\n            <div className=\"playlist-content\">\n                <TagSelector />\n                <PlayList />\n                <ModalPortal />\n            </div>\n        )\n    }\n}\n\nexport default PlayListPage\n","import React, {Component} from 'react'\r\n\r\nclass NotFound extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"error-404\">\r\n                <img src=\"https://static.hdslb.com/error/very_sorry.png\" alt=\"not-found\"/>\r\n                <div className=\"error-description\">\r\n                    <b>错误号：404</b><br/>\r\n                    <b>请点击上方导航，进行浏览（未配置服务器进行页面重定向）</b>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NotFound","import React, { Component } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport {connect} from 'react-redux'\n\nclass Menu extends Component {\n\n    render() {\n        let {searchContent, searchPage} = {...this.props.searchBar}\n        let searchPath = `?s=${searchContent}&page=${searchPage}`\n        if (searchContent === '' || searchContent === undefined) {\n            searchPath = ''\n        }\n        let menus = [\n            {\n                text: '首页',\n                pathname: '/',\n                search: '',\n            },\n            {\n                text: '热门歌单',\n                pathname: `/playlist`,\n                search: `?cat=${this.props.playList.activeTag}&page=${this.props.playList.currentPage}`,\n            },\n            {\n                text: '搜索',\n                pathname: `/search`,\n                search: searchPath,\n            },\n        ]\n        return (\n            <nav>\n                <ul className=\"nav-container\">\n                    {\n                        menus.map((e, index) => {\n                                let href = `${e.pathname}${e.search}`\n                                let isCurrent = this.props.currentPathname === e.pathname\n                                return (\n                                    <li className=\"nav-item\" key={index}>\n                                        <Link className={isCurrent? \"nav-link nav-link-current\" : \"nav-link\"} to={href}>{e.text}</Link>\n                                    </li>\n                                )\n                            }\n                        )\n                    }\n                </ul>\n            </nav>\n        )\n    }\n}\n\nconst mapStateTopProps = (state, ownProps) => {\n    return {\n        playList: state.PlayListReducer,\n        searchBar: state.SearchBarReducer,\n        currentPathname: ownProps.location.pathname,\n    }\n}\n\nexport default withRouter(connect(mapStateTopProps, null)(Menu))\n","import React, {Component} from 'react'\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"page-footer\">\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer","import React, {Component} from 'react'\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport {view as Home} from './homePage/'\nimport {view as PlayListPage} from './playListPage/'\nimport {view as SearchPage} from './searchPage/'\nimport NotFound from './NotFound'\nimport Menu from './Menu'\nimport {view as MusicController} from './audioController/'\nimport Footer from './Footer'\nimport './App.css'\n\nclass App extends Component {\n\n    render() {\n        return (\n            // BrowserRouter 会使用 HTML5 的 history API 渲染单页路由\n            <Router basename={process.env.PUBLIC_URL}>\n                <React.Fragment>\n                    <Menu />\n                    {/*Router 只能有一个子元素 也可以放一个 Switch 组件*/}\n                    <div className=\"content-container\">\n                        <Switch>\n                            {/*Route 组件用来匹配 location.path 的值, 并且渲染相应的组件 */}\n                            {/*exact 表示路径完全匹配时才算匹配*/}\n                            <Route exact path=\"/\" component={Home} />\n                            <Route exact path=\"/playlist\" component={PlayListPage} />\n                            <Route exact path=\"/search\" component={SearchPage} />\n                            <Route component={NotFound} />\n                        </Switch>\n                    </div>\n                    <Footer />\n                    <MusicController />\n                </React.Fragment>\n            </Router>\n        )\n    }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { applyMiddleware, createStore, combineReducers} from 'redux'\r\nimport {reducer as homePageReducer} from './components/homePage/'\r\nimport {reducer as SearchBarReducer} from './components/searchPage/'\r\nimport {reducer as PlayListReducer} from './components/playListPage/'\r\nimport {reducer as AudioReducer} from './components/audioController/'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {loadSongListInLocalStorage, loadCurrentSongIndexInLocalStorage} from './utils'\r\n\r\nconst initValue = {\r\n    homePageReducer: {\r\n        images: [],\r\n    },\r\n    SearchBarReducer: {\r\n        searchContent: '',\r\n        searchPage: 1,\r\n        pageSize: 20,\r\n    },\r\n    PlayListReducer: {\r\n        activeTag: '全部',\r\n        albumStatus: '',\r\n        albumDetailInfo: '',\r\n        albumCurrentPage: 1,\r\n        albumPageSize: 30,\r\n        currentPage: 1,\r\n        pageSize: 60,\r\n        totalPage: 20,\r\n    },\r\n    AudioReducer: {\r\n        AudioStatus: 'pause',\r\n        songList: loadSongListInLocalStorage(),\r\n        showSongListWindow: false,\r\n        currentSongExtraInfo: {\r\n            currentSongIndex: loadCurrentSongIndexInLocalStorage(),\r\n            currentLyric: [],\r\n            currentLyricIndex: -1,\r\n        },\r\n        playMode: 'loop',\r\n        initSongInfo: {\r\n            id: -1,\r\n            name: '歌曲',\r\n            singer: '歌手',\r\n            lrc: null,\r\n            pic: \"http://s4.music.126.net/style/web2/img/default/default_album.jpg\",\r\n            url: null,\r\n            time: null,\r\n        },\r\n    },\r\n}\r\n\r\nconst reducerObj = {\r\n    homePageReducer,\r\n    SearchBarReducer,\r\n    PlayListReducer,\r\n    AudioReducer,\r\n}\r\n\r\nconst reducer = combineReducers(reducerObj)\r\n\r\nconst middleware = [thunkMiddleware]\r\n\r\nconst storeEnhancers = composeWithDevTools(applyMiddleware(...middleware))\r\n\r\nconst Store = createStore(reducer, initValue, storeEnhancers)\r\n\r\nexport default Store","import * as homePage from './actionTypes.js'\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case homePage.GET_HOMEPAGE_IMG: {\r\n            return {\r\n                ...state,\r\n                images: action.imgObj,\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state === undefined ? {} : state\r\n        }\r\n    }\r\n}","import * as search from './actionTypes.js'\r\nimport * as Status from './status.js'\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case search.INPUT_CHANGE: {\r\n            return {\r\n                ...state,\r\n                searchInput: action.input\r\n            }\r\n        }\r\n        case search.SEARCH_STARTED: {\r\n            return {\r\n                ...state,\r\n                status: Status.LOADING\r\n            }\r\n        }\r\n        case search.SEARCH_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                status: Status.SUCCESS,\r\n                searchResult: action.result,\r\n                searchContent: action.searchContent,\r\n                searchPage: action.searchPage,\r\n            }\r\n        }\r\n        case search.SEARCH_FAILURE: {\r\n            return {\r\n                status: Status.FAILURE\r\n            }\r\n        }\r\n        case search.CHANGE_PAGE: {\r\n            return {\r\n                ...state,\r\n                searchPage: action.page,\r\n            }\r\n        }\r\n        default: {\r\n            return state === undefined ? [] : state\r\n        }\r\n    }\r\n}","import * as playList from './actionTypes.js'\r\nimport * as Status from './status.js'\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case playList.PLAYLIST_TAG_CHANGE: {\r\n            return {\r\n                ...state,\r\n                activeTag: action.tagName,\r\n                currentPage: 1,\r\n            }\r\n        }\r\n        case playList.LOAD_ITEM_DETAIL_STARTED: {\r\n            return {\r\n                ...state,\r\n                albumStatus: Status.LOADING\r\n            }\r\n        }\r\n        case playList.LOAD_ITEM_DETAIL_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                albumStatus: Status.SUCCESS,\r\n                albumDetailInfo: action.albumDetailInfo\r\n            }\r\n        }\r\n        case playList.DELETE_ITEM_DETAIL: {\r\n            return{\r\n                ...state,\r\n                albumStatus: '',\r\n                albumDetailInfo: '',\r\n                albumCurrentPage: 1,\r\n            }\r\n        }\r\n        case playList.PLAYLIST_LOAD_STARTED: {\r\n            return {\r\n                ...state,\r\n                playListStatus: Status.LOADING\r\n            }\r\n        }\r\n        case playList.PLAYLIST_LOAD_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                playListStatus: Status.SUCCESS,\r\n                playListResult: action.playListResult\r\n            }\r\n        }\r\n        case playList.PLAYLIST_LOAD_FAILURE: {\r\n            return {\r\n                ...state,\r\n                playListStatus: Status.FAILURE\r\n            }\r\n        }\r\n        case playList.PLAYLIST_PAGE_CHANGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.page,\r\n            }\r\n        }\r\n        case playList.ALBUM_PAGE_CHANGE: {\r\n            return {\r\n                ...state,\r\n                albumCurrentPage: action.page,\r\n            }\r\n        }\r\n        default: {\r\n            return state === undefined ? {} : state\r\n        }\r\n    }\r\n}","import * as audioController from './actionTypes'\r\nimport {saveSongToLocalStorage, deleteSongInLocalStorage, saveCurrentSongIndexInLocalStorage} from \"../../utils\"\r\nimport {message} from \"../common/message\"\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case audioController.TOGGLE_SONG_LIST_WINDOW: {\r\n            return {\r\n                ...state,\r\n                showSongListWindow: !state.showSongListWindow,\r\n            }\r\n        }\r\n        case audioController.CHANGE_AUDIO_STATUS: {\r\n            return {\r\n                ...state,\r\n                AudioStatus: action.status\r\n            }\r\n        }\r\n        case audioController.APPEND_THE_SONG: {\r\n            let songList = state['songList']\r\n            let cloneList = JSON.parse(JSON.stringify(songList))\r\n            let isTheSongNotExisted = songList.every((value) => value.id !== action.songInfo.id)\r\n            if (isTheSongNotExisted) {\r\n                cloneList.push(action.songInfo)\r\n                saveSongToLocalStorage(action.songInfo)\r\n                message.success('添加成功', 2000)\r\n            } else {\r\n\r\n                message.warning('歌曲已存在', 2000)\r\n            }\r\n            return {\r\n                ...state,\r\n                songList: cloneList,\r\n            }\r\n        }\r\n        case audioController.DELETE_THE_SONG: {\r\n            let songList = state['songList']\r\n            let cloneList = JSON.parse(JSON.stringify(songList))\r\n            let deleteSongIndex = action.songIndex\r\n            let currentSongIndex = state.currentSongExtraInfo.currentSongIndex\r\n            let listLength = cloneList.length\r\n            deleteSongInLocalStorage(deleteSongIndex)\r\n            cloneList.splice(deleteSongIndex, 1)\r\n            let justOneSong = listLength === 1\r\n            let isCurrentSong = currentSongIndex === deleteSongIndex\r\n            let isTheLastSong = currentSongIndex === listLength - 1\r\n            let beforeCurrentSong = currentSongIndex < deleteSongIndex\r\n            let updateCurrentSongIndex = -1\r\n            let updateCurrentLyric = state.currentSongExtraInfo.currentLyric\r\n            if (justOneSong) {\r\n                updateCurrentSongIndex = -1\r\n            } else if (isCurrentSong) {\r\n                if (isTheLastSong) {\r\n                    updateCurrentSongIndex = currentSongIndex - 1\r\n                } else {\r\n                    updateCurrentSongIndex = currentSongIndex\r\n                }\r\n                updateCurrentLyric = []\r\n            } else {\r\n                if (beforeCurrentSong) {\r\n                    updateCurrentSongIndex = currentSongIndex\r\n                } else {\r\n                    updateCurrentSongIndex = currentSongIndex -1\r\n                }\r\n            }\r\n            saveCurrentSongIndexInLocalStorage(updateCurrentSongIndex)\r\n            return {\r\n                ...state,\r\n                songList: cloneList,\r\n                currentSongExtraInfo: {\r\n                    ...state.currentSongExtraInfo,\r\n                    currentLyric: updateCurrentLyric,\r\n                    currentSongIndex: updateCurrentSongIndex,\r\n                }\r\n            }\r\n        }\r\n        case audioController.PLAY_THE_SONG_IN_PAGE: {\r\n            let songList = state['songList']\r\n            let cloneList = JSON.parse(JSON.stringify(songList))\r\n            let updateCurrentSongIndex = songList.findIndex((song) => song.id === action.songInfo.id)\r\n            let isTheSongNotExisted = updateCurrentSongIndex === -1\r\n            if (isTheSongNotExisted) {\r\n                cloneList.push(action.songInfo)\r\n                saveSongToLocalStorage(action.songInfo)\r\n                updateCurrentSongIndex = cloneList.length - 1\r\n            }\r\n            saveCurrentSongIndexInLocalStorage(updateCurrentSongIndex)\r\n            return {\r\n                ...state,\r\n                songList: cloneList,\r\n                currentSongExtraInfo: {\r\n                    ...state.currentSongExtraInfo,\r\n                    currentSongIndex: updateCurrentSongIndex,\r\n                    currentLyricIndex: -1,\r\n                },\r\n            }\r\n        }\r\n        case audioController.PLAY_THE_SONG_IN_LIST: {\r\n            saveCurrentSongIndexInLocalStorage(action.songIndex)\r\n            return {\r\n                ...state,\r\n                currentSongExtraInfo: {\r\n                    ...state.currentSongExtraInfo,\r\n                    currentSongIndex: action.songIndex,\r\n                    currentLyricIndex: -1,\r\n                    currentLyric: [],\r\n                }\r\n            }\r\n        }\r\n        case audioController.PLAY_NEXT_SONG: {\r\n            let modeType = action.modeType\r\n            let currentSongIndex = state.currentSongExtraInfo.currentSongIndex\r\n            let LengthOfSongList = state.songList.length\r\n            let mapModeTypeToNextStep = {\r\n                loop: action.loopStep,\r\n                circle: 0,\r\n                random: parseInt(LengthOfSongList * Math.random()),\r\n            }\r\n            let step = mapModeTypeToNextStep[modeType]\r\n            let nextSongIndex = (currentSongIndex + step + LengthOfSongList) % LengthOfSongList\r\n            if (currentSongIndex === -1) {\r\n                nextSongIndex = -1\r\n            }\r\n            let currentLyric = []\r\n            if (nextSongIndex === currentSongIndex) {\r\n                currentLyric = state.currentSongExtraInfo.currentLyric\r\n            }\r\n            saveCurrentSongIndexInLocalStorage(nextSongIndex)\r\n            return {\r\n                ...state,\r\n                currentSongExtraInfo: {\r\n                    ...state.currentSongExtraInfo,\r\n                    currentSongIndex: nextSongIndex,\r\n                    currentLyric,\r\n                    currentLyricIndex: -1,\r\n                },\r\n            }\r\n        }\r\n        // case audioController.GET_SONG: {\r\n        //     return {\r\n        //         ...state,\r\n        //         currentSongExtraInfo: {\r\n        //             ...state.currentSongExtraInfo,\r\n        //             url: action.url,\r\n        //         }\r\n        //     }\r\n        // }\r\n        case audioController.GET_LYRIC: {\r\n            return {\r\n                ...state,\r\n                currentSongExtraInfo: {\r\n                    ...state.currentSongExtraInfo,\r\n                    currentLyric: action.lyric,\r\n                },\r\n            }\r\n        }\r\n        case audioController.GET_CURRENT_INDEX: {\r\n            let index = action.currentLyricIndex\r\n            if (index === undefined) {\r\n                console.log('index undefined')\r\n                return {\r\n                    ...state,\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    currentSongExtraInfo: {\r\n                        ...state.currentSongExtraInfo,\r\n                        currentLyricIndex: index,\r\n                    },\r\n                }\r\n            }\r\n        }\r\n        case audioController.CHANGE_PLAY_MODE: {\r\n            return {\r\n                ...state,\r\n                playMode: action.modeType,\r\n            }\r\n        }\r\n        default: {\r\n            return state === undefined ? {} : state\r\n        }\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PlayerApp from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport Store from './Store'\n\nconst app = (\n    <Provider store={Store}>\n        <PlayerApp />\n    </Provider>\n)\n\nconst container = document.getElementById('root')\n\nReactDOM.render(app,container)\n\nserviceWorker.unregister();"],"sourceRoot":""}