{"version":3,"sources":["components/Home.js","api/api.js","components/playListPage/actions.js","components/playListPage/actionTypes.js","components/playListPage/views/PlayListItem.js","utils.js","components/playListPage/views/PlayList.js","components/playListPage/status.js","components/playListPage/views/TagItem.js","components/playListPage/views/TagSelector.js","components/playListPage/views/PlayListPage.js","components/searchPage/actions.js","components/searchPage/actionTypes.js","components/searchPage/views/SearchBar.js","components/audioController/actions.js","components/audioController/actionTypes.js","components/searchPage/views/SearchItem.js","components/searchPage/views/SearchList.js","components/searchPage/views/SearchPage.js","components/searchPage/status.js","components/playListPage/views/ModalPortal.js","components/NotFound.js","components/Menu.js","components/audioController/views/AudioController.js","components/audioController/views/SongItem.js","components/audioController/views/SongList.js","components/audioController/views/MusicController.js","components/Footer.js","components/App.js","serviceWorker.js","Store.js","components/searchPage/reducer.js","components/playListPage/reducer.js","components/audioController/reducer.js","index.js"],"names":["Home","react_default","a","createElement","Component","MusicApi","_Api","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","queryObj","callback","_queryObj","objectSpread","input","limit","offset","company","path","concat","get","_queryObj2","category","_queryObj3","albumId","lrcUrl","Api","baseUrl","isPathEqualToUrl","args","_args","method","url","data","r","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","status","console","log","send","ajax","playListTagChange","tagName","type","PlayListItem","list","split","_this$props$itemInfo","props","itemInfo","id","name","coverImgUrl","coverThumbImgUrl","parseImgUrl","className","data-id","onClick","fetchAlbumDetailInfo","bind","src","alt","title","connect","dispatch","AlbumId","length","undefined","albumDetailInfo","playListResult","JSON","parse","response","code","timeFormat","seconds","m","String","Math","floor","s","saveSongToLocalStorage","songInfo","songList","localStorage","getItem","push","setItem","stringify","getCurrentSongInfo","theState","currentSongIndex","currentSongExtraInfo","initSongInfo","argsFromQuery","query","slice","o","forEach","e","_e$split","_e$split2","slicedToArray","k","v","PlayList","activeTag","location","search","cat","fetchHotPlayList","decodeURI","prevProps","prevState","snapshot","viewBox","cx","cy","fill","map","index","views_PlayListItem","showHotPlayList","state","PlayListReducer","playListStatus","page","Number","hotPlayList","playListLoadSuccess","withRouter","TagItem","toggleShow","i","_this","rowData","theTagTabs","getClassName","Link","to","tagChange","_this2","TagSelector","call","mainTags","styleTags","languageTags","senceTags","emotionTags","themeTags","mapTagToMain","语种","风格","场景","情感","主题","show","assertThisInitialized","hide","clickOnBlankArea","document","onclick","nativeEvent","stopImmediatePropagation","setState","d","pathname","views_TagItem","PlayListPage","views_TagSelector","views_PlayList","inputChange","fetchSearchResult","searchResult","result","searchContent","error","SearchBar","onSearch","onChange","onKeyPress","searchQuery","parseUrlGetSearchContent","nextProps","nextState","nextContext","event","target","searchInput","isEqualToOldSearchContent","isAtSearchPage","window","urlObj","getSearchUrl","history","trim","placeholder","onKeyDown","SearchBarReducer","searchAction","changeAudioStatus","changePlayMode","modeType","saveCurrentLyricIndex","currentLyricIndex","appendTheSong","deleteTheSong","songIndex","playTheSongInPage","playTheSongInList","playNextSong","loopStep","getLyric","lyric","getLyricFromNet","l","lyricList","lyricsArray","oneLyricString","oneLyric","time","j","timeList","isNaN","lyricItem","parseLyric","actions","SearchItem","handlePlay","handleAppend","handlePause","currentSongId","querySelector","play","pause","AudioStatus","isTheSongPlaying","isOdd","getPlayOrPauseButtonSvg","singer","AudioReducer","SearchList","searchData","views_SearchItem","SearchPage","views_SearchList","views_SearchBar","showSearchResult","ModalPortal","deleteDetailInfo","descriptionToggle","isAllDescriptionShowed","body","albumStatus","classList","add","remove","deleteItemDetail","fetchedData","artists","artist","join","duration","pic","album","blurPicUrl","lrc","description","trackCount","tracks","dataCleaning","showAlbumList","NotFound","Menu","searchPath","menus","text","href","isCurrent","currentPathname","ownProps","AudioController","currentTime","sliding","hover","audio","React","createRef","songSlider","playOrPause","clickToSeek","dragToSeek","AfterDragToSeek","handleHover","changeToPlayNextSong","toggleList","current","addEventListener","currentSongInfo","parseCurrentTimeToGetLyricIndex","playMode","lengthOfSongList","lyricArray","currentLyric","abs","theLastLyric","contains","_event$currentTarget$","currentTarget","getBoundingClientRect","left","width","clientX","alert","getLyricIndexWhenJumpSong","_this3","isRunning","isFirstDrag","persist","requestAnimationFrame","seek","_this$songSlider$curr","dragPosition","toggle","height","scrollTop","modeList","indexOf","nextModeType","_this4","_this$state","_this$props$currentSo","playModeTitle","loop","circle","random","ref","onMouseOver","onMouseOut","style","draggable","onDrag","onDragEnd","getPlayButtonSvg","data-mode","getModeButtonSvg","SongItem","_this$props$songInfo","color","SongList","div","picUrl","backgroundImage","views_SongItem","autoScrollLyricList","MusicController","views_AudioController","views_SongList","Footer","App","BrowserRouter","Fragment","components_Menu","Switch","Route","exact","component","components_Footer","audioController_views_MusicController","views_ModalPortal","Boolean","hostname","match","initValue","loadSongListInLocalStorage","reducerObj","action","every","cloneList","listLength","splice","deleteSongInLocalStorage","newSongIndex","isTheSongNotExisted","LengthOfSongList","nextSongIndex","parseInt","reducer","combineReducers","middleware","thunkMiddleware","storeEnhancers","composeWithDevTools","applyMiddleware","Store","createStore","ReactDOM","render","es","store","src_components_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2d710cd1.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass Home extends Component {\n    render() {\n        return (\n            <div>\n                HomePage\n            </div>\n        )\n    }\n}\n\nexport default Home\n","const ajax = function(args, callback) {\r\n    let {method, url, data} = {...args}\r\n    let r = new XMLHttpRequest()\r\n    r.open(method, url, true)\r\n    // r.setRequestHeader('Content-Type', 'application/json')\r\n    r.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded')\r\n    r.onreadystatechange = () => {\r\n        if (r.readyState === 4) {\r\n            if ((r.status >= 200 && r.status < 300) || r.status === 304) {\r\n                callback(r)\r\n            } else {\r\n                console.log('error')\r\n            }\r\n        }\r\n    }\r\n    r.send(data)\r\n}\r\n\r\nclass Api {\r\n    constructor() {\r\n        // this.baseUrl = 'https://api.itooi.cn/music/'\r\n        this.baseUrl = 'https://v1.itooi.cn/'\r\n    }\r\n\r\n    get(path, callback, isPathEqualToUrl) {\r\n        let method = 'GET'\r\n        let url\r\n        if (isPathEqualToUrl) {\r\n            url = path\r\n        } else {\r\n            url = this.baseUrl + path\r\n        }\r\n        let args = {\r\n            method,\r\n            url,\r\n            data: null,\r\n        }\r\n        ajax(args, callback)\r\n    }\r\n}\r\n\r\nexport class MusicApi extends Api {\r\n    searchResult(queryObj, callback) {\r\n        let {input, limit, offset, company} = {...queryObj}\r\n        // let path = `${company}/search?key=579621905&s=${input}&type=song&limit=${limit}&offset=${offset}`\r\n        let path = `${company}/search?keyword=${input}&type=song&pageSize=${limit}&page=${offset}&format=1`\r\n        // 如果需要源数据，加上 &isOrigin=1\r\n        this.get(path, callback)\r\n    }\r\n\r\n    hotPlayList(queryObj, callback) {\r\n        let {category, limit, offset, company} = {...queryObj}\r\n        // let path = `${company}/hotSongList?key=579621905&cat=${category}&limit=${limit}&offset=${offset}`\r\n        let path = `${company}/songList/hot?cat=${category}&pageSize=${limit}&page=${offset}&format=1`\r\n        this.get(path, callback)\r\n    }\r\n\r\n    albumDetailInfo(queryObj, callback) {\r\n        let {albumId, company} = {...queryObj}\r\n        let path = `${company}/songList?id=${albumId}`\r\n        this.get(path, callback)\r\n    }\r\n\r\n    getLyric(lrcUrl, callback) {\r\n        this.get(lrcUrl, callback, true)\r\n    }\r\n}","import * as playList from './actionTypes.js'\r\nimport {MusicApi} from '../../api/api.js'\r\n\r\n// 热门歌单标签切换\r\nexport const playListTagChange = (tagName) => ({\r\n    type: playList.PLAYLIST_TAG_CHANGE,\r\n    tagName\r\n    })\r\n\r\n// 开始加载歌单具体信息\r\nexport const loadItemDetailStarted = () => ({\r\n    type: playList.LOAD_ITEM_DETAIL_STARTED,\r\n})\r\n\r\n// 加载歌单具体信息成功\r\nexport const loadItemDetailSuccess = (albumDetailInfo) => ({\r\n    type: playList.LOAD_ITEM_DETAIL_SUCCESS,\r\n    albumDetailInfo\r\n})\r\n\r\n// 删除歌单具体信息，即初始化模态弹窗\r\nexport const deleteItemDetail = () => ({\r\n    type: playList.DELETE_ITEM_DETAIL,\r\n})\r\n\r\n// 热门歌单列表开始加载\r\nexport const playListLoadStarted = () => ({\r\n    type: playList.PLAYLIST_LOAD_STARTED,\r\n})\r\n\r\n// 热门歌单列表加载成功\r\nexport const playListLoadSuccess = (playListResult) => ({\r\n    type: playList.PLAYLIST_LOAD_SUCCESS,\r\n    playListResult,\r\n})\r\n\r\n// 热门歌单列表加载成功\r\nexport const playListLoadFailure = () => ({\r\n    type: playList.PLAYLIST_LOAD_FAILURE,\r\n})\r\n\r\n// 异步加载热门歌单列表\r\nexport const fetchHotPlayList = (category=\"全部\", page=1, company='netease') => {\r\n    let limit = 30\r\n    let offset = (Number(page)- 1) * limit\r\n    return (dispatch) => {\r\n        let queryObj = {\r\n                category,\r\n                limit,\r\n                offset,\r\n                company,\r\n        }\r\n        dispatch(playListLoadStarted())\r\n        let api = new MusicApi()\r\n        api.hotPlayList(queryObj, (r) => {\r\n            let playListResult = JSON.parse(r.response)\r\n            console.log('加载热门歌单列表完成', playListResult)\r\n            if (playListResult.code === 200) {\r\n                dispatch(playListLoadSuccess(playListResult))\r\n            } else {\r\n                dispatch(playListLoadFailure())\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n// 加载歌单具体信息\r\nexport const fetchAlbumDetailInfo = (albumId, company='netease') => {\r\n    console.log('albumId', albumId)\r\n    return (dispatch) => {\r\n        let args = {\r\n            albumId,\r\n            company,\r\n        }\r\n        dispatch(loadItemDetailStarted())\r\n        let api = new MusicApi()\r\n        api.albumDetailInfo(args, (r) => {\r\n            let playListResult = JSON.parse(r.response)\r\n            console.log('加载歌单完成', playListResult)\r\n            if (playListResult.code === 200) {\r\n                dispatch(loadItemDetailSuccess(playListResult))\r\n            } else {\r\n                dispatch(playListLoadFailure())\r\n            }\r\n        })\r\n    }\r\n}","export const PLAYLIST_TAG_CHANGE = \"PAGE/PLAYLIST_TAG_CHANGE\"\r\n\r\nexport const LOAD_ITEM_DETAIL_STARTED = \"PAGE/LOAD_ITEM_DETAIL_STARTED\"\r\n\r\nexport const LOAD_ITEM_DETAIL_SUCCESS = \"PAGE/LOAD_ITEM_DETAIL_SUCCESS\"\r\n\r\nexport const DELETE_ITEM_DETAIL = 'PAGE/DELETE_ITEM_DETAIL'\r\n\r\nexport const PLAYLIST_LOAD_STARTED = 'PAGE/PLAYLIST_LOAD_STARTED'\r\n\r\nexport const PLAYLIST_LOAD_SUCCESS = 'PAGE/LIST_LOAD_SUCCESS'\r\n\r\nexport const PLAYLIST_LOAD_FAILURE = 'PAGE/PLAYLIST_LOAD_FAILURE'","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {fetchAlbumDetailInfo} from '../actions'\r\n\r\nclass PlayListItem extends Component {\r\n\r\n    parseImgUrl(url) {\r\n        let list = url.split('?')\r\n        let urlChanged = `${list[0]}?param=400y400`\r\n        return urlChanged\r\n    }\r\n\r\n    render() {\r\n        let {id, name, coverImgUrl} = {...this.props.itemInfo}\r\n        let coverThumbImgUrl = this.parseImgUrl(coverImgUrl)\r\n        return (\r\n            <div className=\"album-container\">\r\n                <div className=\"album-img\" data-id={id} onClick={this.props.fetchAlbumDetailInfo.bind(this, id)}>\r\n                    <img src={coverThumbImgUrl} alt=\"歌单封面\"/>\r\n                </div>\r\n                <div className=\"album-info\" title={name}>\r\n                    <span>{name}</span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchAlbumDetailInfo: (AlbumId) => {\r\n            dispatch(fetchAlbumDetailInfo(AlbumId))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(PlayListItem)","export const timeFormat = function(seconds) {\r\n    if (!seconds) {\r\n        return '00:00'\r\n    }\r\n    let m = String(Math.floor(seconds / 60))\r\n    let s = String(Math.floor(seconds % 60))\r\n    if (s.length === 1) {\r\n        s = \"0\" + s\r\n    }\r\n    if (m.length === 1) {\r\n        m = \"0\" + m\r\n    }\r\n    return `${m}:${s}`\r\n}\r\n\r\nexport const loadSongListInLocalStorage = () => {\r\n    let songList = JSON.parse(localStorage.getItem('songList'))\r\n    if (songList === null) {\r\n        songList = []\r\n    }\r\n    return songList\r\n}\r\n\r\nexport const saveSongToLocalStorage = (songInfo) => {\r\n    let songList = JSON.parse(localStorage.getItem('songList'))\r\n    if (songList === null) {\r\n        songList = []\r\n    }\r\n    songList.push(songInfo)\r\n    localStorage.setItem('songList', JSON.stringify(songList))\r\n}\r\n\r\nexport const deleteSongInLocalStorage = (songIndex) => {\r\n    let songList = JSON.parse(localStorage.getItem('songList'))\r\n    songList.splice(songIndex, 1)\r\n    localStorage.setItem('songList', JSON.stringify(songList))\r\n}\r\n\r\nexport const getCurrentSongInfo = (theState) => {\r\n    let songList = theState.songList\r\n    let currentSongIndex = theState.currentSongExtraInfo.currentSongIndex\r\n    let currentSongInfo = {}\r\n    if (currentSongIndex === -1) {\r\n        currentSongInfo = theState.initSongInfo\r\n    } else {\r\n        currentSongInfo = songList[currentSongIndex]\r\n    }\r\n    return currentSongInfo\r\n}\r\n\r\nexport const parseLyric = (lyricsArray) => {\r\n    let result = []\r\n    for (let i = 0; i < lyricsArray.length; i++) {\r\n        let oneLyricString = lyricsArray[i]\r\n        let oneLyric = ''\r\n        let time = -1\r\n        for (let j = 0; j < oneLyricString.length; j++) {\r\n            let e = oneLyricString[j]\r\n            if (e === ']') {\r\n                oneLyric = oneLyricString.slice(j + 1)\r\n                let timeList = oneLyricString.slice(1, j).split(':')\r\n                time = Number(timeList[0]) * 60 + Number(timeList[1])\r\n                break\r\n            }\r\n        }\r\n        if (!isNaN(time)) {\r\n            if (oneLyric === '') {\r\n                oneLyric = '...'\r\n            }\r\n            let lyricItem = [\r\n                time,\r\n                oneLyric,\r\n            ]\r\n            result.push((lyricItem))\r\n        }\r\n    }\r\n    return result\r\n}\r\n\r\nexport const argsFromQuery = (query) => {\r\n    if (query[0] === '?') {\r\n        query = query.slice(1)\r\n    }\r\n    let o = {}\r\n    if (query.length === 0) {\r\n        return o\r\n    }\r\n    query.split('&').forEach(e => {\r\n        let [k, v] = e.split('=')\r\n        o[k] = v\r\n    })\r\n    return o\r\n}","import React, { Component } from 'react'\r\nimport * as Status from \"../status\"\r\nimport {connect} from 'react-redux'\r\nimport {fetchHotPlayList, playListTagChange} from \"../actions\"\r\nimport {withRouter} from 'react-router-dom'\r\nimport PlayListItem from './PlayListItem'\r\nimport {argsFromQuery} from '../../../utils'\r\n\r\nclass PlayList extends Component {\r\n\r\n    componentDidMount() {\r\n        if (this.props.status !== 'success') {\r\n            let params = argsFromQuery(this.props.location.search)\r\n            let activeTag = params.cat\r\n            this.props.fetchHotPlayList(activeTag, 1)\r\n            this.props.playListTagChange(decodeURI(activeTag))\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.location !== prevProps.location) {\r\n            let params = argsFromQuery(this.props.location.search)\r\n            let activeTag = params.cat\r\n            this.props.fetchHotPlayList(activeTag, 1)\r\n        }\r\n    }\r\n\r\n    showHotPlayList() {\r\n        switch (this.props.status) {\r\n            case Status.LOADING: {\r\n                return (\r\n                    <div className=\"loading-container\">\r\n                        <svg className=\"load\" viewBox=\"25 25 50 50\">\r\n                            <circle className=\"loading\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\"/>\r\n                        </svg>\r\n                    </div>\r\n                )\r\n            }\r\n            case Status.SUCCESS: {\r\n                let playListResult = this.props.playListResult.data\r\n                return (\r\n                    <div className=\"playlist-result\">\r\n                        {playListResult.map((value, index) => {\r\n                            return <PlayListItem key={index} itemInfo={value} />\r\n                        })}\r\n                    </div>\r\n                )\r\n            }\r\n            case Status.FAILURE: {\r\n                return (\r\n                    <div className=\"failed-container\">热门歌单加载失败</div>\r\n                )\r\n            }\r\n            default: {\r\n                return (\r\n                    <div>PlayList</div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.showHotPlayList()\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateTopProps = (state) => {\r\n    let theState = state.PlayListReducer\r\n    return {\r\n        status: theState.playListStatus,\r\n        playListResult: theState.playListResult,\r\n        activeTag: theState.activeTag,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchHotPlayList: (category, page) => {\r\n            dispatch(fetchHotPlayList(category, page))\r\n        },\r\n        playListTagChange: (tagName) => {\r\n            dispatch(playListTagChange(tagName))\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateTopProps, mapDispatchToProps)(withRouter(PlayList))","export const INIT = ''\r\nexport const LOADING = 'loading'\r\nexport const SUCCESS = 'success'\r\nexport const FAILURE = 'failure'","import React, { Component } from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nimport {connect} from 'react-redux'\r\nimport {playListTagChange} from \"../actions\"\r\n\r\nclass TagItem extends Component {\r\n\r\n    tagChange(value) {\r\n        this.props.playListTagChange(value)\r\n        this.props.toggleShow()\r\n    }\r\n\r\n    getClassName(value) {\r\n        return this.props.activeTag === value ? \"playlist-tag active-tag\" : \"playlist-tag\"\r\n    }\r\n\r\n    getTagTable(i) {\r\n        let rowData = this.props.theTagTabs.slice(i, i + 6)\r\n        return (\r\n            <tbody key={i}>\r\n                <tr>\r\n                    {rowData.map((value, index) => {\r\n                        return (\r\n                            <td key={index} className={this.getClassName(value)}>\r\n                                <Link  to={`/playlist?cat=${value}`} onClick={this.tagChange.bind(this, value)}>{value}</Link>\r\n                            </td>\r\n                        )\r\n                    })}\r\n                </tr>\r\n            </tbody>\r\n         )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"playlist-tag-tabs\">\r\n                {this.props.theTagTabs.map((value, index) => {\r\n                    return (\r\n                            <Link key={index} className={this.getClassName(value)} to={`/playlist?cat=${value}`} onClick={this.tagChange.bind(this, value)}>{value}</Link>\r\n                    )\r\n                })}\r\n                {/*{this.props.theTagTabs.map((value, index) => {*/}\r\n                    {/*if (index % 6 === 0) {*/}\r\n                        {/*return this.getTagTable(index)*/}\r\n                    {/*} else {*/}\r\n                        {/*return false*/}\r\n                    {/*}*/}\r\n                {/*})}*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateTopProps = (state) => {\r\n    let theState = state.PlayListReducer\r\n    return {\r\n        activeTag: theState.activeTag\r\n    }\r\n}\r\n\r\nconst mapDispatchTopProps = (dispatch) => {\r\n    return {\r\n        playListTagChange: (tagName) => {\r\n            dispatch(playListTagChange(tagName))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateTopProps, mapDispatchTopProps)(TagItem)","import React, { Component } from 'react'\r\nimport {playListTagChange} from '../actions'\r\nimport {connect} from 'react-redux'\r\nimport {Link} from \"react-router-dom\"\r\nimport TagItem from './TagItem'\r\n\r\nclass TagSelector extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.mainTags = ['语种', '风格', '场景', '情感', '主题']\r\n        this.styleTags = ['流行', '摇滚', '民谣', '电子', '舞曲', '说唱', '轻音乐', '爵士', '乡村', 'R&B/Soul', '古典', '民族', '英伦', '金属', '朋克', '蓝调', '雷鬼', '拉丁', '古风', 'Bossa Nova']\r\n        this.languageTags = ['华语', '欧美', '日语', '韩语', '粤语', '小语种']\r\n        this.senceTags = ['清晨', '夜晚', '学习', '工作', '午休', '下午茶', '地铁', '驾车', '运动', '旅行', '散步', '酒吧']\r\n        this.emotionTags = ['怀旧', '清新', '浪漫', '性感', '伤感', '治愈', '放松', '孤独', '感动', '兴奋', '快乐', '安静', '思念']\r\n        this.themeTags = ['影视原声', 'ACG', '儿童', '校园', '游戏', '70后', '80后', '90后', '网络歌曲', 'KTV', '经典', '翻唱', '吉他', '钢琴', '器乐', '榜单', '00后']\r\n        this.mapTagToMain = {\r\n            '语种': this.languageTags,\r\n            '风格': this.styleTags,\r\n            '场景': this.senceTags,\r\n            '情感': this.emotionTags,\r\n            '主题': this.themeTags\r\n        }\r\n        this.state = {\r\n            show: false\r\n        }\r\n\r\n        this.toggleShow = this.toggleShow.bind(this)\r\n        this.hide = this.hide.bind(this)\r\n        this.clickOnBlankArea = this.clickOnBlankArea.bind(this)\r\n        document.onclick=this.hide\r\n    }\r\n\r\n    tagChange(value) {\r\n        this.props.playListTagChange(value)\r\n        this.toggleShow()\r\n    }\r\n\r\n    clickOnBlankArea(e) {\r\n        e.nativeEvent.stopImmediatePropagation()\r\n    }\r\n\r\n    toggleShow(e) {\r\n        this.setState({\r\n            show: !this.state.show\r\n        })\r\n        if (e !== undefined) {\r\n            e.nativeEvent.stopImmediatePropagation()\r\n        }\r\n    }\r\n\r\n    hide() {\r\n        this.setState({\r\n            show: false\r\n        })\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.setState = () => {\r\n            return 0\r\n        }\r\n    //  防止组件卸载的时候调用 setState 导致 react 报错\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"playlist-tags\">\r\n                <span className=\"active-tag-name\" >{this.props.activeTag}</span>\r\n                <span className=\"select-tag-button\" onClick={this.toggleShow}>\r\n                    {this.state.show ? '收起 ' : '展开 '}\r\n                    <svg className={this.state.show ? \"select-icon rotated\" : \"select-icon\"} viewBox=\"0 0 1024 1024\">\r\n                        <path d=\"M127.5 330.9l0.7-0.7c12.3-12.3 32.4-12.3 44.7 0l339.9 339.9L853 330c12.5-12.5 32.9-12.5 45.4 0s12.5 32.9 0 45.4L536 737.8s-0.1 0.1-0.1 0.2l-0.7 0.7c-12.3 12.3-32.4 12.3-44.7 0l-363-363c-12.3-12.4-12.3-32.5 0-44.8z\">\r\n                        </path>\r\n                    </svg>\r\n                </span>\r\n                <div className={this.state.show ? \"playlist-tags-container\" : \"playlist-tags-container hidden\"} onClick={this.clickOnBlankArea}>\r\n                    <Link className={this.props.activeTag === '全部' ? \"playlist-main-tag active-tag\" : \"playlist-main-tag\"} to={{pathname: 'playlist', search: '?cat=全部'}} onClick={this.tagChange.bind(this, '全部')}>全部</Link>\r\n                    {this.mainTags.map((value, index) => {\r\n                        let theTagTabs = this.mapTagToMain[value]\r\n                        return(\r\n                            <div key={index} className=\"playlist-tag-container\">\r\n                                <div className=\"playlist-tag-class\">{value}</div>\r\n                                <TagItem theTagTabs={theTagTabs} toggleShow={this.toggleShow}/>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateTopProps = (state) => {\r\n    let theState = state.PlayListReducer\r\n    return {\r\n        activeTag: theState.activeTag\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        playListTagChange: (tagName) => {\r\n            dispatch(playListTagChange(tagName))\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateTopProps, mapDispatchToProps)(TagSelector)","import React, { Component } from 'react'\nimport PlayList from './PlayList'\nimport TagSelector from \"./TagSelector\"\nimport './playListPage.css'\n\nclass PlayListPage extends Component {\n\n    render() {\n        return (\n            <div className=\"playlist-content\">\n                <TagSelector />\n                <PlayList />\n            </div>\n        )\n    }\n}\n\nexport default PlayListPage\n","import * as search from './actionTypes.js'\r\nimport {MusicApi} from '../../api/api.js'\r\n\r\n// 搜索框输入改变\r\nexport const inputChange = (input) => ({\r\n    type: search.INPUT_CHANGE,\r\n    input,\r\n})\r\n\r\n// 开始搜索\r\nexport const searchStarted = (data) => ({\r\n    type: search.SEARCH_STARTED,\r\n    data,\r\n})\r\n\r\n// 搜索成功\r\nexport const searchSuccess = (result, searchContent) => ({\r\n    type: search.SEARCH_SUCCESS,\r\n    result,\r\n    searchContent,\r\n})\r\n\r\n// 搜索失败\r\nexport const searchFailure = (error) => ({\r\n    type: search.SEARCH_FAILURE,\r\n    error,\r\n})\r\n\r\n// 拿到搜索数据\r\nexport const fetchSearchResult = (input, page=1, company='netease') => {\r\n    let limit = 20\r\n    let offset = (Number(page)- 1) * limit\r\n    return (dispatch) => {\r\n        let queryObj = {\r\n            input,\r\n            limit,\r\n            offset,\r\n            company,\r\n        }\r\n        dispatch(searchStarted(input))\r\n        let api = new MusicApi()\r\n        api.searchResult(queryObj, (r) => {\r\n            let searchResult = JSON.parse(r.response)\r\n            console.log('搜索完成', searchResult)\r\n            if (searchResult.code === 200) {\r\n                dispatch(searchSuccess(searchResult, queryObj.input))\r\n            } else {\r\n                dispatch(searchFailure(searchResult))\r\n            }\r\n        })\r\n    }\r\n}","export const INPUT_CHANGE = 'NAV/INPUT_CHANGE'\r\n\r\nexport const SEARCH_STARTED = 'NAV/SEARCH_STARTED'\r\n\r\nexport const SEARCH_SUCCESS = 'NAV/SEARCH_SUCCESS'\r\n\r\nexport const SEARCH_FAILURE = 'NAV/SEARCH_FAILURE'","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport  {inputChange, fetchSearchResult} from '../actions'\r\nimport {withRouter} from \"react-router-dom\"\r\n\r\nclass SearchBar extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.onSearch = this.onSearch.bind(this)\r\n        this.onChange = this.onChange.bind(this)\r\n        this.onKeyPress = this.onKeyPress.bind(this)\r\n    }\r\n\r\n    argsFromQuery(query) {\r\n        let o = {}\r\n        if (query.length === 0) {\r\n            return o\r\n        }\r\n        query.split('&').forEach(e => {\r\n            let [k, v] = e.split('=')\r\n            o[k] = v\r\n        })\r\n        return o\r\n    }\r\n\r\n    parseUrlGetSearchContent(location) {\r\n        if (location.pathname === \"/search\") {\r\n            let searchQuery = location.search.slice(1)\r\n            let searchContent = this.argsFromQuery(searchQuery)\r\n            let value = decodeURI(searchContent['s'])\r\n            if (value !== undefined) {\r\n                return value\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        let location = this.props.location\r\n        this.value = this.parseUrlGetSearchContent(location)\r\n        if (this.value === 'undefined') {\r\n            this.value = ''\r\n        }\r\n    }\r\n\r\n    componentWillUpdate(nextProps, nextState, nextContext) {\r\n        if (nextProps.location.search !== this.props.location.search) {\r\n            let location = nextProps.location\r\n            this.value = this.parseUrlGetSearchContent(location)\r\n        }\r\n        console.log('组件更新了')\r\n    }\r\n\r\n    onChange(event) {\r\n        this.value = event.target.value\r\n        this.props.inputChange(this.value)\r\n    }\r\n\r\n    onSearch() {\r\n        let hasInputted = this.props.searchInput === undefined || this.props.searchInput === ''\r\n        if (hasInputted) {\r\n            return 0\r\n        }\r\n        let isEqualToOldSearchContent = this.props.searchContent !== this.props.searchInput\r\n        let isAtSearchPage = window.location.pathname !== '/search'\r\n        if (isEqualToOldSearchContent || isAtSearchPage) {\r\n            let urlObj = this.getSearchUrl()\r\n            this.props.history.push(urlObj)\r\n            // this.props.searchAction(this.props.searchInput)\r\n        }\r\n    }\r\n\r\n    getSearchUrl() {\r\n        console.log('this.props.searchInput', this.props.searchInput)\r\n        let name = this.props.searchInput.trim()\r\n        if (name === undefined) {\r\n            name = ''\r\n        }\r\n        let page = 1\r\n        let o = {\r\n            pathname: '/search',\r\n            search: `?s=${name}&page=${page}`,\r\n        }\r\n        return o\r\n    }\r\n\r\n    onKeyPress(event) {\r\n        if (event.key === 'Enter') {\r\n            this.onSearch()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className={(this.props.searchResult === undefined) ? \"search-bar-container before-searched\" : \"search-bar-container\"}>\r\n                <input type=\"text\" className=\"search-bar-input\" placeholder=\"搜索音乐、MV、歌单、用户\" onChange={this.onChange} onKeyDown={this.onKeyPress} value={this.value || ''}/>\r\n                <button className=\"search-bar-button\" onClick={this.onSearch}>搜索</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateTopProps = (state) => {\r\n    let theState = state.SearchBarReducer\r\n    return {\r\n        searchInput: theState.searchInput,\r\n        searchContent: theState.searchContent,\r\n        searchResult: theState.searchResult,\r\n        status: theState.status,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        searchAction: (input, page) => {\r\n            dispatch(fetchSearchResult(input, page))\r\n        },\r\n        inputChange:  (input) => {\r\n            dispatch(inputChange(input))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateTopProps, mapDispatchToProps)(withRouter(SearchBar))","import * as audioController from './actionTypes'\r\nimport {MusicApi} from '../../api/api.js'\r\nimport {parseLyric} from '../../utils'\r\n\r\nexport const changeAudioStatus = (status) => {\r\n    return {\r\n        type: audioController.CHANGE_AUDIO_STATUS,\r\n        status\r\n    }\r\n}\r\n\r\nexport const changePlayMode = (modeType) => {\r\n    return {\r\n        type: audioController.CHANGE_PLAY_MODE,\r\n        modeType,\r\n    }\r\n}\r\n\r\nexport const saveCurrentLyricIndex = (currentLyricIndex) => {\r\n    return {\r\n        type: audioController.GET_CURRENT_TIME,\r\n        currentLyricIndex,\r\n    }\r\n}\r\n\r\nexport const appendTheSong = (songInfo) => {\r\n    return {\r\n        type: audioController.APPEND_THE_SONG,\r\n        songInfo,\r\n    }\r\n}\r\n\r\nexport const deleteTheSong = (songIndex) => {\r\n    return {\r\n        type: audioController.DELETE_THE_SONG,\r\n        songIndex,\r\n    }\r\n}\r\n\r\nexport const playTheSongInPage = (songInfo) => {\r\n    return {\r\n        type: audioController.PLAY_THE_SONG_IN_PAGE,\r\n        songInfo,\r\n    }\r\n}\r\n\r\nexport const playTheSongInList = (songIndex) => {\r\n    return {\r\n        type: audioController.PLAY_THE_SONG_IN_LIST,\r\n        songIndex,\r\n    }\r\n}\r\n\r\nexport const playNextSong = (modeType, loopStep=1) => {\r\n    return {\r\n        type: audioController.PLAY_NEXT_SONG,\r\n        modeType,\r\n        loopStep,\r\n    }\r\n}\r\n\r\nexport const getLyric = (lyric) => {\r\n    return {\r\n        type: audioController.GET_LYRIC,\r\n        lyric,\r\n    }\r\n}\r\n\r\nexport const getLyricFromNet = (lrcUrl) => {\r\n    return (dispatch) => {\r\n        let api = new MusicApi()\r\n        api.getLyric(lrcUrl, (r) => {\r\n            let l = r.response\r\n            let lyricList = l.split('\\n').slice(0, -1)\r\n            if (lyricList.length === 0) {\r\n                lyricList = [l]\r\n            }\r\n            let result = parseLyric(lyricList)\r\n            dispatch(getLyric(result))\r\n        })\r\n    }\r\n}","export const CHANGE_AUDIO_STATUS = 'BAR/CHANGE_AUDIO_STATUS'\r\n\r\nexport const APPEND_THE_SONG = 'PAGE/APPEND_THE_SONG'\r\n\r\nexport const DELETE_THE_SONG = 'AUDIO/DELETE_THE_SONG'\r\n\r\nexport const PLAY_THE_SONG_IN_PAGE = 'PAGE/PLAY_THE_SONG'\r\n\r\nexport const PLAY_THE_SONG_IN_LIST = 'LIST/PLAY_THE_SONG'\r\n\r\nexport const PLAY_NEXT_SONG = 'AUDIO/PLAY_NEXT_SONG'\r\n\r\nexport const GET_LYRIC = 'AUDIO/GET_LYRIC'\r\n\r\nexport const GET_CURRENT_TIME = 'AUDIO/GET_CURRENT_TIME'\r\n\r\nexport const CHANGE_PLAY_MODE = 'AUDIO/CHANGE_PLAY_MODE'","import React, {Component} from 'react'\r\nimport {getCurrentSongInfo, timeFormat} from '../../../utils'\r\nimport {connect} from 'react-redux'\r\nimport {actions} from '../../audioController/'\r\n\r\nconst appendTheSong = actions.appendTheSong\r\nconst playTheSongInPage = actions.playTheSongInPage\r\n\r\nclass SearchItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.handlePlay = this.handlePlay.bind(this)\r\n        this.handleAppend = this.handleAppend.bind(this)\r\n        this.handlePause = this.handlePause.bind(this)\r\n    }\r\n\r\n    handlePlay() {\r\n        if (this.props.currentSongId !== this.props.result.id) {\r\n            this.props.playTheSongInPage(this.props.result)\r\n            console.log('this.props.songInfo，第一次放', this.props.result)\r\n        } else {\r\n            let audio = document.querySelector('audio')\r\n            audio.play()\r\n        }\r\n    }\r\n\r\n    handlePause() {\r\n        let audio = document.querySelector('audio')\r\n        audio.pause()\r\n    }\r\n\r\n    getPlayOrPauseButtonSvg() {\r\n        let id = this.props.result.id\r\n        let isTheSongPlaying = (this.props.AudioStatus === 'play') && (this.props.currentSongId === id)\r\n        if (isTheSongPlaying) {\r\n            return (\r\n                <svg className=\"svg-list-icon\" viewBox=\"0 0 1024 1024\">\r\n                    <path d=\"M910.8 303.6c-5.4-10.5-16.3-17.8-28.9-17.8-17.8 0-32.2 14.4-32.2 32.1 0 6 1.7 11.7 4.6 16.5l-0.1 0.1c26.9 52.4 42.1 111.8 42.1 174.7 0 211.6-171.6 383.2-383.2 383.2S129.8 720.8 129.8 509.2 301.4 126.1 513 126.1c62.5 0 121.5 15 173.6 41.5l0.2-0.4c4.6 2.6 10 4.1 15.7 4.1 17.8 0 32.2-14.4 32.2-32.1 0-13.1-7.9-24.4-19.3-29.4C654.6 78.9 585.9 61.5 513 61.5 265.7 61.5 65.3 262 65.3 509.2S265.7 956.9 513 956.9s447.7-200.4 447.7-447.7c0-74.1-18-144-49.9-205.6z\">\r\n                    </path>\r\n                    <path d=\"M385.4 352.2V672c0 17.5 14.3 31.9 31.9 31.9 17.6 0 32-14.4 31.9-31.9V352.2c0-17.5-14.3-31.9-31.9-31.9-17.5 0-31.9 14.3-31.9 31.9zM578.9 352.2V672c0 17.5 14.3 31.9 31.9 31.9 17.5 0 31.9-14.4 31.9-31.9V352.2c0-17.5-14.3-31.9-31.9-31.9-17.5 0-31.9 14.3-31.9 31.9z\">\r\n                    </path>\r\n                    <path d=\"M772.7 217.7a32.2 32.1 0 1 0 64.4 0 32.2 32.1 0 1 0-64.4 0Z\">\r\n                    </path>\r\n                </svg>\r\n            )\r\n        } else {\r\n            return (\r\n                <svg className=\"svg-list-icon\" viewBox=\"0 0 1024 1024\">\r\n                    <path d=\"M772.7 217.7a32.2 32.1 0 1 0 64.4 0 32.2 32.1 0 1 0-64.4 0Z\">\r\n                    </path>\r\n                    <path d=\"M415.8 679.9c5.9 0 11.5-1.6 16.2-4.5l231.1-134.6c10.9-5.2 18.5-16.3 18.5-29.2 0-11.9-6.4-22.3-16-27.8L439.7 352.2c-5.8-6.7-14.4-10.9-23.9-10.9-17.6 0-31.8 14.4-31.8 32.1 0 0.6 0 1.2 0.1 1.8l-0.4 0.2 0.5 269c-0.1 1.1-0.2 2.2-0.2 3.4 0 17.7 14.3 32.1 31.8 32.1z\">\r\n                    </path>\r\n                    <path d=\"M909.8 306.6c-5.4-10.5-16.3-17.8-28.9-17.8-17.8 0-32.2 14.4-32.2 32.1 0 6 1.7 11.7 4.6 16.5l-0.1 0.1c26.9 52.4 42.1 111.8 42.1 174.7 0 211.6-171.6 383.2-383.2 383.2S128.8 723.8 128.8 512.2 300.4 129.1 512 129.1c62.5 0 121.5 15 173.6 41.5l0.2-0.4c4.6 2.6 10 4.1 15.7 4.1 17.8 0 32.2-14.4 32.2-32.1 0-13.1-7.9-24.4-19.3-29.4C653.6 81.9 584.9 64.5 512 64.5 264.7 64.5 64.3 265 64.3 512.2S264.7 959.9 512 959.9s447.7-200.4 447.7-447.7c0-74.1-18-144-49.9-205.6z\">\r\n                    </path>\r\n                </svg>\r\n            )\r\n        }\r\n    }\r\n\r\n    handleAppend() {\r\n        this.props.appendTheSong(this.props.result)\r\n    }\r\n\r\n    render() {\r\n        let result = this.props.result\r\n        let id = this.props.result.id\r\n        let isTheSongPlaying = (this.props.AudioStatus === 'play') && (this.props.currentSongId === id)\r\n        let isOdd = (this.props.index + 1) % 2 !== 0\r\n        return(\r\n            <div className={isOdd ? \"search-item-container odd\" : \"search-item-container\"}>\r\n                <span className=\"search-item-number\">{`${this.props.index + 1}.`}</span>\r\n                <div className=\"search-item-name\">\r\n                    <span className=\"song-name\" title={result.name}>{result.name}</span>\r\n                    <span className=\"search-item-play\" onClick={isTheSongPlaying ? this.handlePause : this.handlePlay}>\r\n                        {this.getPlayOrPauseButtonSvg()}\r\n                    </span>\r\n                    <span className=\"search-item-append\" onClick={this.handleAppend}>\r\n                        <svg className=\"svg-list-icon\" viewBox=\"0 0 1024 1024\">\r\n                        <path d=\"M197.3 197.3c-173.8 173.8-173.8 455.5 0 629.3s455.5 173.8 629.3 0 173.8-455.5 0-629.3-455.5-173.7-629.3 0zM907 512c0 51.3-9.7 101.3-28.9 148.7-19.9 49-49.1 92.9-86.8 130.6s-81.7 66.9-130.6 86.8C613.3 897.3 563.3 907 512 907c-51.3 0-101.3-9.7-148.7-28.9-49-19.9-92.9-49.1-130.6-86.8s-66.9-81.7-86.8-130.6C126.7 613.3 117 563.3 117 512c0-51.3 9.7-101.3 28.9-148.7 19.9-49 49.1-92.9 86.8-130.6s81.7-66.9 130.6-86.8C410.7 126.7 460.7 117 512 117c51.3 0 101.3 9.7 148.7 28.9 49 19.9 92.9 49.1 130.6 86.8s66.9 81.7 86.8 130.6C897.3 410.7 907 460.7 907 512zM537 262v225h225v50H537v225h-50V537H262v-50h225V262h50z\">\r\n                        </path>\r\n                        </svg>\r\n                    </span>\r\n                </div>\r\n                <div className=\"search-item-singer name\">\r\n                    <span title={result.singer}>{result.singer}</span>\r\n                </div>\r\n                <div className=\"search-item-time\">\r\n                    {timeFormat(result.time)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    let theState = state.AudioReducer\r\n    let currentSongInfo = getCurrentSongInfo(theState)\r\n    let currentSongId = currentSongInfo.id\r\n    return {\r\n        AudioStatus: theState.AudioStatus,\r\n        currentSongId: currentSongId,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        appendTheSong: (songInfo) => {\r\n            dispatch(appendTheSong(songInfo))\r\n        },\r\n        playTheSongInPage: (songInfo) => {\r\n            dispatch(playTheSongInPage(songInfo))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchItem)","import React, {Component} from 'react'\r\nimport SearchItem from './SearchItem'\r\nimport {connect} from 'react-redux'\r\n\r\nclass SearchList extends Component {\r\n\r\n    render() {\r\n        let searchData = this.props.searchResult.data\r\n        return(\r\n            <div className=\"search-list-container\">\r\n                <span className=\"search-head-number\">\r\n                </span>\r\n                <div className=\"search-head-container\">\r\n                    <div className=\"search-head-name name\">\r\n                        <span title=\"歌名\">歌曲</span>\r\n                    </div>\r\n                    <div className=\"search-head-singer name\">\r\n                        <span title=\"歌手\">歌手</span>\r\n                    </div>\r\n                    <div className=\"search-head-time\">\r\n                        时长\r\n                    </div>\r\n                </div>\r\n                <div className=\"search-list\">\r\n                {searchData.map((value, index) => (\r\n                    <SearchItem key={index} index={index} result={value}/>\r\n                ))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateTopProps = (state) => {\r\n    let theState = state.SearchBarReducer\r\n    return {\r\n        searchResult: theState.searchResult\r\n    }\r\n}\r\n\r\nexport default connect(mapStateTopProps, null)(SearchList)","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as Status from '../status'\r\nimport {fetchSearchResult, inputChange} from '../actions'\r\nimport SearchBar from './SearchBar'\r\nimport SearchList from './SearchList'\r\nimport {argsFromQuery} from '../../../utils'\r\nimport './SearchPage.css'\r\n\r\nclass SearchPage extends Component {\r\n\r\n    componentDidMount() {\r\n        let s = argsFromQuery(this.props.location.search).s\r\n        if (s !== undefined && s !== this.props.searchContent) {\r\n            this.props.searchAction(s)\r\n            this.props.inputChange(s)\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.location.search !== this.props.location.search) {\r\n            let s = argsFromQuery(this.props.location.search).s\r\n            this.props.searchAction(s)\r\n        }\r\n    }\r\n\r\n    showSearchResult() {\r\n        switch (this.props.status) {\r\n            case Status.LOADING: {\r\n                return (\r\n                    <div className=\"loading-container\">\r\n                        <svg className=\"load\" viewBox=\"25 25 50 50\">\r\n                            <circle className=\"loading\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\"/>\r\n                        </svg>\r\n                    </div>\r\n                )\r\n            }\r\n            case Status.SUCCESS: {\r\n                return (\r\n                        <SearchList />\r\n                )\r\n            }\r\n            case Status.FAILURE: {\r\n                return (\r\n                    <div className=\"failed-container\">歌曲搜索失败</div>\r\n                )\r\n            }\r\n            default: {\r\n                return (\r\n                    <div></div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"search-page-content\">\r\n                <SearchBar />\r\n                {this.showSearchResult()}\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateTopProps = (state) => {\r\n    let theState = state.SearchBarReducer\r\n    return {\r\n        status: theState.status,\r\n        searchResult: theState.searchResult,\r\n        searchContent: theState.searchContent,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        searchAction: (input, page) => {\r\n            dispatch(fetchSearchResult(input, page))\r\n        },\r\n        inputChange: (input) => {\r\n            dispatch(inputChange(input))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateTopProps, mapDispatchToProps)(SearchPage)","export const LOADING = 'loading'\r\nexport const SUCCESS = 'success'\r\nexport const FAILURE = 'failure'","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {SearchItem} from \"../../searchPage/\"\r\nimport {deleteItemDetail} from '../actions'\r\nimport * as Status from \"../status\"\r\n\r\nclass ModalPortal extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.deleteDetailInfo = this.deleteDetailInfo.bind(this)\r\n        this.descriptionToggle = this.descriptionToggle.bind(this)\r\n        this.state = {\r\n            isAllDescriptionShowed: false,\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        let body = document.querySelector(\"body\")\r\n        // let musicPlayer = document.querySelector('.music-controller')\r\n        if (this.props.albumStatus !== Status.INIT) {\r\n            body.classList.add('ban-scroll')\r\n            // musicPlayer.classList.add('ban-scrollbar')\r\n        } else {\r\n            body.classList.remove('ban-scroll')\r\n            // musicPlayer.classList.remove('ban-scrollbar')\r\n        }\r\n    }\r\n\r\n    descriptionToggle() {\r\n        this.setState({\r\n            isAllDescriptionShowed: !this.state.isAllDescriptionShowed,\r\n        })\r\n    }\r\n\r\n    deleteDetailInfo() {\r\n        this.props.deleteItemDetail()\r\n        this.setState({\r\n            isAllDescriptionShowed: false,\r\n        })\r\n    }\r\n\r\n    dataCleaning(fetchedData) {\r\n        let singerList = fetchedData.artists.map(artist => artist.name)\r\n        let singer = singerList.join('/')\r\n        let cleanedData = {\r\n            id: fetchedData.id,\r\n            name: fetchedData.name,\r\n            singer,\r\n            time: fetchedData.duration / 1000,\r\n            pic: fetchedData.album.blurPicUrl,\r\n            lrc: `https://v1.itooi.cn/netease/lrc?id=${fetchedData.id}`,\r\n            url: `https://v1.itooi.cn/netease/url?id=${fetchedData.id}`,\r\n        }\r\n        return cleanedData\r\n    }\r\n\r\n    showAlbumList() {\r\n        switch (this.props.albumStatus) {\r\n            case Status.INIT: {\r\n                return null\r\n            }\r\n            case Status.LOADING: {\r\n                return (\r\n                    <div className=\"pop-up\">\r\n                        <div className=\"pop-window\">\r\n                            <span className=\"modal-portal-toggle\" onClick={this.deleteDetailInfo}>×</span>\r\n                            <div className=\"loading-container\">\r\n                                <svg className=\"load\" viewBox=\"25 25 50 50\">\r\n                                    <circle className=\"loading\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\"/>\r\n                                </svg>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            case Status.SUCCESS: {\r\n                let data = this.props.albumDetailInfo.data\r\n                console.log('data', data)\r\n                return (\r\n                    <div className=\"pop-up\">\r\n                        <div className=\"pop-window\">\r\n                            <span className=\"modal-portal-toggle\" onClick={this.deleteDetailInfo}>×</span>\r\n                            <div className=\"album-list-container\">\r\n                                <div className={this.state.isAllDescriptionShowed ? \"album-list-info all-description-showed\" : \"album-list-info\"}>\r\n                                    <img className=\"album-list-bg\" src={data.coverImgUrl} alt=\"专辑图片\"/>\r\n                                    <span className=\"album-list-pic\">\r\n                                        <img src={data.coverImgUrl} alt=\"专辑图片\"/>\r\n                                    </span>\r\n                                    <div className=\"album-list-name\" title={data.name}>\r\n                                            {`歌单：${data.name}`}\r\n                                    </div>\r\n                                    <p className={this.state.isAllDescriptionShowed ? \"album-list-description all-description-showed\" : \"album-list-description\"}>\r\n                                        <span>介绍：</span><br/>\r\n                                        {`${data.description}`}\r\n                                    </p>\r\n                                    {/*<p className={this.state.isAllDescriptionShowed ? \"after-description hidden\" : \"after-description\"}>*/}\r\n                                        {/*...*/}\r\n                                    {/*</p>*/}\r\n                                    <span className=\"description-toggle\" onClick={this.descriptionToggle}>{this.state.isAllDescriptionShowed ? '收起' : '展开'}</span>\r\n                                </div>\r\n                                <div className=\"album-list-count\">\r\n                                    {`歌曲列表 (${data.trackCount}首歌)`}\r\n                                </div>\r\n                                <div className=\"album-list-items\">\r\n                                    {data.tracks.map((value, index) => {\r\n                                        return <SearchItem key={index} index={index} result={this.dataCleaning(value)}/>\r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            default: {\r\n                return null\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"pop-up-container\">\r\n                {this.showAlbumList()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    let theState = state.PlayListReducer\r\n    return {\r\n        albumDetailInfo: theState.albumDetailInfo,\r\n        albumStatus: theState.albumStatus\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deleteItemDetail: () => {\r\n            dispatch(deleteItemDetail())\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalPortal)","import React, {Component} from 'react'\r\n\r\nclass NotFound extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                NotFound\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NotFound","import React, { Component } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport {connect} from 'react-redux'\n\nclass Menu extends Component {\n    constructor(props) {\n        super(props)\n\n        this.onClick = this.onClick.bind(this)\n    }\n\n    onClick() {\n\n    }\n\n    render() {\n        let searchContent = this.props.searchContent\n        let searchPath = `?s=${searchContent}`\n        if (searchContent === '' || searchContent === undefined) {\n            searchPath = ''\n        }\n        let menus = [\n            {\n                text: '首页',\n                pathname: '/',\n                search: '',\n            },\n            {\n                text: '热门歌单',\n                pathname: `/playlist`,\n                search: `?cat=${this.props.activeTag}`,\n            },\n            {\n                text: '搜索',\n                pathname: `/search`,\n                search: searchPath,\n            },\n        ]\n        return (\n            <nav>\n                <ul className=\"nav-container\">\n                    {\n                        menus.map((e, index) => {\n                                let href = `${e.pathname}${e.search}`\n                                let isCurrent = this.props.currentPathname === e.pathname\n                                // Link 组件相当于 a 标签的作用, to 相当于 href 属性\n                                return (\n                                    <li className=\"nav-item\" key={index}>\n                                        <Link className={isCurrent? \"nav-link nav-link-current\" : \"nav-link\"} to={href}>{e.text}</Link>\n                                    </li>\n                                )\n                            }\n                        )\n                    }\n                </ul>\n            </nav>\n        )\n    }\n}\n\nconst mapStateTopProps = (state, ownProps) => {\n    return {\n        activeTag: state.PlayListReducer.activeTag,\n        searchContent: state.SearchBarReducer.searchContent,\n        currentPathname: ownProps.location.pathname,\n    }\n}\n\nexport default withRouter(connect(mapStateTopProps, null)(Menu))\n","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {changeAudioStatus, getLyricFromNet, saveCurrentLyricIndex, changePlayMode, playNextSong} from \"../actions\"\r\nimport {timeFormat, getCurrentSongInfo} from '../../../utils'\r\n\r\nclass AudioController extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            currentTime: null,\r\n            duration: null,\r\n            sliding: false,\r\n            hover: false,\r\n        }\r\n        this.audio = React.createRef()\r\n        this.songSlider = React.createRef()\r\n        this.playOrPause = this.playOrPause.bind(this)\r\n        this.clickToSeek = this.clickToSeek.bind(this)\r\n        this.dragToSeek = this.dragToSeek.bind(this)\r\n        this.AfterDragToSeek = this.AfterDragToSeek.bind(this)\r\n        this.handleHover = this.handleHover.bind(this)\r\n        this.changePlayMode = this.changePlayMode.bind(this)\r\n        this.changeToPlayNextSong = this.changeToPlayNextSong.bind(this)\r\n        this.toggleList = this.toggleList.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        const a = this.audio.current\r\n        a.addEventListener('canplay', () => {\r\n            let lrcUrl = this.props.currentSongInfo.lrc\r\n            this.props.getLyricFromNet(lrcUrl)\r\n            const {currentTime, duration} = a\r\n            this.setState({\r\n                currentTime,\r\n                duration\r\n            })\r\n            console.log('加载完了')\r\n            a.play()\r\n        })\r\n        a.addEventListener('play', () => {\r\n            console.log('在播放了')\r\n            this.props.changeAudioStatus('play')\r\n        })\r\n        a.addEventListener('pause', () => {\r\n            console.log('暂停了一下')\r\n            this.props.changeAudioStatus('pause')\r\n        })\r\n        a.addEventListener('timeupdate', () => {\r\n            if (!this.state.sliding) {\r\n                const {currentTime} = a\r\n                this.setState({\r\n                    currentTime\r\n                })\r\n                this.parseCurrentTimeToGetLyricIndex(currentTime)\r\n            }\r\n        })\r\n        a.addEventListener('ended', () => {\r\n            this.props.playNextSong(this.props.playMode)\r\n            if (this.props.lengthOfSongList === 1 || this.props.playMode === 'circle') {\r\n                a.play()\r\n            }\r\n        })\r\n    }\r\n\r\n    parseCurrentTimeToGetLyricIndex(currentTime) {\r\n        let lyricArray = this.props.currentSongExtraInfo.currentLyric\r\n        for (let i = 0; i < lyricArray.length; i++) {\r\n            let time = lyricArray[i][0]\r\n            if (Math.abs(time - currentTime) < 0.3) {\r\n                this.props.saveCurrentLyricIndex(i)\r\n                break\r\n            }\r\n        }\r\n    }\r\n\r\n    getLyricIndexWhenJumpSong(currentTime) {\r\n        let lyricArray = this.props.currentSongExtraInfo.currentLyric\r\n        let index = 0\r\n        for (let i = 0; i < lyricArray.length; i++) {\r\n            let time = lyricArray[i][0]\r\n            if (time > currentTime) {\r\n                index = i - 1\r\n                break\r\n            }\r\n        }\r\n        let theLastLyric = lyricArray[lyricArray.length - 1]\r\n        if ((theLastLyric !== undefined) && (currentTime > theLastLyric[0])) {\r\n            index = lyricArray.length - 1\r\n        }\r\n        this.props.saveCurrentLyricIndex(index)\r\n    }\r\n\r\n    playOrPause() {\r\n        if (this.props.currentSongInfo.id === -1) {\r\n            return 0\r\n        }\r\n        const a = this.audio.current\r\n        if (this.props.AudioStatus === 'pause') {\r\n            a.play()\r\n            this.props.changeAudioStatus('play')\r\n        } else {\r\n            a.pause()\r\n            this.props.changeAudioStatus('pause')\r\n        }\r\n    }\r\n\r\n    getPlayButtonSvg() {\r\n        switch (this.props.AudioStatus) {\r\n            case 'play': {\r\n                return (\r\n                    <svg className=\"svg-icon\" viewBox=\"0 0 1024 1024\">\r\n                        <path d=\"M243.2 208h166.4v608H243.2zM614.4 208h166.4v608h-166.4z\">\r\n                        </path>\r\n                    </svg>\r\n                )\r\n            }\r\n            case 'pause': {\r\n                return (\r\n                    <svg className=\"svg-icon\" viewBox=\"0 0 1024 1024\">\r\n                        <path d=\"M289.5 844.3V179.7l445 332.3-445 332.3z\">\r\n                        </path>\r\n                    </svg>\r\n                )\r\n            }\r\n            default: {\r\n                return (\r\n                    <div>default</div>\r\n                )\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    clickToSeek(event) {\r\n        const a = this.audio.current\r\n        let target = event.target\r\n        if (!target.classList.contains('slider-point')) {\r\n            let { left, width } = event.currentTarget.getBoundingClientRect()\r\n            let clickPosition = (event.clientX - left) / width\r\n            let currentTime = clickPosition * a.duration\r\n            if (!isNaN(currentTime)) {\r\n                a.currentTime = currentTime\r\n                this.getLyricIndexWhenJumpSong(currentTime)\r\n            } else {\r\n                alert(`currentTime出现NaN了${currentTime}`)\r\n            }\r\n        }\r\n    }\r\n\r\n    dragToSeek() {\r\n        let isRunning = false\r\n        let isFirstDrag = true\r\n        return (event) => {\r\n            event.persist()\r\n            if (isRunning || isFirstDrag ) {\r\n                isFirstDrag = false\r\n                return\r\n            }\r\n            isRunning = true\r\n            window.requestAnimationFrame(() => {\r\n                this.seek(event)\r\n                isRunning = false\r\n            })\r\n            if (!this.state.sliding) {\r\n                this.setState({\r\n                    sliding: true\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    seek(event) {\r\n        const a = this.audio.current\r\n        let {left, width} = this.songSlider.current.getBoundingClientRect()\r\n        let dragPosition = (event.clientX - left) / width\r\n        if (dragPosition >= 0 && dragPosition <= 1) {\r\n            let currentTime = a.duration * dragPosition\r\n            this.setState({\r\n                currentTime\r\n            })\r\n        }\r\n    }\r\n\r\n    AfterDragToSeek() {\r\n        const a = this.audio.current\r\n        a.currentTime = this.state.currentTime\r\n        this.getLyricIndexWhenJumpSong(this.state.currentTime)\r\n        this.setState({\r\n            sliding: false\r\n        })\r\n    }\r\n\r\n    handleHover() {\r\n        this.setState({\r\n            hover: !this.state.hover\r\n        })\r\n    }\r\n\r\n    toggleList() {\r\n        let list = document.querySelector('.song-list')\r\n        list.classList.toggle('hidden')\r\n        let pop = document.querySelector('.pop-up')\r\n        if (pop === null) {\r\n            let body = document.querySelector(\"body\")\r\n            body.classList.toggle('ban-scroll')\r\n        }\r\n        let musicPlayer = document.querySelector('.audio-controller')\r\n        musicPlayer.classList.toggle('playlist-opened')\r\n        const a = this.audio.current\r\n        this.getLyricIndexWhenJumpSong(a.currentTime)\r\n        let songList = document.querySelector(('.song-list-container'))\r\n        let {height} = songList.getBoundingClientRect()\r\n        let i = Math.floor(height / 50 / 2)\r\n        songList.scrollTop = this.props.currentSongExtraInfo.currentSongIndex * 50 - 50 * i\r\n    }\r\n\r\n    changePlayMode() {\r\n        let modeList = ['loop', 'circle', 'random']\r\n        let index = modeList.indexOf(this.props.playMode)\r\n        let nextIndex = (index + 1) % modeList.length\r\n        let nextModeType = modeList[nextIndex]\r\n        this.props.changePlayMode(nextModeType)\r\n    }\r\n\r\n    getModeButtonSvg() {\r\n        switch (this.props.playMode) {\r\n            case 'loop': {\r\n                return (\r\n                    <svg className=\"svg-icon\" viewBox=\"0 0 1024 1024\">\r\n                        <path d=\"M922 607.1V887H102V157h612.2V58.2l200 125-200 125V207H152v630h720V607.1h50z\">\r\n                        </path>\r\n                    </svg>\r\n                )\r\n            }\r\n            case 'circle': {\r\n                return (\r\n                    <svg className=\"svg-icon\" viewBox=\"0 0 1024 1024\">\r\n                        <path\r\n                            d=\"M922 607.1V887H102V157h612.2V58.2l200 125-200 125V207H152v630h720V607.1h50zM560.5 737.6V306.4h-34c-9.2 18.6-24.8 37.7-46.9 57.4-22.1 19.7-47.9 36.5-77.3 50.4v51c16.4-6.1 34.9-15.1 55.5-27.2s37.3-24.2 50-36.3v336h52.7z\">\r\n                        </path>\r\n                    </svg>\r\n                )\r\n            }\r\n            case 'random': {\r\n                return (\r\n                    <svg className=\"svg-icon\" viewBox=\"0 0 1024 1024\">\r\n                        <path d=\"M726.6 774H594.4L458.8 512l135.6-262h132.2v98.7l200-125-200-125V200H564.4L430.7 457.7 297.4 200h-200v50h169.2l135.9 262-135.9 262H97.4v50h200l133.3-257.7L564.4 824h162.2v101.3l200-125-200-125z\">\r\n                        </path>\r\n                    </svg>\r\n                )\r\n            }\r\n            default: {\r\n                return <div>default</div>\r\n            }\r\n        }\r\n    }\r\n\r\n    changeToPlayNextSong(loopStep) {\r\n        return () => {\r\n            this.props.playNextSong(this.props.playMode, loopStep)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let {currentTime, duration} = this.state\r\n        let {name, singer, pic, url} = this.props.currentSongInfo\r\n        let playMode = this.props.playMode\r\n        let mapEnglishToChinese = {\r\n            loop: '列表循环',\r\n            circle: '单曲循环',\r\n            random: '随机播放',\r\n        }\r\n        let playModeTitle = mapEnglishToChinese[this.props.playMode]\r\n        return (\r\n            <div className=\"audio-controller\">\r\n                <audio src={url} ref={this.audio}>\r\n                </audio>\r\n                <div className=\"album-cover\">\r\n                    <img src={pic} alt=\"专辑图片\" />\r\n                </div>\r\n                <div className=\"extra-info-container\">\r\n                    <div className={this.state.hover? \"song-slider hover\" : \"song-slider\"} onClick={this.clickToSeek} onMouseOver={this.handleHover} onMouseOut={this.handleHover} ref={this.songSlider}>\r\n                        <div className=\"slider-bg\">\r\n                        </div>\r\n                        <div className=\"slider-progress\" style={{width: `${ currentTime / duration * 100 }%`}}>\r\n                        <span className=\"slider-point\" draggable=\"true\" onDrag={this.dragToSeek()} onDragEnd={this.AfterDragToSeek}>\r\n                        </span>\r\n                        </div>\r\n                    </div>\r\n                    <span className=\"music-timeline\">\r\n                        <span id=\"music-time-now\">{timeFormat(currentTime)}</span>\r\n                        <span> / </span>\r\n                        <span id=\"music-time-all\">{timeFormat(duration)}</span>\r\n                    </span>\r\n                    <div className=\"song-info\">\r\n                        <div className=\"song-info-name\" title={name}>{name}</div>\r\n                        <div className=\"song-info-singer\" title={singer}>{singer}</div>\r\n                    </div>\r\n                    <div className=\"controller-btn\">\r\n                        <span className=\"back-btn\" title=\"上一首(ctrl+←)\" onClick={this.changeToPlayNextSong(-1)}>\r\n                            <svg className=\"svg-icon\" viewBox=\"0 0 1024 1024\">\r\n                                <path d=\"M362.3 512l445-332.3v664.5L362.3 512zM216.7 179.7h80v664.5h-80V179.7z\">\r\n                                </path>\r\n                            </svg>\r\n                        </span>\r\n                        <span className={[\"play-btn\", this.props.AudioStatus].join(' ')} title=\"播放/暂停(p)\" onClick={this.playOrPause}>\r\n                            {this.getPlayButtonSvg()}\r\n                        </span>\r\n                        <span className=\"next-btn\" title=\"下一首(ctrl+→)\" onClick={this.changeToPlayNextSong(1)}>\r\n                            <svg className=\"svg-icon\" viewBox=\"0 0 1024 1024\">\r\n                                <path d=\"M216.7 844.3V179.7l445 332.3-445 332.3z m590.6 0h-80V179.7h80v664.6z\">\r\n                                </path>\r\n                            </svg>\r\n                        </span>\r\n                        <span className=\"volume-btn icon\">\r\n                            <svg className=\"svg-icon\" viewBox=\"0 0 1024 1024\">\r\n                                <path d=\"M697.5 76l-497 230.6-147.3-20v420l147.3-20 497 230.6V76z m-50 760.7l-424.9-195-13.7-6.8-15.2 2.1-90.6 12.3V343.8l90.6 12.3 15.2 2.1 13.7-6.8 424.9-194.9v680.2zM812 612h-50V412h50v200z m204.7 200h-50V212h50v600zM914.3 712h-50V312h50v400z\">\r\n                                </path>\r\n                            </svg>\r\n                        </span>\r\n                        <span className={`mode-btn icon ${playMode}`} data-mode={playMode} title={playModeTitle} onClick={this.changePlayMode}>\r\n                            {this.getModeButtonSvg()}\r\n                        </span>\r\n                        <span className=\"list-btn icon\" title=\"播放列表\" onClick={this.toggleList}>\r\n                            <svg className=\"svg-icon\" viewBox=\"0 0 1024 1024\">\r\n                                <path d=\"M91.9 165.2h50v50h-50v-50z m150.2 0v50h690v-50h-690zM91.9 429.7h50v-50h-50v50z m150.2 0h690v-50h-690v50zM91.9 644.3h50v-50h-50v50z m150.2 0h690v-50h-690v50zM91.9 858.8h50v-50h-50v50z m150.2 0h690v-50h-690v50z\">\r\n                                </path>\r\n                            </svg>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    let theState = state.AudioReducer\r\n    let currentSongInfo = getCurrentSongInfo(theState)\r\n    let lengthOfSongList = theState.songList.length\r\n    return {\r\n        lengthOfSongList: lengthOfSongList,\r\n        AudioStatus: theState.AudioStatus,\r\n        currentSongInfo: currentSongInfo,\r\n        currentSongExtraInfo: theState.currentSongExtraInfo,\r\n        playMode: theState.playMode,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeAudioStatus: (status) => {\r\n            dispatch(changeAudioStatus(status))\r\n        },\r\n        getLyricFromNet: (url) => {\r\n            dispatch(getLyricFromNet(url))\r\n        },\r\n        saveCurrentLyricIndex: (currentLyricIndex) => {\r\n            dispatch(saveCurrentLyricIndex(currentLyricIndex))\r\n        },\r\n        changePlayMode: (modeType) => {\r\n            dispatch(changePlayMode(modeType))\r\n        },\r\n        playNextSong: (modeType, loopStep) => {\r\n            dispatch(playNextSong(modeType, loopStep))\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AudioController)","import React, {Component} from 'react'\r\nimport {timeFormat, getCurrentSongInfo} from '../../../utils'\r\nimport {connect} from \"react-redux\"\r\nimport {playTheSongInList, deleteTheSong} from '../actions'\r\n\r\nclass SongItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.handlePlay = this.handlePlay.bind(this)\r\n        this.handlePause = this.handlePause.bind(this)\r\n        // this.handleDelete = this.handleDelete.bind(this)\r\n    }\r\n\r\n    handlePlay() {\r\n        if (this.props.currentSongId !== this.props.songInfo.id) {\r\n            this.props.playTheSongInList(this.props.songIndex)\r\n            console.log('this.props.songInfo，第一次放', this.props.songInfo)\r\n        } else {\r\n            let audio = document.querySelector('audio')\r\n            audio.play()\r\n        }\r\n    }\r\n\r\n    handlePause() {\r\n        let audio = document.querySelector('audio')\r\n        audio.pause()\r\n    }\r\n\r\n    getPlayOrPauseButtonSvg() {\r\n        let {id} = this.props.songInfo\r\n        let isTheSongPlaying = (this.props.AudioStatus === 'play') && (this.props.currentSongId === id)\r\n        if (isTheSongPlaying) {\r\n            return (\r\n                <svg className=\"svg-list-icon\" viewBox=\"0 0 1024 1024\">\r\n                    <path d=\"M910.8 303.6c-5.4-10.5-16.3-17.8-28.9-17.8-17.8 0-32.2 14.4-32.2 32.1 0 6 1.7 11.7 4.6 16.5l-0.1 0.1c26.9 52.4 42.1 111.8 42.1 174.7 0 211.6-171.6 383.2-383.2 383.2S129.8 720.8 129.8 509.2 301.4 126.1 513 126.1c62.5 0 121.5 15 173.6 41.5l0.2-0.4c4.6 2.6 10 4.1 15.7 4.1 17.8 0 32.2-14.4 32.2-32.1 0-13.1-7.9-24.4-19.3-29.4C654.6 78.9 585.9 61.5 513 61.5 265.7 61.5 65.3 262 65.3 509.2S265.7 956.9 513 956.9s447.7-200.4 447.7-447.7c0-74.1-18-144-49.9-205.6z\">\r\n                    </path>\r\n                    <path d=\"M385.4 352.2V672c0 17.5 14.3 31.9 31.9 31.9 17.6 0 32-14.4 31.9-31.9V352.2c0-17.5-14.3-31.9-31.9-31.9-17.5 0-31.9 14.3-31.9 31.9zM578.9 352.2V672c0 17.5 14.3 31.9 31.9 31.9 17.5 0 31.9-14.4 31.9-31.9V352.2c0-17.5-14.3-31.9-31.9-31.9-17.5 0-31.9 14.3-31.9 31.9z\">\r\n                    </path>\r\n                    <path d=\"M772.7 217.7a32.2 32.1 0 1 0 64.4 0 32.2 32.1 0 1 0-64.4 0Z\">\r\n                    </path>\r\n                </svg>\r\n            )\r\n        } else {\r\n            return (\r\n                <svg className=\"svg-list-icon\" viewBox=\"0 0 1024 1024\">\r\n                    <path d=\"M772.7 217.7a32.2 32.1 0 1 0 64.4 0 32.2 32.1 0 1 0-64.4 0Z\">\r\n                    </path>\r\n                    <path d=\"M415.8 679.9c5.9 0 11.5-1.6 16.2-4.5l231.1-134.6c10.9-5.2 18.5-16.3 18.5-29.2 0-11.9-6.4-22.3-16-27.8L439.7 352.2c-5.8-6.7-14.4-10.9-23.9-10.9-17.6 0-31.8 14.4-31.8 32.1 0 0.6 0 1.2 0.1 1.8l-0.4 0.2 0.5 269c-0.1 1.1-0.2 2.2-0.2 3.4 0 17.7 14.3 32.1 31.8 32.1z\">\r\n                    </path>\r\n                    <path d=\"M909.8 306.6c-5.4-10.5-16.3-17.8-28.9-17.8-17.8 0-32.2 14.4-32.2 32.1 0 6 1.7 11.7 4.6 16.5l-0.1 0.1c26.9 52.4 42.1 111.8 42.1 174.7 0 211.6-171.6 383.2-383.2 383.2S128.8 723.8 128.8 512.2 300.4 129.1 512 129.1c62.5 0 121.5 15 173.6 41.5l0.2-0.4c4.6 2.6 10 4.1 15.7 4.1 17.8 0 32.2-14.4 32.2-32.1 0-13.1-7.9-24.4-19.3-29.4C653.6 81.9 584.9 64.5 512 64.5 264.7 64.5 64.3 265 64.3 512.2S264.7 959.9 512 959.9s447.7-200.4 447.7-447.7c0-74.1-18-144-49.9-205.6z\">\r\n                    </path>\r\n                </svg>\r\n            )\r\n        }\r\n    }\r\n\r\n    // handleDelete(songIndex) {\r\n    //     return () => {\r\n    //         this.props.deleteTheSong(songIndex)\r\n    //     }\r\n    // }\r\n\r\n    render() {\r\n        let {id, name, singer, time} = this.props.songInfo\r\n        let isTheSongPlaying = (this.props.AudioStatus === 'play') && (this.props.currentSongId === id)\r\n        return (\r\n            <div className=\"song-list-item-container\" style={isTheSongPlaying ? {color: 'rgb(255, 255, 255)'} : {}}>\r\n                <div className=\"song-list-item-name\">\r\n                    <span className=\"song-name\" title={name}>{name}</span>\r\n                    <span className=\"song-list-item-play\" onClick={isTheSongPlaying ? this.handlePause : this.handlePlay}>\r\n                        {this.getPlayOrPauseButtonSvg()}\r\n                    </span>\r\n                    <span className=\"song-list-item-delete\" onClick={this.props.deleteTheSong.bind(this, this.props.songIndex)}>\r\n                        <svg className=\"svg-list-icon\" viewBox=\"0 0 1024 1024\">\r\n                            <path d=\"M897.2 128H578.7c-1.6-34.7-30.2-62.4-65.3-62.4s-63.8 27.7-65.3 62.4h-320c-17.5 0-31.9 14.4-31.9 31.9s14.4 31.9 31.9 31.9H192v639.8c0 70.4 57.6 128 128 128h384.1c70.4 0 128-57.6 128-128V676.2c0.1-1.2 0.2-2.4 0.2-3.6 0.1-17.8-14.4-32.1-32.1-32.1-17.8 0-32.2 14.4-32.2 32.1v159.1c0 35.2-28.8 64-64 64H320c-35.2 0-64-28.8-64-64V191.8h511.9v223.1c0 17.7 14.4 32.1 32.2 32.1s32.2-14.4 32.2-32.1c0-1.2-0.1-2.4-0.2-3.6V191.8h65.1c17.6 0 31.9-14.4 31.9-31.9S914.7 128 897.2 128z\">\r\n                            </path>\r\n                            <path d=\"M386.9 350.6v386.6c0 16.8 13.8 30.6 30.6 30.6s30.6-13.8 30.6-30.5V350.6c0-16.8-13.8-30.6-30.6-30.6s-30.6 13.8-30.6 30.6zM576.7 350.6v386.6c0 16.8 13.8 30.6 30.6 30.6s30.6-13.8 30.6-30.5V350.6c0-16.8-13.8-30.6-30.6-30.6s-30.6 13.8-30.6 30.6z\">\r\n                            </path>\r\n                            <path d=\"M768 543.7a32.2 32.1 0 1 0 64.4 0 32.2 32.1 0 1 0-64.4 0Z\">\r\n                            </path>\r\n                        </svg>\r\n                    </span>\r\n                </div>\r\n                <div className=\"song-list-item-singer name\">\r\n                    <span title={singer}>{singer}</span>\r\n                </div>\r\n                <div className=\"song-list-item-time\">\r\n                    {timeFormat(time)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    let theState = state.AudioReducer\r\n    let currentSongInfo = getCurrentSongInfo(theState)\r\n    let currentSongId = currentSongInfo.id\r\n    return {\r\n        AudioStatus: theState.AudioStatus,\r\n        currentSongId: currentSongId,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        playTheSongInList: (songInfo) => {\r\n            dispatch(playTheSongInList(songInfo))\r\n        },\r\n        deleteTheSong: (songIndex) => {\r\n            dispatch(deleteTheSong(songIndex))\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SongItem)","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport SongItem from './SongItem'\r\nimport {getCurrentSongInfo} from '../../../utils'\r\n\r\nclass SongList extends Component {\r\n    autoScrollLyricList(div, currentLyricIndex) {\r\n        if (div !== null) {\r\n            let {height} = div.getBoundingClientRect()\r\n            let i = Math.floor(height / 46 / 2)\r\n            div.scrollTop = currentLyricIndex * 46 - 46 * i\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let {pic} = this.props.currentSongInfo\r\n        let defaultPic = \"http://s4.music.126.net/style/web2/img/default/default_album.jpg\"\r\n        let picUrl = pic || defaultPic\r\n        let lyric = this.props.currentSongExtraInfo.currentLyric\r\n        let currentLyricIndex = this.props.currentSongExtraInfo.currentLyricIndex\r\n        return (\r\n            <div className=\"song-list hidden\">\r\n                <div className=\"song-list-bg\">\r\n                </div>\r\n                <div className=\"song-list-img\" style={{backgroundImage: `url(${picUrl})`}}>\r\n                </div>\r\n                <div className=\"song-list-header\">播放列表</div>\r\n                <div className=\"song-list-container\">\r\n                    <div className=\"song-list-head-container\">\r\n                        <div className=\"song-list-item-name\">\r\n                            <span title=\"\">歌曲</span>\r\n                        </div>\r\n                        <div className=\"song-list-item-singer\">\r\n                            <span title=\"\">歌手</span>\r\n                        </div>\r\n                        <div className=\"song-list-item-time\">时长</div>\r\n                    </div>\r\n                    {this.props.songList.map((value, index) => {\r\n                        return <SongItem key={index} songIndex={index} songInfo={value}/>\r\n                    })}\r\n                </div>\r\n                <div className=\"lyric-list\" ref={(div) => {this.autoScrollLyricList(div, currentLyricIndex)}}>\r\n                    {\r\n                        lyric.map((value, index) => {\r\n                            return <p className={(currentLyricIndex === index)? \"lyric-item active\" : \"lyric-item\"} key={index}>{value[1]}</p>\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    let theState = state.AudioReducer\r\n    let currentSongInfo = getCurrentSongInfo(theState)\r\n    return {\r\n        songList: theState.songList,\r\n        currentSongInfo: currentSongInfo,\r\n        currentSongExtraInfo: theState.currentSongExtraInfo,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(SongList)","import React, {Component} from 'react'\r\nimport AudioController from \"./AudioController\"\r\nimport SongList from \"./SongList\"\r\nimport './MusicController.css'\r\n\r\nclass MusicController extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"music-player\">\r\n                <AudioController />\r\n                <SongList />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MusicController","import React, {Component} from 'react'\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"page-footer\">\r\n                页脚\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer","import React, {Component} from 'react'\n// import a as b from module 相当于给 a 模块起了一个别名 b,\n// 这样在其他地方使用可以直接使用 b 这个变量名\nimport { BrowserRouter as Router, Route, Switch} from \"react-router-dom\"\nimport Home from \"./Home\"\nimport {view as PlayListPage} from \"./playListPage/\"\nimport {ModalPortal} from \"./playListPage/\"\nimport {view as SearchPage} from \"./searchPage/\"\nimport NotFound from \"./NotFound\"\nimport Menu from './Menu'\nimport MusicController from \"./audioController/views/MusicController\"\nimport Footer from './Footer'\nimport './App.css'\n\n\nclass App extends Component {\n\n    render() {\n        return (\n            // BrowserRouter 会使用 HTML5 的 history API 渲染单页路由\n            <Router>\n                <React.Fragment>\n                    <Menu />\n                {/*Router 只能有一个子元素*/}\n                {/*也可以放一个 Switch 组件*/}\n                    <div className=\"content-container\">\n                        <Switch>\n                            {/*Route 组件用来匹配 location.path 的值, 并且渲染相应的组件 */}\n                            {/*exact 表示路径完全匹配时才算匹配*/}\n                            {/*比如 /todo/1 与 /todo 并不是完全匹配, 与 /todo/:id 完全匹配*/}\n                            <Route exact path=\"/\" component={Home} />\n                            <Route exact path=\"/playlist\" component={PlayListPage} />\n                            <Route exact path=\"/search\" component={SearchPage} />\n                            <Route component={NotFound} />\n                        </Switch>\n                    </div>\n                    <Footer />\n                    <MusicController />\n                    <ModalPortal />\n                </React.Fragment>\n            </Router>\n        )\n    }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { applyMiddleware, createStore, combineReducers} from 'redux'\r\nimport {reducer as SearchBarReducer} from './components/searchPage/'\r\nimport {reducer as PlayListReducer} from './components/playListPage/'\r\nimport {reducer as AudioReducer} from './components/audioController/'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {loadSongListInLocalStorage} from './utils'\r\n\r\nconst initValue = {\r\n    SearchBarReducer: {\r\n        searchContent: ''\r\n    },\r\n    PlayListReducer: {\r\n        activeTag: '全部',\r\n        albumStatus: '',\r\n        albumDetailInfo: '',\r\n    },\r\n    AudioReducer: {\r\n        AudioStatus: 'pause',\r\n        songList: loadSongListInLocalStorage(),\r\n        currentSongExtraInfo: {\r\n            currentSongIndex: -1,\r\n            currentLyric: [],\r\n            currentLyricIndex: -1,\r\n        },\r\n        playMode: 'loop',\r\n        initSongInfo: {\r\n            id: -1,\r\n            name: '歌曲',\r\n            singer: '歌手',\r\n            lrc: null,\r\n            pic: \"http://s4.music.126.net/style/web2/img/default/default_album.jpg\",\r\n            url: null,\r\n            time: null,\r\n        },\r\n    },\r\n}\r\n\r\nconst reducerObj = {\r\n    SearchBarReducer,\r\n    PlayListReducer,\r\n    AudioReducer,\r\n}\r\n\r\nconst reducer = combineReducers(reducerObj)\r\n\r\nconst middleware = [thunkMiddleware]\r\n\r\nconst storeEnhancers = composeWithDevTools(applyMiddleware(...middleware))\r\n\r\nconst Store = createStore(reducer, initValue, storeEnhancers)\r\n\r\nexport default Store","import * as search from './actionTypes.js'\r\nimport * as Status from './status.js'\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case search.INPUT_CHANGE: {\r\n            return {\r\n                ...state,\r\n                searchInput: action.input\r\n            }\r\n        }\r\n        case search.SEARCH_STARTED: {\r\n            return {...state,\r\n                status: Status.LOADING\r\n            }\r\n        }\r\n        case search.SEARCH_SUCCESS: {\r\n            return {...state,\r\n                status: Status.SUCCESS,\r\n                searchResult: action.result,\r\n                searchContent: action.searchContent\r\n            }\r\n        }\r\n        case search.SEARCH_FAILURE: {\r\n            return {\r\n                status: Status.FAILURE\r\n            }\r\n        }\r\n        default: {\r\n            return state === undefined ? [] : state\r\n        }\r\n    }\r\n}","import * as playList from './actionTypes.js'\r\nimport * as Status from './status.js'\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case playList.PLAYLIST_TAG_CHANGE: {\r\n            return {...state,\r\n                activeTag: action.tagName\r\n            }\r\n        }\r\n        case playList.LOAD_ITEM_DETAIL_STARTED: {\r\n            return {...state,\r\n                albumStatus: Status.LOADING\r\n            }\r\n        }\r\n        case playList.LOAD_ITEM_DETAIL_SUCCESS: {\r\n            return {...state,\r\n                albumStatus: Status.SUCCESS,\r\n                albumDetailInfo: action.albumDetailInfo\r\n            }\r\n        }\r\n        case playList.DELETE_ITEM_DETAIL: {\r\n            return{...state,\r\n                albumStatus: '',\r\n                albumDetailInfo: ''\r\n            }\r\n        }\r\n        case playList.PLAYLIST_LOAD_STARTED: {\r\n            return {...state,\r\n                playListStatus: Status.LOADING\r\n            }\r\n        }\r\n        case playList.PLAYLIST_LOAD_SUCCESS: {\r\n            return {...state,\r\n                playListStatus: Status.SUCCESS,\r\n                playListResult: action.playListResult\r\n            }\r\n        }\r\n        case playList.PLAYLIST_LOAD_FAILURE: {\r\n            return {\r\n                playListStatus: Status.FAILURE\r\n            }\r\n        }\r\n        default: {\r\n            return state === undefined ? {} : state\r\n        }\r\n    }\r\n}","import * as audioController from './actionTypes'\r\nimport {saveSongToLocalStorage, deleteSongInLocalStorage} from \"../../utils\"\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case audioController.CHANGE_AUDIO_STATUS: {\r\n            return {...state,\r\n                AudioStatus: action.status\r\n            }\r\n        }\r\n        case audioController.APPEND_THE_SONG: {\r\n            let songList = state['songList']\r\n            let isTheSongNotExisted = songList.every((value) => {\r\n                return (value.id !== action.songInfo.id)\r\n            })\r\n            if (isTheSongNotExisted) {\r\n                let cloneList = JSON.parse(JSON.stringify(songList))\r\n                cloneList.push(action.songInfo)\r\n                saveSongToLocalStorage(action.songInfo)\r\n                return {\r\n                    ...state,\r\n                    songList: cloneList,\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state\r\n                }\r\n            }\r\n        }\r\n        case audioController.DELETE_THE_SONG: {\r\n            let songList = state['songList']\r\n            let cloneList = JSON.parse(JSON.stringify(songList))\r\n            let songIndex = action.songIndex\r\n            let currentSongIndex = state.currentSongExtraInfo.currentSongIndex\r\n            let listLength = cloneList.length\r\n            deleteSongInLocalStorage(songIndex)\r\n            cloneList.splice(songIndex, 1)\r\n            if (listLength === 1) {\r\n                return {\r\n                    ...state,\r\n                    songList: [],\r\n                    currentSongExtraInfo: {\r\n                        ...state.currentSongExtraInfo,\r\n                        currentSongIndex: -1,\r\n                    }\r\n                }\r\n            }\r\n            if (currentSongIndex !== songIndex) {\r\n                if (currentSongIndex < songIndex) {\r\n                    return {\r\n                        ...state,\r\n                        songList: cloneList,\r\n                    }\r\n                } else {\r\n                    let newSongIndex = currentSongIndex - 1\r\n                    console.log('删除了前面的歌')\r\n                    return {\r\n                        ...state,\r\n                        songList: cloneList,\r\n                        currentSongExtraInfo: {\r\n                            ...state.currentSongExtraInfo,\r\n                            currentSongIndex: newSongIndex,\r\n                        }\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                if (currentSongIndex !== listLength - 1) {\r\n                    let newSongIndex = currentSongIndex\r\n                    return {\r\n                        ...state,\r\n                        songList: cloneList,\r\n                        currentSongExtraInfo: {\r\n                            ...state.currentSongExtraInfo,\r\n                            currentSongIndex: newSongIndex,\r\n                        }\r\n                    }\r\n                } else {\r\n                    let newSongIndex = currentSongIndex - 1\r\n                    return {\r\n                        ...state,\r\n                        songList: cloneList,\r\n                        currentSongExtraInfo: {\r\n                            ...state.currentSongExtraInfo,\r\n                            currentSongIndex: newSongIndex,\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        case audioController.PLAY_THE_SONG_IN_PAGE: {\r\n            let songList = state['songList']\r\n            let currentSongIndex = -1\r\n            let isTheSongNotExisted = songList.every((value, index) => {\r\n                currentSongIndex = index\r\n                return (value.id !== action.songInfo.id)\r\n            })\r\n            console.log('currentSongIndex', currentSongIndex)\r\n            if (isTheSongNotExisted) {\r\n                let cloneList = JSON.parse(JSON.stringify(songList))\r\n                cloneList.push(action.songInfo)\r\n                saveSongToLocalStorage(action.songInfo)\r\n                return {\r\n                    ...state,\r\n                    songList: cloneList,\r\n                    currentSongExtraInfo: {\r\n                        ...state.currentSongExtraInfo,\r\n                        currentSongIndex: cloneList.length - 1,\r\n                        currentLyricIndex: -1,\r\n                    },\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    currentSongExtraInfo: {\r\n                        ...state.currentSongExtraInfo,\r\n                        currentSongIndex,\r\n                        currentLyricIndex: -1,\r\n                    },\r\n                }\r\n            }\r\n        }\r\n        case audioController.PLAY_THE_SONG_IN_LIST: {\r\n            return {\r\n                ...state,\r\n                currentSongExtraInfo: {\r\n                    ...state.currentSongExtraInfo,\r\n                    currentSongIndex: action.songIndex,\r\n                    currentLyricIndex: -1,\r\n                }\r\n            }\r\n        }\r\n        case audioController.PLAY_NEXT_SONG: {\r\n            let modeType = action.modeType\r\n            let currentSongIndex = state.currentSongExtraInfo.currentSongIndex\r\n            let LengthOfSongList = state.songList.length\r\n            let mapModeTypeToNextStep = {\r\n                loop: action.loopStep,\r\n                circle: 0,\r\n                random: parseInt(LengthOfSongList * Math.random()),\r\n            }\r\n            let step = mapModeTypeToNextStep[modeType]\r\n            let nextSongIndex = (currentSongIndex + step + LengthOfSongList) % LengthOfSongList\r\n            return {\r\n                ...state,\r\n                currentSongExtraInfo: {\r\n                    ...state.currentSongExtraInfo,\r\n                    currentSongIndex: nextSongIndex,\r\n                    currentLyric: [],\r\n                    currentLyricIndex: -1,\r\n                },\r\n            }\r\n        }\r\n        case audioController.GET_LYRIC: {\r\n            return {\r\n                ...state,\r\n                currentSongExtraInfo: {\r\n                    ...state.currentSongExtraInfo,\r\n                    currentLyric: action.lyric,\r\n                },\r\n            }\r\n        }\r\n        case audioController.GET_CURRENT_TIME: {\r\n            let index = action.currentLyricIndex\r\n            if (index === undefined) {\r\n                return {\r\n                    ...state,\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    currentSongExtraInfo: {\r\n                        ...state.currentSongExtraInfo,\r\n                        currentLyricIndex: index,\r\n                    },\r\n                }\r\n            }\r\n        }\r\n        case audioController.CHANGE_PLAY_MODE: {\r\n            return {\r\n                ...state,\r\n                playMode: action.modeType,\r\n            }\r\n        }\r\n        default: {\r\n            return state === undefined ? {} : state\r\n        }\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PlayerApp from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport Store from './Store'\n\nReactDOM.render(\n    <Provider store={Store}>\n        <PlayerApp />\n    </Provider>,\n    document.getElementById('root')\n    );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}