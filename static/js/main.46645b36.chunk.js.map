{"version":3,"sources":["api/api.js","components/homePage/actions.js","components/homePage/views/ImageSlider.js","components/homePage/actionTypes.js","components/homePage/views/Home.js","components/playListPage/actions.js","components/playListPage/actionTypes.js","utils.js","components/playListPage/views/PlayListItem.js","components/common/PageSelector.js","components/common/Loading.js","components/playListPage/views/PlayList.js","components/playListPage/status.js","components/playListPage/views/TagItem.js","components/playListPage/views/TagSelector.js","components/playListPage/views/icon.js","components/common/icon.js","components/searchPage/actions.js","components/searchPage/actionTypes.js","components/searchPage/views/SearchBar.js","components/audioController/actions.js","components/audioController/actionTypes.js","components/audioController/views/icon.js","components/audioController/views/AudioController.js","components/audioController/views/SongItem.js","components/audioController/views/SongList.js","components/audioController/views/MusicController.js","components/searchPage/views/SearchItem.js","components/searchPage/views/SearchList.js","components/searchPage/views/SearchPage.js","components/searchPage/status.js","components/playListPage/views/AlbumDetail.js","components/playListPage/views/ModalPortal.js","components/playListPage/views/PlayListPage.js","components/NotFound.js","components/Menu.js","components/Footer.js","components/App.js","serviceWorker.js","Store.js","components/homePage/reducer.js","components/searchPage/reducer.js","components/playListPage/reducer.js","components/audioController/reducer.js","index.js"],"names":["MusicApi","queryObj","callback","_queryObj","Object","objectSpread","input","pageSize","page","company","path","concat","this","get","_queryObj2","category","_queryObj3","albumId","lrcUrl","Api","classCallCheck","baseUrl","name","ajax","abortObj","abort","bind","abortName","undefined","isPathEqualToUrl","url","args","method","data","abortRequest","request","_args","r","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","status","console","log","send","registerAbort","ImageSlider","props","_this","possibleConstructorReturn","getPrototypeOf","call","handlerNextImage","assertThisInitialized","autoPlay","stopAutoPlay","handlerClickPoint","images","length","fetchImgInHomePage","step","lengthOfImages","indexOfNextImg","indexOfCurrentImg","changeTheIndexOfImg","event","Number","target","dataset","playNextImage","_this2","timerID","setInterval","clearInterval","index","_this3","widthOfSlider","offset","react_default","a","createElement","className","onMouseOver","onMouseOut","onClick","data-step","style","width","height","transform","map","value","key","src","picUrl","alt","getClassNameOfPoints","data-index","Component","connect","state","theState","homePageReducer","dispatch","getImgInHomePage","imgObj","JSON","parse","response","type","Home","views_ImageSlider","playListTagChange","tagName","timeFormat","seconds","m","String","Math","floor","s","saveCurrentSongIndexInLocalStorage","localStorage","setItem","stringify","saveSongToLocalStorage","songInfo","songList","getItem","push","getCurrentSongInfo","currentSongIndex","currentSongExtraInfo","initSongInfo","parseLyric","lyric","oneLyricInfo","indexOfTime","indexOf","oneLyric","slice","time","timeInfo","timeList","split","exp","pow","timeDeFormat","argsFromQuery","query","o","forEach","e","_e$split","_e$split2","slicedToArray","k","v","changeImgResolution","pixel","list","PlayListItem","_this$props$itemInfo","itemInfo","id","coverImgUrl","coverThumbImgUrl","data-id","fetchAlbumDetailInfo","title","AlbumId","arguments","albumDetailInfo","playListResult","code","PageSelector","handleChangePage","isPreviousAndNextCanBeClicked","_this$props$selectorI","selectorInfo","totalPage","currentPage","getPageSelector","changePage","pushHistory","_this$props$selectorI2","previousCanNotBeClicked","nextCanNotBeClicked","previousClassName","nextClassName","previousAndNext","_previousAndNext","disabled","showMiddleTag","endPage","totalTagCount","result","i","lastList","startList","changingTagCount","end","unshift","toConsumableArray","Loading","container","document","querySelector","icon","viewBox","cx","cy","fill","ReactDOM","createPortal","PlayList","getSelectorInfo","params","location","search","activeTag","cat","fetchHotPlayList","decodeURI","prevProps","prevState","snapshot","newPage","history","common_Loading","views_PlayListItem","common_PageSelector","showHotPlayList","PlayListReducer","playListStatus","hotPlayList","playListLoadSuccess","playListPageChangePage","withRouter","TagItem","toggleShow","rowData","theTagTabs","getClassName","Link","to","tagChange","TagSelector","mainTags","styleTags","languageTags","senceTags","emotionTags","themeTags","mapTagToMain","语种","风格","场景","情感","主题","show","hide","clickOnBlankArea","onclick","nativeEvent","stopImmediatePropagation","setState","classNameOfIcon","classNameOfTagsContainer","classNameOfMainTag","d","pathname","views_TagItem","loadingIcon","inputChange","SearchBar","fillSearchContentInSearchBar","onSearch","onChange","onKeyPress","searchObj","searchContent","parseUrlGetSearchContent","searchInput","isEqualToOldSearchContent","isAtSearchPage","window","urlObj","getSearchUrl","trim","searchResult","placeholder","onKeyDown","SearchBarReducer","toggleSongListWindow","changeAudioStatus","changePlayMode","modeType","saveCurrentLyricIndex","currentLyricIndex","appendTheSong","deleteTheSong","songIndex","playTheSongInPage","playTheSongInList","playNextSong","loopStep","getLyric","getLyricFromNet","l","lyricList","lyricsArray","_loop","_parseLyric","repeatIndex","findIndex","theLyric","lyricBeforeTranslated","element","translatedLyric","clearTimeRepeat","isNaN","lyricItem","sort","prev","current","parseLyricArray","previousBtn","nextBtn","volumeBtn","listBtn","AudioController","mapEnglishToChinese","loop","circle","random","isFirstLoad","volume","currentTime","duration","isHoverOnSongSlider","isHoverOnVolumeBtn","isSliding","isVolumeSliding","audio","React","createRef","songSlider","volumeSlider","playOrPause","clickToSeek","mouseDownToSeek","mouseMoveToSeek","afterSeek","handleHover","changeToPlayNextSong","toggleSongList","hoverVolumeBtn","clickToChange","mouseDownToChange","mouseMoveToChange","afterChange","bindHotKey","addEventListener","currentSongInfo","lrc","play","parseLyricIndex","_this2$props","lengthOfSongList","playMode","body","error","ctrlKey","deltaTime","theLastLyricTime","lyricInfo","isStart","isNotEnd","currentLyric","getNextLyricIndex","currentSrc","AudioStatus","pause","classList","contains","_event$currentTarget$","currentTarget","getBoundingClientRect","left","clientX","add","requestAnimationFrame","seek","_this$songSlider$curr","dragPosition","toFixed","remove","_event$currentTarget$2","_this4","change","_this$volumeSlider$cu","toggle","modeList","nextModeType","_this5","_this$state","songPercentage","_this$props$currentSo","singer","pic","mode","playModeTitle","showSongListWindow","onMouseMove","ref","onMouseDown","join","data-mode","AudioReducer","SongItem","handlePlay","handlePause","currentSongId","_this$props$songInfo","isTheSongPlaying","color","getPlayOrPauseButtonSvg","SongList","activeLyric","scrollTop","offsetTop","getTheActiveLyricOffset","backgroundImage","views_SongItem","MusicController","views_AudioController","views_SongList","actions","SearchItem","handleAppend","copyright","alert","isOdd","SearchList","ar","artist","privilege","dt","al","fl","totalCount","songCount","ceil","searchPage","searchData","songs","num","views_SearchItem","dataCleaning","SearchPage","fetchSearchResult","views_SearchList","views_SearchBar","showSearchResult","AlbumDetail","isAllDescriptionShowed","descriptionToggle","getPageSelectorInfo","trackCount","albumPageSize","albumCurrentPage","description","_this$props","start","dataOfShowedAlbums","tracks","classNameOfAlbumInfo","classNameOfDescription","fetchedData","artists","album","blurPicUrl","albumChangePage","ModalPortal","deleteDetailInfo","albumStatus","deleteItemDetail","views_AlbumDetail","showAlbumList","albumDetail","PlayListPage","views_TagSelector","views_PlayList","views_ModalPortal","NotFound","Menu","_this$props$searchBar","searchBar","searchPath","menus","text","playList","href","isCurrent","currentPathname","ownProps","Footer","App","BrowserRouter","basename","process","Fragment","components_Menu","Switch","Route","exact","component","components_Footer","audioController_views_MusicController","Boolean","hostname","match","initValue","loadSongListInLocalStorage","loadCurrentSongIndexInLocalStorage","reducerObj","action","cloneList","every","deleteSongIndex","listLength","splice","deleteSongInLocalStorage","justOneSong","isCurrentSong","isTheLastSong","beforeCurrentSong","updateCurrentSongIndex","updateCurrentLyric","song","LengthOfSongList","nextSongIndex","parseInt","reducer","combineReducers","middleware","thunkMiddleware","storeEnhancers","composeWithDevTools","applyMiddleware","apply","Store","createStore","app","es","store","src_components_App","getElementById","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.46645b36.chunk.js","sourcesContent":["const ajax = function(args, callback) {\r\n    let {method, url, data} = {...args}\r\n    let r = new XMLHttpRequest()\r\n    r.open(method, url, true)\r\n    // r.setRequestHeader('Content-Type', 'application/json')\r\n    r.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded')\r\n    r.onreadystatechange = () => {\r\n        if (r.readyState === 4) {\r\n            if ((r.status >= 200 && r.status < 300) || r.status === 304) {\r\n                callback(r)\r\n            } else {\r\n                console.log('error')\r\n            }\r\n        }\r\n    }\r\n    r.send(data)\r\n    return r\r\n}\r\n\r\nclass Api {\r\n    constructor() {\r\n        this.baseUrl = 'https://v1.itooi.cn/'\r\n    }\r\n\r\n    registerAbort(name, ajax) {\r\n        MusicApi.abortObj[name] = ajax.abort.bind(ajax)\r\n    }\r\n\r\n    abortRequest(abortName) {\r\n        let isRequesting = MusicApi.abortObj[abortName] !== undefined\r\n        if (isRequesting) {\r\n            MusicApi.abortObj[abortName]()\r\n        }\r\n    }\r\n\r\n    get(path, callback, abortName, isPathEqualToUrl) {\r\n        let method = 'GET'\r\n        let url = this.baseUrl + path\r\n        if (isPathEqualToUrl) {\r\n            url = path\r\n        }\r\n        let args = {\r\n            method,\r\n            url,\r\n            data: null,\r\n        }\r\n        this.abortRequest(abortName)\r\n        let request = ajax(args, callback)\r\n        this.registerAbort(abortName, request)\r\n    }\r\n}\r\n\r\nclass MusicApi extends Api {\r\n    searchResult(queryObj, callback) {\r\n        let {input, pageSize, page, company} = {...queryObj}\r\n        let path = `${company}/search?keyword=${input}&type=song&pageSize=${pageSize}&page=${(page - 1) * pageSize}`\r\n        // 如果需要源数据，加上 &format=1\r\n        let abortName = 'searchResult'\r\n        this.get(path, callback, abortName)\r\n    }\r\n\r\n    hotPlayList(queryObj, callback) {\r\n        let {category, pageSize, page, company} = {...queryObj}\r\n        let path = `${company}/songList/hot?categoryType=${category}&pageSize=${pageSize}&page=${(page - 1) * pageSize}`\r\n        let abortName = 'hotPlayList'\r\n        this.get(path, callback, abortName)\r\n    }\r\n\r\n    albumDetailInfo(queryObj, callback) {\r\n        let {albumId, company} = {...queryObj}\r\n        let path = `${company}/songList?id=${albumId}`\r\n        let abortName = 'albumDetail'\r\n        this.get(path, callback, abortName)\r\n    }\r\n\r\n    // getSong() {\r\n    //     let abortName = 'getSong'\r\n    //     this.get()\r\n    // }\r\n\r\n    getLyric(lrcUrl, callback) {\r\n        let abortName = 'getLyric'\r\n        this.get(lrcUrl, callback, abortName, true)\r\n    }\r\n\r\n    getImgInHomePage(callback) {\r\n        let url = 'https://v1.itooi.cn/netease/banner'\r\n        let abortName = 'getImgInHomePage'\r\n        this.get(url, callback, abortName, true)\r\n    }\r\n}\r\n\r\nMusicApi.abortObj = {}\r\n\r\nexport {\r\n    MusicApi,\r\n}","import * as homePage from './actionTypes'\r\nimport {MusicApi} from '../../api/api.js'\r\n\r\nexport const getImgInHomePage = (imgObj) => ({\r\n    type: homePage.GET_HOMEPAGE_IMG,\r\n    imgObj,\r\n})\r\n\r\nexport const changeTheIndexOfImg = (index) => ({\r\n    type: homePage.CHANGE_THE_INDEX_OF_IMG,\r\n    index,\r\n})\r\n\r\nexport const fetchImgInHomePage = () => {\r\n    return (dispatch) => {\r\n        let api = new MusicApi()\r\n        api.getImgInHomePage((r) => {\r\n            let imgObj = JSON.parse(r.response).data\r\n            dispatch(getImgInHomePage(imgObj))\r\n            console.log('轮播图信息', imgObj)\r\n        })\r\n    }\r\n}","import React, { Component } from \"react\"\r\nimport {connect} from 'react-redux'\r\nimport {fetchImgInHomePage, changeTheIndexOfImg} from '../actions'\r\n\r\nclass ImageSlider extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.handlerNextImage = this.handlerNextImage.bind(this)\r\n        this.autoPlay = this.autoPlay.bind(this)\r\n        this.stopAutoPlay = this.stopAutoPlay.bind(this)\r\n        this.handlerClickPoint = this.handlerClickPoint.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.images.length === 0) {\r\n            this.props.fetchImgInHomePage()\r\n        }\r\n        this.autoPlay()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.stopAutoPlay()\r\n    }\r\n\r\n    playNextImage(step) {\r\n        let lengthOfImages = this.props.images.length\r\n        let indexOfNextImg = (this.props.indexOfCurrentImg + step + lengthOfImages) % lengthOfImages\r\n        this.props.changeTheIndexOfImg(indexOfNextImg)\r\n    }\r\n\r\n    handlerNextImage(event) {\r\n        let step = Number(event.target.dataset.step)\r\n        this.playNextImage(step)\r\n    }\r\n\r\n    autoPlay() {\r\n        this.timerID = setInterval(() => {\r\n            this.playNextImage(1)\r\n        }, 5000)\r\n    }\r\n\r\n    stopAutoPlay() {\r\n        clearInterval(this.timerID)\r\n    }\r\n\r\n    getClassNameOfPoints(index) {\r\n        return index === this.props.indexOfCurrentImg? 'slide-point active-point' : 'slide-point'\r\n    }\r\n\r\n    handlerClickPoint(event) {\r\n        let index = Number(event.target.dataset.index)\r\n        this.props.changeTheIndexOfImg(index)\r\n    }\r\n\r\n    render() {\r\n        let widthOfImg = 730\r\n        let heightOfSlider = 336\r\n        let images = this.props.images || []\r\n        let widthOfSlider = images.length * widthOfImg\r\n        let offset = -(this.props.indexOfCurrentImg % widthOfSlider) * widthOfImg || 0\r\n        return(\r\n            <div className='image-slider' onMouseOver={this.stopAutoPlay} onMouseOut={this.autoPlay}>\r\n                <button className='slide-button slide-left vertical-center' onClick={this.handlerNextImage} data-step=\"-1\">&lt;</button>\r\n                {/*<div className='image-slider-container' style={{width: widthOfSlider, height: heightOfSlider, left: offset}}>*/}\r\n                <div className='image-slider-container' style={{width: widthOfSlider, height: heightOfSlider, transform: `translate3d(${offset}px, 0px, 0px)`}}>\r\n                    {\r\n                        images.map((value, index) => {\r\n                            return (\r\n                                <img key={index} src={value.picUrl} alt=\"轮播图\" />\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                <button className='slide-button slide-right vertical-center' onClick={this.handlerNextImage} data-step=\"1\">&gt;</button>\r\n                <div className='slide-point-container'>\r\n                    {\r\n                        images.map((value, index) => {\r\n                            return (\r\n                                <span className={this.getClassNameOfPoints(index)} key={index} data-index={index} onClick={this.handlerClickPoint}> </span>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    let theState = state.homePageReducer\r\n    return {\r\n        images: theState.images,\r\n        indexOfCurrentImg: theState.indexOfCurrentImg,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchImgInHomePage: () => {\r\n            dispatch(fetchImgInHomePage())\r\n        },\r\n        changeTheIndexOfImg: (index) => {\r\n            dispatch(changeTheIndexOfImg(index))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ImageSlider)","export const GET_HOMEPAGE_IMG = 'HOMEPAGE/GET_IMG'\r\nexport const CHANGE_THE_INDEX_OF_IMG = 'HOMEPAGE/CHANGE_THE_INDEX_OF_IMG'","import React, { Component } from 'react'\nimport ImageSlider from \"./ImageSlider\"\nimport './Home.css'\n\nclass Home extends Component {\n    render() {\n        return (\n            <div>\n                <ImageSlider />\n            </div>\n        )\n    }\n}\n\nexport default Home\n","import * as playList from './actionTypes.js'\r\nimport {MusicApi} from '../../api/api.js'\r\n\r\n// 热门歌单标签切换\r\nexport const playListTagChange = (tagName) => ({\r\n    type: playList.PLAYLIST_TAG_CHANGE,\r\n    tagName\r\n    })\r\n\r\n// 开始加载歌单具体信息\r\nexport const loadItemDetailStarted = () => ({\r\n    type: playList.LOAD_ITEM_DETAIL_STARTED,\r\n})\r\n\r\n// 加载歌单具体信息成功\r\nexport const loadItemDetailSuccess = (albumDetailInfo) => ({\r\n    type: playList.LOAD_ITEM_DETAIL_SUCCESS,\r\n    albumDetailInfo\r\n})\r\n\r\n// 删除歌单具体信息，即初始化模态弹窗\r\nexport const deleteItemDetail = () => {\r\n    MusicApi.abortObj.albumDetail()\r\n    return {\r\n    type: playList.DELETE_ITEM_DETAIL,\r\n    }\r\n}\r\n\r\n// 热门歌单列表开始加载\r\nexport const playListLoadStarted = () => ({\r\n    type: playList.PLAYLIST_LOAD_STARTED,\r\n})\r\n\r\n// 热门歌单列表加载成功\r\nexport const playListLoadSuccess = (playListResult) => ({\r\n    type: playList.PLAYLIST_LOAD_SUCCESS,\r\n    playListResult,\r\n})\r\n\r\n// 热门歌单列表加载成功\r\nexport const playListLoadFailure = () => ({\r\n    type: playList.PLAYLIST_LOAD_FAILURE,\r\n})\r\n\r\nexport const playListPageChangePage = (page) => ({\r\n    type: playList.PLAYLIST_PAGE_CHANGE,\r\n    page,\r\n})\r\n\r\nexport const albumChangePage = (page) => ({\r\n    type: playList.ALBUM_PAGE_CHANGE,\r\n    page,\r\n})\r\n\r\n// 异步加载热门歌单列表\r\nexport const fetchHotPlayList = (category=\"全部\", page=1, pageSize=60, company='netease') => {\r\n    return (dispatch) => {\r\n        let queryObj = {\r\n            category,\r\n            pageSize,\r\n            page,\r\n            company,\r\n        }\r\n        dispatch(playListLoadStarted())\r\n        let api = new MusicApi()\r\n        api.hotPlayList(queryObj, (r) => {\r\n            let playListResult = JSON.parse(r.response)\r\n            console.log('加载热门歌单列表完成', playListResult)\r\n            if (playListResult.code === 200) {\r\n                dispatch(playListLoadSuccess(playListResult.data))\r\n            } else {\r\n                dispatch(playListLoadFailure())\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n// 加载歌单具体信息\r\nexport const fetchAlbumDetailInfo = (albumId, company='netease') => {\r\n    console.log('albumId', albumId)\r\n    return (dispatch) => {\r\n        let args = {\r\n            albumId,\r\n            company,\r\n        }\r\n        dispatch(loadItemDetailStarted())\r\n        let api = new MusicApi()\r\n        api.albumDetailInfo(args, (r) => {\r\n            let playListResult = JSON.parse(r.response)\r\n            console.log('加载歌单完成', playListResult)\r\n            if (playListResult.code === 200) {\r\n                dispatch(loadItemDetailSuccess(playListResult))\r\n            } else {\r\n                dispatch(playListLoadFailure())\r\n            }\r\n        })\r\n    }\r\n}","export const PLAYLIST_TAG_CHANGE = \"PAGE/PLAYLIST_TAG_CHANGE\"\r\n\r\nexport const LOAD_ITEM_DETAIL_STARTED = \"PAGE/LOAD_ITEM_DETAIL_STARTED\"\r\n\r\nexport const LOAD_ITEM_DETAIL_SUCCESS = \"PAGE/LOAD_ITEM_DETAIL_SUCCESS\"\r\n\r\nexport const DELETE_ITEM_DETAIL = 'PAGE/DELETE_ITEM_DETAIL'\r\n\r\nexport const PLAYLIST_LOAD_STARTED = 'PAGE/PLAYLIST_LOAD_STARTED'\r\n\r\nexport const PLAYLIST_LOAD_SUCCESS = 'PAGE/LIST_LOAD_SUCCESS'\r\n\r\nexport const PLAYLIST_LOAD_FAILURE = 'PAGE/PLAYLIST_LOAD_FAILURE'\r\n\r\nexport const PLAYLIST_PAGE_CHANGE = 'PAGE/PLAYLIST_PAGE_CHANGE'\r\n\r\nexport const ALBUM_PAGE_CHANGE = 'PAGE/ALBUM_PAGE_CHANGE'","export const timeFormat = function(seconds) {\r\n    if (!seconds) {\r\n        return '00:00'\r\n    }\r\n    let m = String(Math.floor(seconds / 60))\r\n    let s = String(Math.floor(seconds % 60))\r\n    if (s.length === 1) {\r\n        s = \"0\" + s\r\n    }\r\n    if (m.length === 1) {\r\n        m = \"0\" + m\r\n    }\r\n    return `${m}:${s}`\r\n}\r\n\r\nexport const timeDeFormat = (timeInfo) => {\r\n    let timeList = timeInfo.split(':')\r\n    let length = timeList.length\r\n    let time = 0\r\n    timeList.map((value, index) => {\r\n        let exp = length - index - 1\r\n        time += value * 60 ** exp\r\n        return 0\r\n    })\r\n    return time\r\n}\r\n\r\nexport const loadCurrentSongIndexInLocalStorage = () => {\r\n    let currentSongIndex = JSON.parse(localStorage.getItem('currentSongIndex'))\r\n    if (currentSongIndex === null) {\r\n        currentSongIndex = -1\r\n    }\r\n    return currentSongIndex\r\n}\r\n\r\nexport const saveCurrentSongIndexInLocalStorage = (index) => {\r\n    localStorage.setItem('currentSongIndex', JSON.stringify(index))\r\n}\r\n\r\nexport const loadSongListInLocalStorage = () => {\r\n    let songList = JSON.parse(localStorage.getItem('songList'))\r\n    if (songList === null) {\r\n        songList = []\r\n    }\r\n    return songList\r\n}\r\n\r\nexport const saveSongToLocalStorage = (songInfo) => {\r\n    let songList = JSON.parse(localStorage.getItem('songList'))\r\n    if (songList === null) {\r\n        songList = []\r\n    }\r\n    songList.push(songInfo)\r\n    localStorage.setItem('songList', JSON.stringify(songList))\r\n}\r\n\r\nexport const deleteSongInLocalStorage = (songIndex) => {\r\n    let songList = JSON.parse(localStorage.getItem('songList'))\r\n    songList.splice(songIndex, 1)\r\n    localStorage.setItem('songList', JSON.stringify(songList))\r\n}\r\n\r\nexport const getCurrentSongInfo = (theState) => {\r\n    let songList = theState.songList\r\n    let currentSongIndex = theState.currentSongExtraInfo.currentSongIndex\r\n    let currentSongInfo = {}\r\n    if (currentSongIndex === -1) {\r\n        currentSongInfo = theState.initSongInfo\r\n    } else {\r\n        currentSongInfo = songList[currentSongIndex]\r\n    }\r\n    return currentSongInfo\r\n}\r\n\r\nconst clearTimeRepeat = (lyricList, repeatIndex, lyricBeforeTranslated) => {\r\n    let result = lyricList\r\n    let element = result[repeatIndex].lyric\r\n    if (element === '...') {\r\n        result[repeatIndex].lyric = lyricBeforeTranslated\r\n    } else {\r\n        result[repeatIndex].translatedLyric = element\r\n        result[repeatIndex].lyric = lyricBeforeTranslated\r\n    }\r\n}\r\n\r\nconst parseLyric = (lyric) => {\r\n    let oneLyricInfo = lyric\r\n    let indexOfTime = oneLyricInfo.indexOf(']')\r\n    let oneLyric = oneLyricInfo.slice(indexOfTime + 1)\r\n    let timeInfo = oneLyricInfo.slice(1, indexOfTime)\r\n    let time = timeDeFormat(timeInfo)\r\n    return {\r\n        oneLyric,\r\n        time\r\n    }\r\n}\r\n\r\nexport const parseLyricArray = (lyricsArray) => {\r\n    let result = []\r\n    for (let i = 0; i < lyricsArray.length; i++) {\r\n        let oneLyricInfo = lyricsArray[i]\r\n        let {oneLyric, time} = parseLyric(oneLyricInfo)\r\n        let repeatIndex = result.findIndex((theLyric) => {\r\n            return theLyric.time === time\r\n        })\r\n        let isTimeRepeat = repeatIndex !== -1\r\n        if (isTimeRepeat) {\r\n            clearTimeRepeat(result, repeatIndex, oneLyric)\r\n        } else {\r\n            if (isNaN(time)) {\r\n                continue\r\n            }\r\n            if (oneLyric === '') {\r\n                oneLyric = '...'\r\n            }\r\n            let lyricItem = {\r\n                time,\r\n                lyric: oneLyric,\r\n                translatedLyric: null,\r\n            }\r\n            result.push((lyricItem))\r\n        }\r\n    }\r\n    result.sort((prev, current) => prev.time - current.time)\r\n    return result\r\n}\r\n\r\nexport const argsFromQuery = (query) => {\r\n    if (query[0] === '?') {\r\n        query = query.slice(1)\r\n    }\r\n    let o = {}\r\n    if (query.length === 0) {\r\n        return o\r\n    }\r\n    query.split('&').forEach(e => {\r\n        let [k, v] = e.split('=')\r\n        o[k] = v\r\n    })\r\n    return o\r\n}\r\n\r\nexport const changeImgResolution = (url, pixel) => {\r\n    let list = url.split('?')\r\n    return `${list[0]}?param=${pixel}y${pixel}`\r\n}","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {fetchAlbumDetailInfo} from '../actions'\r\nimport {changeImgResolution} from '../../../utils'\r\n\r\nclass PlayListItem extends Component {\r\n\r\n    render() {\r\n        let {id, name, coverImgUrl} = {...this.props.itemInfo}\r\n        let coverThumbImgUrl = changeImgResolution(coverImgUrl, 400)\r\n        return (\r\n            <div className=\"album-container\">\r\n                <div className=\"album-img\" data-id={id} onClick={this.props.fetchAlbumDetailInfo.bind(this, id)}>\r\n                    <img src={coverThumbImgUrl} alt=\"歌单封面\"/>\r\n                </div>\r\n                <div className=\"album-info\" title={name}>\r\n                    <span>{name}</span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchAlbumDetailInfo: (AlbumId) => {\r\n            dispatch(fetchAlbumDetailInfo(AlbumId))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(PlayListItem)","import React, {Component} from 'react'\r\nimport './common.css'\r\n\r\nclass PageSelector extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.handleChangePage = this.handleChangePage.bind(this)\r\n        this.isPreviousAndNextCanBeClicked = this.isPreviousAndNextCanBeClicked.bind(this)\r\n    }\r\n\r\n    static getPageSelector (endPage, currentPage, totalTagCount) {\r\n        if (endPage <= totalTagCount) {\r\n            let result = []\r\n            for (let i = 1; i <= endPage; i++) {\r\n                result.push(i)\r\n            }\r\n            return result\r\n        }\r\n        let list = []\r\n        let lastList = []\r\n        let startList = []\r\n        let changingTagCount = totalTagCount - 3\r\n        let start = currentPage - changingTagCount/ 2\r\n        let end = currentPage + changingTagCount / 2\r\n        for (let i = start; i <= end; i++) {\r\n            if (i <= 1) {\r\n                lastList.push(changingTagCount + i + 1)\r\n            } else if (i >= endPage) {\r\n                startList.push(i - changingTagCount - 1)\r\n            } else {\r\n                list.push(i)\r\n            }\r\n        }\r\n        let result = [...startList,...list,...lastList]\r\n        if (result[0] !== 2) {\r\n            result.unshift('...')\r\n        }\r\n        if (result[result.length - 1] < endPage - 1) {\r\n            result.push('...')\r\n        }\r\n        result = [1, ...result, endPage]\r\n        return result\r\n    }\r\n\r\n    showMiddleTag() {\r\n        let {totalPage, currentPage} = {...this.props.selectorInfo}\r\n        if (totalPage === 0) {\r\n            return\r\n        }\r\n        let pageList = PageSelector.getPageSelector(totalPage, currentPage, 9)\r\n        return pageList.map((page, index) => {\r\n            if (page === '...') {\r\n                return (\r\n                    <span className=\"page-selector-ellipsis\" key={index}>...</span>\r\n                )\r\n            } else if (page === currentPage) {\r\n                return (\r\n                    <button className=\"page-selector-current page-selector-tag page-btn\" key={index}>{page}</button>\r\n                )\r\n            } else {\r\n                return (\r\n                    <button className=\"page-selector-tag page-btn\" key={index} onClick={this.handleChangePage(page)}>{page}</button>\r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n    handleChangePage(page) {\r\n        return () => {\r\n            this.props.changePage(page)\r\n            if (this.props.pushHistory) {\r\n                this.props.pushHistory(page)\r\n            }\r\n        }\r\n    }\r\n\r\n    isPreviousAndNextCanBeClicked() {\r\n        let {totalPage, currentPage} = {...this.props.selectorInfo}\r\n        let previousCanNotBeClicked = false\r\n        let nextCanNotBeClicked = false\r\n        if (totalPage === 1) {\r\n            previousCanNotBeClicked = true\r\n            nextCanNotBeClicked = true\r\n        }\r\n        if (currentPage === 1) {\r\n            previousCanNotBeClicked = true\r\n        } else if (currentPage === totalPage) {\r\n            nextCanNotBeClicked = true\r\n        }\r\n        let previousClassName = previousCanNotBeClicked ? 'previous-ban-click' : 'previous-can-click'\r\n        let nextClassName = nextCanNotBeClicked ? 'next-ban-click' : 'next-can-click'\r\n        return {\r\n            previousCanNotBeClicked,\r\n            nextCanNotBeClicked,\r\n            previousClassName,\r\n            nextClassName,\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let {currentPage} = {...this.props.selectorInfo}\r\n        let previousAndNext = this.isPreviousAndNextCanBeClicked()\r\n        let {previousCanNotBeClicked, nextCanNotBeClicked, previousClassName, nextClassName} = {...previousAndNext}\r\n        return (\r\n            <div className=\"page-selector\">\r\n                <button className={`${previousClassName} page-btn`} disabled={previousCanNotBeClicked} onClick={this.handleChangePage(currentPage - 1)}>&lt;</button>\r\n                {this.showMiddleTag()}\r\n                <button className={`${nextClassName} page-btn`} disabled={nextCanNotBeClicked} onClick={this.handleChangePage(currentPage + 1)}>&gt;</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PageSelector","import React from 'react'\r\nimport ReactDOM from \"react-dom\"\r\n\r\nconst Loading = () => {\r\n    let container = document.querySelector('#loading-container')\r\n    let icon = (\r\n        <div className=\"loading-container\">\r\n            <svg className=\"load\" viewBox=\"25 25 50 50\">\r\n                <circle className=\"loading\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\"></circle>\r\n            </svg>\r\n        </div>\r\n    )\r\n\r\n    return ReactDOM.createPortal(icon, container)\r\n}\r\n\r\nexport default Loading","import React, { Component } from 'react'\r\nimport * as Status from '../status'\r\nimport {connect} from 'react-redux'\r\nimport {fetchHotPlayList, playListTagChange, playListPageChangePage} from '../actions'\r\nimport {withRouter} from 'react-router-dom'\r\nimport PlayListItem from './PlayListItem'\r\nimport {argsFromQuery} from '../../../utils'\r\nimport PageSelector from '../../common/PageSelector'\r\nimport Loading from \"../../common/Loading\"\r\n\r\nclass PlayList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.pushHistory = this.pushHistory.bind(this)\r\n        this.getSelectorInfo = this.getSelectorInfo.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.status !== 'success') {\r\n            let params = argsFromQuery(this.props.location.search)\r\n            let activeTag = params.cat\r\n            let page = params.page\r\n            this.props.fetchHotPlayList(activeTag, page)\r\n            this.props.playListTagChange(decodeURI(activeTag))\r\n            this.props.changePage(page)\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.location !== prevProps.location) {\r\n            let params = argsFromQuery(this.props.location.search)\r\n            let activeTag = params.cat\r\n            let page = params.page\r\n            this.props.fetchHotPlayList(activeTag, page)\r\n        }\r\n    }\r\n\r\n    pushHistory(newPage) {\r\n        this.props.history.push(`playlist?cat=${this.props.activeTag}&page=${newPage}`)\r\n    }\r\n\r\n    getSelectorInfo() {\r\n        return {\r\n            totalPage: this.props.totalPage,\r\n            currentPage: Number(this.props.currentPage),\r\n        }\r\n    }\r\n\r\n    showHotPlayList() {\r\n        switch (this.props.status) {\r\n            case Status.LOADING: {\r\n                return (\r\n                    <Loading />\r\n                )\r\n            }\r\n            case Status.SUCCESS: {\r\n                let playListResult = this.props.playListResult\r\n                return (\r\n                    <div className=\"playlist-result\">\r\n                        {playListResult.map((value, index) => {\r\n                            return <PlayListItem key={index} itemInfo={value} />\r\n                        })}\r\n                        <PageSelector selectorInfo={this.getSelectorInfo()} changePage={this.props.changePage} pushHistory={this.pushHistory}/>\r\n                    </div>\r\n                )\r\n            }\r\n            case Status.FAILURE: {\r\n                return (\r\n                    <div className=\"failed-container\">热门歌单加载失败</div>\r\n                )\r\n            }\r\n            default: {\r\n                return (\r\n                    <div>PlayList</div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.showHotPlayList()\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateTopProps = (state) => {\r\n    let theState = state.PlayListReducer\r\n    return {\r\n        status: theState.playListStatus,\r\n        playListResult: theState.playListResult,\r\n        activeTag: theState.activeTag,\r\n        currentPage: theState.currentPage,\r\n        pageSize: theState.pageSize,\r\n        totalPage: theState.totalPage,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchHotPlayList: (category, page) => {\r\n            dispatch(fetchHotPlayList(category, page))\r\n        },\r\n        playListTagChange: (tagName) => {\r\n            dispatch(playListTagChange(tagName))\r\n        },\r\n        changePage: (page) => {\r\n            dispatch(playListPageChangePage(page))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateTopProps, mapDispatchToProps)(withRouter(PlayList))","export const INIT = ''\r\nexport const LOADING = 'loading'\r\nexport const SUCCESS = 'success'\r\nexport const FAILURE = 'failure'","import React, { Component } from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nimport {connect} from 'react-redux'\r\nimport {playListTagChange} from \"../actions\"\r\n\r\nclass TagItem extends Component {\r\n\r\n    tagChange(value) {\r\n        this.props.playListTagChange(value)\r\n        this.props.toggleShow()\r\n    }\r\n\r\n    getClassName(value) {\r\n        return this.props.activeTag === value ? \"playlist-tag active-tag\" : \"playlist-tag\"\r\n    }\r\n\r\n    getTagTable(i) {\r\n        let rowData = this.props.theTagTabs.slice(i, i + 6)\r\n        return (\r\n            <tbody key={i}>\r\n                <tr>\r\n                    {rowData.map((value, index) => {\r\n                        return (\r\n                            <td key={index} className={this.getClassName(value)}>\r\n                                <Link  to={`/playlist?cat=${value}`} onClick={this.tagChange.bind(this, value)}>{value}</Link>\r\n                            </td>\r\n                        )\r\n                    })}\r\n                </tr>\r\n            </tbody>\r\n         )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"playlist-tag-tabs\">\r\n                {this.props.theTagTabs.map((value, index) => {\r\n                    return (\r\n                            <Link key={index} className={this.getClassName(value)} to={`/playlist?cat=${value}&page=1`} onClick={this.tagChange.bind(this, value)}>{value}</Link>\r\n                    )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateTopProps = (state) => {\r\n    let theState = state.PlayListReducer\r\n    return {\r\n        activeTag: theState.activeTag\r\n    }\r\n}\r\n\r\nconst mapDispatchTopProps = (dispatch) => {\r\n    return {\r\n        playListTagChange: (tagName) => {\r\n            dispatch(playListTagChange(tagName))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateTopProps, mapDispatchTopProps)(TagItem)","import React, { Component } from 'react'\r\nimport {playListTagChange} from '../actions'\r\nimport {connect} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport TagItem from './TagItem'\r\nimport {getSelectIcon} from './icon'\r\n\r\nclass TagSelector extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.mainTags = ['语种', '风格', '场景', '情感', '主题']\r\n        this.styleTags = ['流行', '摇滚', '民谣', '电子', '舞曲', '说唱', '轻音乐', '爵士', '乡村', 'R&B/Soul', '古典', '民族', '英伦', '金属', '朋克', '蓝调', '雷鬼', '拉丁', '古风', 'Bossa Nova']\r\n        this.languageTags = ['华语', '欧美', '日语', '韩语', '粤语', '小语种']\r\n        this.senceTags = ['清晨', '夜晚', '学习', '工作', '午休', '下午茶', '地铁', '驾车', '运动', '旅行', '散步', '酒吧']\r\n        this.emotionTags = ['怀旧', '清新', '浪漫', '性感', '伤感', '治愈', '放松', '孤独', '感动', '兴奋', '快乐', '安静', '思念']\r\n        this.themeTags = ['影视原声', 'ACG', '儿童', '校园', '游戏', '70后', '80后', '90后', '网络歌曲', 'KTV', '经典', '翻唱', '吉他', '钢琴', '器乐', '榜单', '00后']\r\n        this.mapTagToMain = {\r\n            '语种': this.languageTags,\r\n            '风格': this.styleTags,\r\n            '场景': this.senceTags,\r\n            '情感': this.emotionTags,\r\n            '主题': this.themeTags\r\n        }\r\n        this.state = {\r\n            show: false\r\n        }\r\n\r\n        this.toggleShow = this.toggleShow.bind(this)\r\n        this.hide = this.hide.bind(this)\r\n        this.clickOnBlankArea = this.clickOnBlankArea.bind(this)\r\n        document.onclick = this.hide\r\n    }\r\n\r\n    tagChange(value) {\r\n        this.props.playListTagChange(value)\r\n        this.toggleShow()\r\n    }\r\n\r\n    clickOnBlankArea(e) {\r\n        e.nativeEvent.stopImmediatePropagation()\r\n    }\r\n\r\n    toggleShow(e) {\r\n        this.setState((state) => ({\r\n            show: !state.show,\r\n        }))\r\n        if (e !== undefined) {\r\n            e.nativeEvent.stopImmediatePropagation()\r\n        }\r\n    }\r\n\r\n    hide() {\r\n        this.setState({\r\n            show: false\r\n        })\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.setState = () => {\r\n            return false\r\n        }\r\n    //  防止组件卸载的时候调用 setState 导致 react 报错\r\n    }\r\n\r\n    render() {\r\n        let classNameOfIcon = this.state.show ? \"select-icon rotated\" : \"select-icon\"\r\n        let classNameOfTagsContainer = this.state.show ? \"playlist-tags-container\" : \"playlist-tags-container hidden\"\r\n        let classNameOfMainTag = this.props.activeTag === '全部' ? \"playlist-main-tag active-tag\" : \"playlist-main-tag\"\r\n        return (\r\n            <div className=\"playlist-tags\">\r\n                <span className=\"active-tag-name\" >{this.props.activeTag}</span>\r\n                <span className=\"select-tag-button\" onClick={this.toggleShow}>\r\n                    {this.state.show ? '收起 ' : '展开 '}\r\n                    {getSelectIcon(classNameOfIcon)}\r\n                </span>\r\n                <div className={classNameOfTagsContainer} onClick={this.clickOnBlankArea}>\r\n                    <Link className={classNameOfMainTag}\r\n                          to={{pathname: 'playlist', search: '?cat=全部&page=1'}}\r\n                          onClick={this.tagChange.bind(this, '全部')}\r\n                    >\r\n                        全部\r\n                    </Link>\r\n                    {this.mainTags.map((value, index) => {\r\n                        let theTagTabs = this.mapTagToMain[value]\r\n                        return(\r\n                            <div key={index} className=\"playlist-tag-container\">\r\n                                <div className=\"playlist-tag-class\">{value}</div>\r\n                                <TagItem theTagTabs={theTagTabs} toggleShow={this.toggleShow}/>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateTopProps = (state) => {\r\n    let theState = state.PlayListReducer\r\n    return {\r\n        activeTag: theState.activeTag\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        playListTagChange: (tagName) => {\r\n            dispatch(playListTagChange(tagName))\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateTopProps, mapDispatchToProps)(TagSelector)","import React from \"react\"\r\n\r\nconst getSelectIcon = (className) => {\r\n    return (\r\n        <svg className={className} viewBox=\"0 0 1024 1024\">\r\n            <path d=\"M127.5 330.9l0.7-0.7c12.3-12.3 32.4-12.3 44.7 0l339.9 339.9L853 330c12.5-12.5 32.9-12.5 45.4 0s12.5 32.9 0 45.4L536 737.8s-0.1 0.1-0.1 0.2l-0.7 0.7c-12.3 12.3-32.4 12.3-44.7 0l-363-363c-12.3-12.4-12.3-32.5 0-44.8z\">\r\n            </path>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport {\r\n    getSelectIcon,\r\n}","import React from \"react\"\r\n\r\nconst loadingIcon = (\r\n    <svg className=\"load\" viewBox=\"25 25 50 50\">\r\n        <circle className=\"loading\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\"/>\r\n    </svg>\r\n)\r\n\r\nexport {\r\n    loadingIcon,\r\n}","import * as search from './actionTypes.js'\r\nimport {MusicApi} from '../../api/api.js'\r\n\r\n// 搜索框输入改变\r\nexport const inputChange = (input) => ({\r\n    type: search.INPUT_CHANGE,\r\n    input,\r\n})\r\n\r\n// 开始搜索\r\nexport const searchStarted = (data) => ({\r\n    type: search.SEARCH_STARTED,\r\n    data,\r\n})\r\n\r\n// 搜索成功\r\nexport const searchSuccess = (result, searchContent, searchPage) => ({\r\n    type: search.SEARCH_SUCCESS,\r\n    result,\r\n    searchContent,\r\n    searchPage,\r\n})\r\n\r\n// 搜索失败\r\nexport const searchFailure = (error) => ({\r\n    type: search.SEARCH_FAILURE,\r\n    error,\r\n})\r\n\r\nexport const changePage = (page) => ({\r\n    type: search.CHANGE_PAGE,\r\n    page\r\n})\r\n\r\n// 拿到搜索数据\r\nexport const fetchSearchResult = (input, page=1, pageSize=20, company='netease') => {\r\n    return (dispatch) => {\r\n        let queryObj = {\r\n            input,\r\n            pageSize,\r\n            page,\r\n            company,\r\n        }\r\n        dispatch(searchStarted(input))\r\n        let api = new MusicApi()\r\n        api.searchResult(queryObj, (r) => {\r\n            let searchResult = JSON.parse(r.response)\r\n            console.log('搜索完成', searchResult)\r\n            if (searchResult.code === 200) {\r\n                dispatch(searchSuccess(searchResult, queryObj.input, page))\r\n            } else {\r\n                dispatch(searchFailure(searchResult))\r\n            }\r\n        })\r\n    }\r\n}","export const INPUT_CHANGE = 'NAV/INPUT_CHANGE'\r\n\r\nexport const SEARCH_STARTED = 'NAV/SEARCH_STARTED'\r\n\r\nexport const SEARCH_SUCCESS = 'NAV/SEARCH_SUCCESS'\r\n\r\nexport const SEARCH_FAILURE = 'NAV/SEARCH_FAILURE'\r\n\r\nexport const CHANGE_PAGE = 'PAGE/CHANGE_PAGE'","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport  {inputChange} from '../actions'\r\nimport {withRouter} from \"react-router-dom\"\r\nimport {argsFromQuery} from \"../../../utils\"\r\n\r\nclass SearchBar extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.fillSearchContentInSearchBar()\r\n\r\n        this.onSearch = this.onSearch.bind(this)\r\n        this.onChange = this.onChange.bind(this)\r\n        this.onKeyPress = this.onKeyPress.bind(this)\r\n    }\r\n\r\n    parseUrlGetSearchContent(location) {\r\n        let searchObj = argsFromQuery(location.search)\r\n        let searchContent = decodeURI(searchObj['s'])\r\n        if (searchContent !== undefined) {\r\n            return searchContent\r\n        }\r\n    }\r\n\r\n    fillSearchContentInSearchBar() {\r\n        this.value = this.parseUrlGetSearchContent(this.props.location)\r\n        if (this.value === 'undefined') {\r\n            this.value = ''\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.location.search !== this.props.location.search) {\r\n            this.value = this.parseUrlGetSearchContent(this.props.location)\r\n        }\r\n    }\r\n\r\n    onChange(event) {\r\n        this.value = event.target.value\r\n        this.props.inputChange(this.value)\r\n    }\r\n\r\n    onSearch() {\r\n        let hasInputted = this.props.searchInput === undefined || this.props.searchInput === ''\r\n        if (hasInputted) {\r\n            return 0\r\n        }\r\n        let isEqualToOldSearchContent = this.props.searchContent !== this.props.searchInput\r\n        let isAtSearchPage = window.location.pathname !== '/search'\r\n        if (isEqualToOldSearchContent || isAtSearchPage) {\r\n            let urlObj = this.getSearchUrl()\r\n            this.props.history.push(urlObj)\r\n        }\r\n    }\r\n\r\n    getSearchUrl() {\r\n        console.log('this.props.searchInput', this.props.searchInput)\r\n        let name = this.props.searchInput.trim()\r\n        if (name === undefined) {\r\n            name = ''\r\n        }\r\n        let page = 1\r\n        return {\r\n            pathname: '/search',\r\n            search: `?s=${name}&page=${page}`,\r\n        }\r\n    }\r\n\r\n    onKeyPress(event) {\r\n        if (event.key === 'Enter') {\r\n            this.onSearch()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className={(this.props.searchResult === undefined) ? \"search-bar-container before-searched\" : \"search-bar-container\"}>\r\n                <input type=\"text\" className=\"search-bar-input\" placeholder=\"搜索音乐、MV、歌单、用户\" onChange={this.onChange} onKeyDown={this.onKeyPress} value={this.value || ''}/>\r\n                <button className=\"search-bar-button\" onClick={this.onSearch}>搜索</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateTopProps = (state) => {\r\n    let theState = state.SearchBarReducer\r\n    return {\r\n        searchInput: theState.searchInput,\r\n        searchContent: theState.searchContent,\r\n        searchResult: theState.searchResult,\r\n        status: theState.status,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        inputChange:  (input) => {\r\n            dispatch(inputChange(input))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateTopProps, mapDispatchToProps)(withRouter(SearchBar))","import * as audioController from './actionTypes'\r\nimport {MusicApi} from '../../api/api.js'\r\nimport {parseLyricArray} from '../../utils'\r\n\r\nexport  const toggleSongListWindow = () => {\r\n    return {\r\n        type: audioController.TOGGLE_SONG_LIST_WINDOW,\r\n    }\r\n}\r\n\r\nexport const changeAudioStatus = (status) => {\r\n    return {\r\n        type: audioController.CHANGE_AUDIO_STATUS,\r\n        status\r\n    }\r\n}\r\n\r\nexport const changePlayMode = (modeType) => {\r\n    return {\r\n        type: audioController.CHANGE_PLAY_MODE,\r\n        modeType,\r\n    }\r\n}\r\n\r\nexport const saveCurrentLyricIndex = (currentLyricIndex) => {\r\n    return {\r\n        type: audioController.GET_CURRENT_INDEX,\r\n        currentLyricIndex,\r\n    }\r\n}\r\n\r\nexport const appendTheSong = (songInfo) => {\r\n    return {\r\n        type: audioController.APPEND_THE_SONG,\r\n        songInfo,\r\n    }\r\n}\r\n\r\nexport const deleteTheSong = (songIndex) => {\r\n    return {\r\n        type: audioController.DELETE_THE_SONG,\r\n        songIndex,\r\n    }\r\n}\r\n\r\nexport const playTheSongInPage = (songInfo) => {\r\n    return {\r\n        type: audioController.PLAY_THE_SONG_IN_PAGE,\r\n        songInfo,\r\n    }\r\n}\r\n\r\nexport const playTheSongInList = (songIndex) => {\r\n    return {\r\n        type: audioController.PLAY_THE_SONG_IN_LIST,\r\n        songIndex,\r\n    }\r\n}\r\n\r\nexport const playNextSong = (modeType, loopStep=1) => {\r\n    return {\r\n        type: audioController.PLAY_NEXT_SONG,\r\n        modeType,\r\n        loopStep,\r\n    }\r\n}\r\n\r\n// export const getSong = (songUrl) => ({\r\n//     type: audioController.GET_SONG,\r\n//     songUrl,\r\n// })\r\n\r\nexport const getLyric = (lyric) => {\r\n    return {\r\n        type: audioController.GET_LYRIC,\r\n        lyric,\r\n    }\r\n}\r\n\r\n// export const getSongUrlFromNet = (url) => {\r\n//     return (dispatch) => {\r\n//         let api = new MusicApi()\r\n//         api.getSong(url, (r) => {\r\n//             let songUrl = JSON.parse(r.response).data\r\n//             dispatch(getSong(songUrl))\r\n//         })\r\n//     }\r\n// }\r\n\r\nexport const getLyricFromNet = (lrcUrl) => {\r\n    return (dispatch) => {\r\n        let api = new MusicApi()\r\n        api.getLyric(lrcUrl, (r) => {\r\n            let l = r.response\r\n            console.log(lrcUrl)\r\n            let lyricList = l.split('\\n').slice(0, -1)\r\n            if (lyricList.length === 0) {\r\n                lyricList = [l]\r\n            }\r\n            let result = parseLyricArray(lyricList)\r\n            dispatch(getLyric(result))\r\n        })\r\n    }\r\n}","export const CHANGE_AUDIO_STATUS = 'BAR/CHANGE_AUDIO_STATUS'\r\n\r\nexport const APPEND_THE_SONG = 'PAGE/APPEND_THE_SONG'\r\n\r\nexport const DELETE_THE_SONG = 'AUDIO/DELETE_THE_SONG'\r\n\r\nexport const PLAY_THE_SONG_IN_PAGE = 'PAGE/PLAY_THE_SONG'\r\n\r\nexport const PLAY_THE_SONG_IN_LIST = 'LIST/PLAY_THE_SONG'\r\n\r\nexport const PLAY_NEXT_SONG = 'AUDIO/PLAY_NEXT_SONG'\r\n\r\n// export const GET_SONG = 'AUDIO/GET_AUDIO'\r\n\r\nexport const GET_LYRIC = 'AUDIO/GET_LYRIC'\r\n\r\nexport const GET_CURRENT_INDEX = 'AUDIO/GET_CURRENT_INDEX'\r\n\r\nexport const CHANGE_PLAY_MODE = 'AUDIO/CHANGE_PLAY_MODE'\r\n\r\nexport  const TOGGLE_SONG_LIST_WINDOW = 'AUDIO/TOGGLE_SONG_LIST_WINDOW'","import React from \"react\"\r\n\r\nconst previousBtn = (\r\n    <svg className=\"svg-icon\" viewBox=\"0 0 1024 1024\">\r\n        <path d=\"M362.3 512l445-332.3v664.5L362.3 512zM216.7 179.7h80v664.5h-80V179.7z\">\r\n        </path>\r\n    </svg>\r\n)\r\n\r\nconst nextBtn = (\r\n    <svg className=\"svg-icon\" viewBox=\"0 0 1024 1024\">\r\n        <path d=\"M216.7 844.3V179.7l445 332.3-445 332.3z m590.6 0h-80V179.7h80v664.6z\">\r\n        </path>\r\n    </svg>\r\n)\r\n\r\nconst volumeBtn = (\r\n    <svg className=\"svg-icon\" viewBox=\"0 0 1024 1024\">\r\n        <path d=\"M697.5 76l-497 230.6-147.3-20v420l147.3-20 497 230.6V76z m-50 760.7l-424.9-195-13.7-6.8-15.2 2.1-90.6 12.3V343.8l90.6 12.3 15.2 2.1 13.7-6.8 424.9-194.9v680.2zM812 612h-50V412h50v200z m204.7 200h-50V212h50v600zM914.3 712h-50V312h50v400z\">\r\n        </path>\r\n    </svg>\r\n)\r\n\r\nconst listBtn = (\r\n    <svg className=\"svg-icon\" viewBox=\"0 0 1024 1024\">\r\n        <path d=\"M91.9 165.2h50v50h-50v-50z m150.2 0v50h690v-50h-690zM91.9 429.7h50v-50h-50v50z m150.2 0h690v-50h-690v50zM91.9 644.3h50v-50h-50v50z m150.2 0h690v-50h-690v50zM91.9 858.8h50v-50h-50v50z m150.2 0h690v-50h-690v50z\">\r\n        </path>\r\n    </svg>\r\n)\r\n\r\nconst getModeButtonSvg = (mode) => {\r\n    let loop = (\r\n        <svg className=\"svg-icon\" viewBox=\"0 0 1024 1024\">\r\n            <path d=\"M922 607.1V887H102V157h612.2V58.2l200 125-200 125V207H152v630h720V607.1h50z\">\r\n            </path>\r\n        </svg>\r\n    )\r\n    let circle = (\r\n        <svg className=\"svg-icon\" viewBox=\"0 0 1024 1024\">\r\n            <path\r\n                d=\"M922 607.1V887H102V157h612.2V58.2l200 125-200 125V207H152v630h720V607.1h50zM560.5 737.6V306.4h-34c-9.2 18.6-24.8 37.7-46.9 57.4-22.1 19.7-47.9 36.5-77.3 50.4v51c16.4-6.1 34.9-15.1 55.5-27.2s37.3-24.2 50-36.3v336h52.7z\">\r\n            </path>\r\n        </svg>\r\n    )\r\n    let random = (\r\n        <svg className=\"svg-icon\" viewBox=\"0 0 1024 1024\">\r\n            <path d=\"M726.6 774H594.4L458.8 512l135.6-262h132.2v98.7l200-125-200-125V200H564.4L430.7 457.7 297.4 200h-200v50h169.2l135.9 262-135.9 262H97.4v50h200l133.3-257.7L564.4 824h162.2v101.3l200-125-200-125z\">\r\n            </path>\r\n        </svg>\r\n    )\r\n    let mapModeToIcon = {\r\n        loop,\r\n        circle,\r\n        random,\r\n    }\r\n    return mapModeToIcon[mode]\r\n}\r\n\r\nconst getPlayButtonSvg = (status) => {\r\n    let play = (\r\n        <svg className=\"svg-icon\" viewBox=\"0 0 1024 1024\">\r\n            <path d=\"M243.2 208h166.4v608H243.2zM614.4 208h166.4v608h-166.4z\">\r\n            </path>\r\n        </svg>\r\n    )\r\n    let pause = (\r\n        <svg className=\"svg-icon\" viewBox=\"0 0 1024 1024\">\r\n            <path d=\"M289.5 844.3V179.7l445 332.3-445 332.3z\">\r\n            </path>\r\n        </svg>\r\n    )\r\n    let mapStatusToIcon = {\r\n        play,\r\n        pause,\r\n    }\r\n    return mapStatusToIcon[status]\r\n}\r\n\r\nexport {\r\n    previousBtn,\r\n    nextBtn,\r\n    volumeBtn,\r\n    listBtn,\r\n    getModeButtonSvg,\r\n    getPlayButtonSvg,\r\n}","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {\r\n    changeAudioStatus,\r\n    getLyricFromNet,\r\n    saveCurrentLyricIndex,\r\n    changePlayMode,\r\n    playNextSong,\r\n    toggleSongListWindow\r\n} from '../actions'\r\nimport {timeFormat, getCurrentSongInfo, changeImgResolution} from '../../../utils'\r\nimport * as icon from './icon'\r\n\r\nclass AudioController extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.mapEnglishToChinese = {\r\n            loop: '列表循环',\r\n            circle: '单曲循环',\r\n            random: '随机播放',\r\n        }\r\n        this.isFirstLoad = true\r\n        this.state = {\r\n            volume: 1,\r\n            currentTime: 0,\r\n            duration: null,\r\n            isHoverOnSongSlider: false,\r\n            isHoverOnVolumeBtn: false,\r\n        }\r\n        // this.coolDown = false\r\n        this.isSliding = false\r\n        this.isVolumeSliding = false\r\n        this.audio = React.createRef()\r\n        this.songSlider = React.createRef()\r\n        this.volumeSlider = React.createRef()\r\n        this.playOrPause = this.playOrPause.bind(this)\r\n        this.clickToSeek = this.clickToSeek.bind(this)\r\n        this.mouseDownToSeek = this.mouseDownToSeek.bind(this)\r\n        this.mouseMoveToSeek = this.mouseMoveToSeek.bind(this)\r\n        this.afterSeek = this.afterSeek.bind(this)\r\n        this.handleHover = this.handleHover.bind(this)\r\n        this.changePlayMode = this.changePlayMode.bind(this)\r\n        this.changeToPlayNextSong = this.changeToPlayNextSong.bind(this)\r\n        this.toggleSongList = this.toggleSongList.bind(this)\r\n        this.hoverVolumeBtn = this.hoverVolumeBtn.bind(this)\r\n        this.clickToChange = this.clickToChange.bind(this)\r\n        this.mouseDownToChange = this.mouseDownToChange.bind(this)\r\n        this.mouseMoveToChange = this.mouseMoveToChange.bind(this)\r\n        this.afterChange = this.afterChange.bind(this)\r\n        this.bindHotKey = this.bindHotKey.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        const a = this.audio.current\r\n        a.addEventListener('loadstart', () => {\r\n            this.props.getLyricFromNet(this.props.currentSongInfo.lrc)\r\n        })\r\n        a.addEventListener('canplay', () => {\r\n            const {currentTime, duration} = a\r\n            this.setState({\r\n                currentTime,\r\n                duration\r\n            })\r\n            let shouldAutoPlay = !this.isFirstLoad\r\n            if (shouldAutoPlay) {\r\n                a.play()\r\n            } else {\r\n                this.isFirstLoad = false\r\n            }\r\n        })\r\n        a.addEventListener('play', () => {\r\n            this.props.changeAudioStatus('play')\r\n        })\r\n        a.addEventListener('pause', () => {\r\n            this.props.changeAudioStatus('pause')\r\n        })\r\n        a.addEventListener('timeupdate', () => {\r\n            if (!this.isSliding) {\r\n                const {currentTime} = a\r\n                this.setState({\r\n                    currentTime\r\n                })\r\n                this.parseLyricIndex(currentTime)\r\n            }\r\n        })\r\n        a.addEventListener('ended', () => {\r\n            let {lengthOfSongList, playMode} = this.props\r\n            if (lengthOfSongList !== 0) {\r\n                this.props.playNextSong(playMode)\r\n                if (lengthOfSongList === 1 || playMode === 'circle') {\r\n                    a.play()\r\n                }\r\n            }\r\n        })\r\n        if (this.isFirstLoad && this.props.lengthOfSongList === 0) {\r\n            this.isFirstLoad = false\r\n        }\r\n        document.body.addEventListener('mouseup', this.afterSeek)\r\n        document.body.addEventListener('mouseup', this.afterChange)\r\n        window.addEventListener('keydown', this.bindHotKey)\r\n        a.addEventListener('error', (event) => {\r\n            if (event.target.error.code === 4) {\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    bindHotKey(event) {\r\n        let tagName = event.target.tagName\r\n        if (tagName === 'INPUT' || tagName === 'TEXTAREA') {\r\n            return\r\n        }\r\n        let {key, ctrlKey} = event\r\n        if (key === 'p' || key === 'P') {\r\n            this.playOrPause()\r\n        } else if (ctrlKey && key === 'ArrowRight') {\r\n            this.changeToPlayNextSong(1)()\r\n        } else if (ctrlKey && key === 'ArrowLeft') {\r\n            this.changeToPlayNextSong(-1)()\r\n        }\r\n    }\r\n\r\n    getNextLyricIndex(currentTime, data, deltaTime) {\r\n        let nextLyricIndex\r\n        let length = data.length\r\n        let theLastLyricTime = data[length - 1].time\r\n        let isAfterTheLastLyric = currentTime >= theLastLyricTime\r\n        let isBetweenTheLastTwoLyric = currentTime <= theLastLyricTime && currentTime >= theLastLyricTime - deltaTime\r\n        if (isAfterTheLastLyric) {\r\n            nextLyricIndex = length - 1\r\n        } else if (isBetweenTheLastTwoLyric) {\r\n            nextLyricIndex = length - 2\r\n        } else {\r\n            nextLyricIndex = data.findIndex((lyricInfo, index, data) => {\r\n                if (index === length -1) {\r\n                    return false\r\n                }\r\n                let isStart = lyricInfo.time - deltaTime <= currentTime\r\n                let isNotEnd = data[index + 1].time - deltaTime >= currentTime\r\n                return isStart && isNotEnd\r\n            })\r\n        }\r\n        return nextLyricIndex\r\n    }\r\n\r\n    parseLyricIndex(currentTime, deltaTime=0.2) {\r\n        let data = this.props.currentSongExtraInfo.currentLyric\r\n        if (data.length === 0) {\r\n            return false\r\n        }\r\n        let currentLyricIndex = this.getNextLyricIndex(currentTime, data, deltaTime)\r\n        let indexInStore = this.props.currentSongExtraInfo.currentLyricIndex\r\n        if (currentLyricIndex === indexInStore) {\r\n            return false\r\n        } else {\r\n            this.props.saveCurrentLyricIndex(currentLyricIndex)\r\n        }\r\n    }\r\n\r\n    playOrPause() {\r\n        const a = this.audio.current\r\n        if (a.currentSrc === '') {\r\n            return\r\n        }\r\n        if (this.props.AudioStatus === 'pause') {\r\n            a.play()\r\n            this.props.changeAudioStatus('play')\r\n        } else {\r\n            a.pause()\r\n            this.props.changeAudioStatus('pause')\r\n        }\r\n    }\r\n\r\n    clickToSeek(event) {\r\n        const a = this.audio.current\r\n        let target = event.target\r\n        if (!target.classList.contains('slider-point')) {\r\n            let { left, width } = event.currentTarget.getBoundingClientRect()\r\n            let clickPosition = (event.clientX - left) / width\r\n            let currentTime = clickPosition * a.duration\r\n            if (!isNaN(currentTime)) {\r\n                a.currentTime = currentTime\r\n            }\r\n        }\r\n    }\r\n\r\n    mouseDownToSeek() {\r\n        this.isSliding = true\r\n        document.body.classList.add('sliding')\r\n    }\r\n\r\n    // 自己写的节流方案\r\n    // mouseMoveToSeek(event) {\r\n    //     if (!this.isSliding) {\r\n    //         return\r\n    //     }\r\n    //     let clientX = event.clientX\r\n    //     if (!this.coolDown) {\r\n    //         this.seek(clientX)\r\n    //         this.coolDown = true\r\n    //         setTimeout(() => {\r\n    //             this.coolDown = false\r\n    //         }, 12)\r\n    //     }\r\n    // }\r\n\r\n    // 使用 api 来做到节流\r\n    mouseMoveToSeek(event) {\r\n        if (!this.isSliding) {\r\n            return\r\n        }\r\n        let clientX = event.clientX\r\n        window.requestAnimationFrame(() => {\r\n            this.seek(clientX)\r\n        })\r\n    }\r\n\r\n    seek(clientX) {\r\n        const a = this.audio.current\r\n        let {left, width} = this.songSlider.current.getBoundingClientRect()\r\n        let dragPosition = (clientX - left) / width\r\n        if (dragPosition >= 0 && dragPosition <= 1) {\r\n            let currentTime = Number((a.duration * dragPosition).toFixed(2))\r\n            let noSongLoad = isNaN(a.duration)\r\n            if (noSongLoad) {\r\n                currentTime = 0\r\n            }\r\n            this.setState({\r\n                currentTime\r\n            })\r\n        }\r\n    }\r\n\r\n    afterSeek() {\r\n        if (this.isSliding) {\r\n            const a = this.audio.current\r\n            a.currentTime = this.state.currentTime\r\n            this.isSliding = false\r\n            document.body.classList.remove('sliding')\r\n        }\r\n    }\r\n\r\n    clickToChange(event) {\r\n        const a = this.audio.current\r\n        let target = event.target\r\n        if (!target.classList.contains('slider-point')) {\r\n            let { left, width } = event.currentTarget.getBoundingClientRect()\r\n            let clickPosition = (event.clientX - left) / width\r\n            let volume = clickPosition.toFixed(2)\r\n            if (!isNaN(volume)) {\r\n                this.setState({\r\n                    volume\r\n                })\r\n                a.volume = volume\r\n            }\r\n        }\r\n    }\r\n\r\n    mouseDownToChange() {\r\n        this.isVolumeSliding = true\r\n        document.body.classList.add('sliding')\r\n    }\r\n\r\n    mouseMoveToChange(event) {\r\n        if (!this.isVolumeSliding) {\r\n            return\r\n        }\r\n        let clientX = event.clientX\r\n        window.requestAnimationFrame(() => {\r\n            this.change(clientX)\r\n        })\r\n    }\r\n\r\n    change(clientX) {\r\n        const a = this.audio.current\r\n        let {left, width} = this.volumeSlider.current.getBoundingClientRect()\r\n        let dragPosition = (clientX - left) / width\r\n        if (dragPosition >= 0 && dragPosition <= 1) {\r\n            let volume = dragPosition.toFixed(2)\r\n            this.setState({\r\n                volume\r\n            })\r\n            a.volume = volume\r\n        }\r\n    }\r\n\r\n    afterChange() {\r\n        if (this.isVolumeSliding) {\r\n            this.isVolumeSliding = false\r\n            document.body.classList.remove('sliding')\r\n        }\r\n    }\r\n\r\n    handleHover() {\r\n        this.setState((state) => ({\r\n            isHoverOnSongSlider: !state.isHoverOnSongSlider,\r\n        }))\r\n    }\r\n\r\n    hoverVolumeBtn() {\r\n        this.setState((state) => ({\r\n            isHoverOnVolumeBtn: !state.isHoverOnVolumeBtn,\r\n        }))\r\n    }\r\n\r\n    toggleSongList() {\r\n        this.props.toggleSongListWindow()\r\n        let pop = document.querySelector('.pop-up')\r\n        if (pop === null) {\r\n            let body = document.querySelector(\"body\")\r\n            body.classList.toggle('ban-scroll')\r\n        }\r\n    }\r\n\r\n    changePlayMode() {\r\n        let modeList = ['loop', 'circle', 'random']\r\n        let index = modeList.indexOf(this.props.playMode)\r\n        let nextIndex = (index + 1) % modeList.length\r\n        let nextModeType = modeList[nextIndex]\r\n        this.props.changePlayMode(nextModeType)\r\n    }\r\n\r\n    changeToPlayNextSong(loopStep) {\r\n        return () => {\r\n            this.props.playNextSong(this.props.playMode, loopStep)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let {currentTime, duration, volume} = this.state\r\n        let songPercentage = (currentTime / duration).toFixed(3) * 100\r\n        let {name, singer, pic, url} = this.props.currentSongInfo\r\n        pic = changeImgResolution(pic, 400)\r\n        let playMode = this.props.playMode\r\n        let playModeTitle = this.mapEnglishToChinese[playMode]\r\n        return (\r\n            <div className={this.props.showSongListWindow ? \"playlist-opened audio-controller\" : \"audio-controller\"}\r\n                 onMouseMove={this.mouseMoveToSeek}\r\n            >\r\n                <audio src={url} ref={this.audio}>\r\n                </audio>\r\n                <div className=\"album-cover\">\r\n                    <img src={pic} alt=\"专辑图片\" />\r\n                </div>\r\n                <div className=\"extra-info-container\">\r\n                    <div className={this.state.isHoverOnSongSlider? \"song-slider hover\" : \"song-slider\"}\r\n                         onClick={this.clickToSeek}\r\n                         onMouseOver={this.handleHover}\r\n                         onMouseOut={this.handleHover}\r\n                         ref={this.songSlider}\r\n                    >\r\n                        <div className=\"slider-bg\">\r\n                        </div>\r\n                        <div className=\"slider-progress\" style={{width: `${songPercentage}%`}}>\r\n                            <div className=\"slider-point\" onMouseDown={this.mouseDownToSeek}>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <span className=\"music-timeline\">\r\n                        <span id=\"music-time-now\">{timeFormat(currentTime)}</span>\r\n                        <span> / </span>\r\n                        <span id=\"music-time-all\">{timeFormat(duration)}</span>\r\n                    </span>\r\n                    <div className=\"song-info\">\r\n                        <div className=\"song-info-name\" title={name}>{name}</div>\r\n                        <div className=\"song-info-singer\" title={singer}>{singer}</div>\r\n                    </div>\r\n                    <div className=\"controller-btn\">\r\n                        <span className=\"back-btn\" title=\"上一首(ctrl+←)\" onClick={this.changeToPlayNextSong(-1)}>\r\n                            {icon.previousBtn}\r\n                        </span>\r\n                        <span className={[\"play-btn\", this.props.AudioStatus].join(' ')}\r\n                              title=\"播放/暂停(p)\"\r\n                              onClick={this.playOrPause}\r\n                        >\r\n                            {icon.getPlayButtonSvg(this.props.AudioStatus)}\r\n                        </span>\r\n                        <span className=\"next-btn\" title=\"下一首(ctrl+→)\" onClick={this.changeToPlayNextSong(1)}>\r\n                            {icon.nextBtn}\r\n                        </span>\r\n                        <span className=\"volume-btn icon\" title={`音量：${volume * 100}`} onClick={this.hoverVolumeBtn}>\r\n                            {icon.volumeBtn}\r\n                            <div className={this.state.isHoverOnVolumeBtn ? \"volume-bar\" : \"volume-bar none-width\"}\r\n                                 onMouseMove={this.mouseMoveToChange}\r\n                            >\r\n                                <div className=\"volume-slider\" ref={this.volumeSlider} onClick={this.clickToChange}>\r\n                                    <div className=\"slider-progress\" style={{width: `${volume * 100}%`}}>\r\n                                        <div className={this.state.isHoverOnVolumeBtn ? \"slider-point\" : \"hidden\"}\r\n                                             onMouseDown={this.mouseDownToChange}\r\n                                        >\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </span>\r\n                        <span className={this.state.isHoverOnVolumeBtn ? \"hidden\" : `mode-btn icon ${playMode}`}\r\n                              data-mode={playMode} title={playModeTitle}\r\n                              onClick={this.changePlayMode}\r\n                        >\r\n                            {icon.getModeButtonSvg(playMode)}\r\n                        </span>\r\n                        <span className={this.state.isHoverOnVolumeBtn ? \"hidden\" : \"list-btn icon\"}\r\n                              title=\"播放列表\"\r\n                              onClick={this.toggleSongList}\r\n                        >\r\n                            {icon.listBtn}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    let theState = state.AudioReducer\r\n    let currentSongInfo = getCurrentSongInfo(theState)\r\n    let lengthOfSongList = theState.songList.length\r\n    return {\r\n        lengthOfSongList: lengthOfSongList,\r\n        AudioStatus: theState.AudioStatus,\r\n        currentSongInfo: currentSongInfo,\r\n        currentSongExtraInfo: theState.currentSongExtraInfo,\r\n        playMode: theState.playMode,\r\n        showSongListWindow: theState.showSongListWindow,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeAudioStatus: (status) => {\r\n            dispatch(changeAudioStatus(status))\r\n        },\r\n        getLyricFromNet: (url) => {\r\n            dispatch(getLyricFromNet(url))\r\n        },\r\n        saveCurrentLyricIndex: (currentLyricIndex) => {\r\n            dispatch(saveCurrentLyricIndex(currentLyricIndex))\r\n        },\r\n        changePlayMode: (modeType) => {\r\n            dispatch(changePlayMode(modeType))\r\n        },\r\n        playNextSong: (modeType, loopStep) => {\r\n            dispatch(playNextSong(modeType, loopStep))\r\n        },\r\n        toggleSongListWindow: () => {\r\n            dispatch(toggleSongListWindow())\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AudioController)","import React, {Component} from 'react'\r\nimport {timeFormat, getCurrentSongInfo} from '../../../utils'\r\nimport {connect} from \"react-redux\"\r\nimport {playTheSongInList, deleteTheSong} from '../actions'\r\n\r\nclass SongItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.handlePlay = this.handlePlay.bind(this)\r\n        this.handlePause = this.handlePause.bind(this)\r\n        // this.handleDelete = this.handleDelete.bind(this)\r\n    }\r\n\r\n    handlePlay() {\r\n        if (this.props.currentSongId !== this.props.songInfo.id) {\r\n            this.props.playTheSongInList(this.props.songIndex)\r\n            console.log('this.props.songInfo，第一次放', this.props.songInfo)\r\n        } else {\r\n            let audio = document.querySelector('audio')\r\n            audio.play()\r\n        }\r\n    }\r\n\r\n    handlePause() {\r\n        let audio = document.querySelector('audio')\r\n        audio.pause()\r\n    }\r\n\r\n    getPlayOrPauseButtonSvg() {\r\n        let {id} = this.props.songInfo\r\n        let isTheSongPlaying = (this.props.AudioStatus === 'play') && (this.props.currentSongId === id)\r\n        if (isTheSongPlaying) {\r\n            return (\r\n                <svg className=\"svg-list-icon\" viewBox=\"0 0 1024 1024\">\r\n                    <path d=\"M910.8 303.6c-5.4-10.5-16.3-17.8-28.9-17.8-17.8 0-32.2 14.4-32.2 32.1 0 6 1.7 11.7 4.6 16.5l-0.1 0.1c26.9 52.4 42.1 111.8 42.1 174.7 0 211.6-171.6 383.2-383.2 383.2S129.8 720.8 129.8 509.2 301.4 126.1 513 126.1c62.5 0 121.5 15 173.6 41.5l0.2-0.4c4.6 2.6 10 4.1 15.7 4.1 17.8 0 32.2-14.4 32.2-32.1 0-13.1-7.9-24.4-19.3-29.4C654.6 78.9 585.9 61.5 513 61.5 265.7 61.5 65.3 262 65.3 509.2S265.7 956.9 513 956.9s447.7-200.4 447.7-447.7c0-74.1-18-144-49.9-205.6z\">\r\n                    </path>\r\n                    <path d=\"M385.4 352.2V672c0 17.5 14.3 31.9 31.9 31.9 17.6 0 32-14.4 31.9-31.9V352.2c0-17.5-14.3-31.9-31.9-31.9-17.5 0-31.9 14.3-31.9 31.9zM578.9 352.2V672c0 17.5 14.3 31.9 31.9 31.9 17.5 0 31.9-14.4 31.9-31.9V352.2c0-17.5-14.3-31.9-31.9-31.9-17.5 0-31.9 14.3-31.9 31.9z\">\r\n                    </path>\r\n                    <path d=\"M772.7 217.7a32.2 32.1 0 1 0 64.4 0 32.2 32.1 0 1 0-64.4 0Z\">\r\n                    </path>\r\n                </svg>\r\n            )\r\n        } else {\r\n            return (\r\n                <svg className=\"svg-list-icon\" viewBox=\"0 0 1024 1024\">\r\n                    <path d=\"M772.7 217.7a32.2 32.1 0 1 0 64.4 0 32.2 32.1 0 1 0-64.4 0Z\">\r\n                    </path>\r\n                    <path d=\"M415.8 679.9c5.9 0 11.5-1.6 16.2-4.5l231.1-134.6c10.9-5.2 18.5-16.3 18.5-29.2 0-11.9-6.4-22.3-16-27.8L439.7 352.2c-5.8-6.7-14.4-10.9-23.9-10.9-17.6 0-31.8 14.4-31.8 32.1 0 0.6 0 1.2 0.1 1.8l-0.4 0.2 0.5 269c-0.1 1.1-0.2 2.2-0.2 3.4 0 17.7 14.3 32.1 31.8 32.1z\">\r\n                    </path>\r\n                    <path d=\"M909.8 306.6c-5.4-10.5-16.3-17.8-28.9-17.8-17.8 0-32.2 14.4-32.2 32.1 0 6 1.7 11.7 4.6 16.5l-0.1 0.1c26.9 52.4 42.1 111.8 42.1 174.7 0 211.6-171.6 383.2-383.2 383.2S128.8 723.8 128.8 512.2 300.4 129.1 512 129.1c62.5 0 121.5 15 173.6 41.5l0.2-0.4c4.6 2.6 10 4.1 15.7 4.1 17.8 0 32.2-14.4 32.2-32.1 0-13.1-7.9-24.4-19.3-29.4C653.6 81.9 584.9 64.5 512 64.5 264.7 64.5 64.3 265 64.3 512.2S264.7 959.9 512 959.9s447.7-200.4 447.7-447.7c0-74.1-18-144-49.9-205.6z\">\r\n                    </path>\r\n                </svg>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let {id, name, singer, time} = this.props.songInfo\r\n        let isTheSongPlaying = (this.props.AudioStatus === 'play') && (this.props.currentSongId === id)\r\n        return (\r\n            <div className=\"song-list-item-container\" style={isTheSongPlaying ? {color: 'rgb(255, 255, 255)'} : {}}>\r\n                <div className=\"song-list-item-name\">\r\n                    <span className=\"song-name\" title={name}>{name}</span>\r\n                    <span className=\"song-list-item-play\" onClick={isTheSongPlaying ? this.handlePause : this.handlePlay}>\r\n                        {this.getPlayOrPauseButtonSvg()}\r\n                    </span>\r\n                    <span className=\"song-list-item-delete\" onClick={this.props.deleteTheSong.bind(this, this.props.songIndex)}>\r\n                        <svg className=\"svg-list-icon\" viewBox=\"0 0 1024 1024\">\r\n                            <path d=\"M897.2 128H578.7c-1.6-34.7-30.2-62.4-65.3-62.4s-63.8 27.7-65.3 62.4h-320c-17.5 0-31.9 14.4-31.9 31.9s14.4 31.9 31.9 31.9H192v639.8c0 70.4 57.6 128 128 128h384.1c70.4 0 128-57.6 128-128V676.2c0.1-1.2 0.2-2.4 0.2-3.6 0.1-17.8-14.4-32.1-32.1-32.1-17.8 0-32.2 14.4-32.2 32.1v159.1c0 35.2-28.8 64-64 64H320c-35.2 0-64-28.8-64-64V191.8h511.9v223.1c0 17.7 14.4 32.1 32.2 32.1s32.2-14.4 32.2-32.1c0-1.2-0.1-2.4-0.2-3.6V191.8h65.1c17.6 0 31.9-14.4 31.9-31.9S914.7 128 897.2 128z\">\r\n                            </path>\r\n                            <path d=\"M386.9 350.6v386.6c0 16.8 13.8 30.6 30.6 30.6s30.6-13.8 30.6-30.5V350.6c0-16.8-13.8-30.6-30.6-30.6s-30.6 13.8-30.6 30.6zM576.7 350.6v386.6c0 16.8 13.8 30.6 30.6 30.6s30.6-13.8 30.6-30.5V350.6c0-16.8-13.8-30.6-30.6-30.6s-30.6 13.8-30.6 30.6z\">\r\n                            </path>\r\n                            <path d=\"M768 543.7a32.2 32.1 0 1 0 64.4 0 32.2 32.1 0 1 0-64.4 0Z\">\r\n                            </path>\r\n                        </svg>\r\n                    </span>\r\n                </div>\r\n                <div className=\"song-list-item-singer name\">\r\n                    <span title={singer}>{singer}</span>\r\n                </div>\r\n                <div className=\"song-list-item-time\">\r\n                    {timeFormat(time)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    let theState = state.AudioReducer\r\n    let currentSongInfo = getCurrentSongInfo(theState)\r\n    let currentSongId = currentSongInfo.id\r\n    return {\r\n        AudioStatus: theState.AudioStatus,\r\n        currentSongId: currentSongId,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        playTheSongInList: (songInfo) => {\r\n            dispatch(playTheSongInList(songInfo))\r\n        },\r\n        deleteTheSong: (songIndex) => {\r\n            dispatch(deleteTheSong(songIndex))\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SongItem)","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport SongItem from './SongItem'\r\nimport {getCurrentSongInfo, changeImgResolution} from '../../../utils'\r\n\r\nclass SongList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.list = React.createRef()\r\n    }\r\n\r\n    getTheActiveLyricOffset() {\r\n        const list = this.list.current\r\n        let activeLyric = document.querySelector('.active')\r\n        if (activeLyric !== null) {\r\n            let {height} = list.getBoundingClientRect()\r\n            let i = Math.floor(height / 40 / 2)\r\n            list.scrollTop = activeLyric.offsetTop - 40 * i\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        this.getTheActiveLyricOffset()\r\n    }\r\n\r\n    render() {\r\n        let picUrl = this.props.currentSongInfo.pic\r\n        picUrl = changeImgResolution(picUrl, 400)\r\n        let {currentLyric, currentLyricIndex} = this.props.currentSongExtraInfo\r\n        let length = this.props.songList.length\r\n        return (\r\n            <div className={this.props.showSongListWindow ? \"song-list\" : \"song-list hidden\"}>\r\n                <div className=\"song-list-bg\">\r\n                </div>\r\n                <div className=\"song-list-img\" style={{backgroundImage: `url(${picUrl})`}}>\r\n                </div>\r\n                <span className=\"song-list-header\">播放列表&nbsp;&nbsp;&nbsp;{`(总${length}首)`}</span>\r\n                <div className=\"song-list-container\">\r\n                    <div className=\"song-list-head-container\">\r\n                        <div className=\"song-list-item-name\">\r\n                            <span title=\"\">歌曲</span>\r\n                        </div>\r\n                        <div className=\"song-list-item-singer\">\r\n                            <span title=\"\">歌手</span>\r\n                        </div>\r\n                        <div className=\"song-list-item-time\">时长</div>\r\n                    </div>\r\n                    {\r\n                        this.props.songList.map((value, index) => {\r\n                            return <SongItem key={index} songIndex={index} songInfo={value}/>\r\n                    })}\r\n                </div>\r\n                <div className=\"lyric-list\" ref={this.list}>\r\n                    {\r\n                        currentLyric.map((value, index) => {\r\n                            if (value.translatedLyric === null) {\r\n                                return <p className={(currentLyricIndex === index)? \"lyric-item active\" : \"lyric-item\"} key={index}>{value.lyric}</p>\r\n                            } else {\r\n                                return (\r\n                                    <p className={(currentLyricIndex === index)? \"lyric-item active\" : \"lyric-item\"} key={index}>\r\n                                        {value.lyric}<br/>\r\n                                        {value.translatedLyric}\r\n                                    </p>\r\n                                )\r\n                            }\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    let theState = state.AudioReducer\r\n    let currentSongInfo = getCurrentSongInfo(theState)\r\n    return {\r\n        songList: theState.songList,\r\n        currentSongInfo: currentSongInfo,\r\n        currentSongExtraInfo: theState.currentSongExtraInfo,\r\n        showSongListWindow: theState.showSongListWindow,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(SongList)","import React, {Component} from 'react'\r\nimport AudioController from \"./AudioController\"\r\nimport SongList from \"./SongList\"\r\nimport './MusicController.css'\r\n\r\nclass MusicController extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"music-player\">\r\n                <AudioController />\r\n                <SongList />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MusicController","import React, {Component} from 'react'\r\nimport {getCurrentSongInfo, timeFormat} from '../../../utils'\r\nimport {connect} from 'react-redux'\r\nimport {actions} from '../../audioController/'\r\n\r\nconst appendTheSong = actions.appendTheSong\r\nconst playTheSongInPage = actions.playTheSongInPage\r\n\r\nclass SearchItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.handlePlay = this.handlePlay.bind(this)\r\n        this.handleAppend = this.handleAppend.bind(this)\r\n        this.handlePause = this.handlePause.bind(this)\r\n    }\r\n\r\n    handlePlay() {\r\n        if (!this.props.result.copyright) {\r\n            alert('该歌曲不能播放')\r\n            return\r\n        }\r\n        if (this.props.currentSongId !== this.props.result.id) {\r\n            this.props.playTheSongInPage(this.props.result)\r\n            console.log('this.props.songInfo，第一次放', this.props.result)\r\n        } else {\r\n            let audio = document.querySelector('audio')\r\n            audio.play()\r\n        }\r\n    }\r\n\r\n    handlePause() {\r\n        let audio = document.querySelector('audio')\r\n        audio.pause()\r\n    }\r\n\r\n    getPlayOrPauseButtonSvg() {\r\n        let id = this.props.result.id\r\n        let isTheSongPlaying = (this.props.AudioStatus === 'play') && (this.props.currentSongId === id)\r\n        if (isTheSongPlaying) {\r\n            return (\r\n                <svg className=\"svg-list-icon\" viewBox=\"0 0 1024 1024\">\r\n                    <path d=\"M910.8 303.6c-5.4-10.5-16.3-17.8-28.9-17.8-17.8 0-32.2 14.4-32.2 32.1 0 6 1.7 11.7 4.6 16.5l-0.1 0.1c26.9 52.4 42.1 111.8 42.1 174.7 0 211.6-171.6 383.2-383.2 383.2S129.8 720.8 129.8 509.2 301.4 126.1 513 126.1c62.5 0 121.5 15 173.6 41.5l0.2-0.4c4.6 2.6 10 4.1 15.7 4.1 17.8 0 32.2-14.4 32.2-32.1 0-13.1-7.9-24.4-19.3-29.4C654.6 78.9 585.9 61.5 513 61.5 265.7 61.5 65.3 262 65.3 509.2S265.7 956.9 513 956.9s447.7-200.4 447.7-447.7c0-74.1-18-144-49.9-205.6z\">\r\n                    </path>\r\n                    <path d=\"M385.4 352.2V672c0 17.5 14.3 31.9 31.9 31.9 17.6 0 32-14.4 31.9-31.9V352.2c0-17.5-14.3-31.9-31.9-31.9-17.5 0-31.9 14.3-31.9 31.9zM578.9 352.2V672c0 17.5 14.3 31.9 31.9 31.9 17.5 0 31.9-14.4 31.9-31.9V352.2c0-17.5-14.3-31.9-31.9-31.9-17.5 0-31.9 14.3-31.9 31.9z\">\r\n                    </path>\r\n                    <path d=\"M772.7 217.7a32.2 32.1 0 1 0 64.4 0 32.2 32.1 0 1 0-64.4 0Z\">\r\n                    </path>\r\n                </svg>\r\n            )\r\n        } else {\r\n            return (\r\n                <svg className=\"svg-list-icon\" viewBox=\"0 0 1024 1024\">\r\n                    <path d=\"M772.7 217.7a32.2 32.1 0 1 0 64.4 0 32.2 32.1 0 1 0-64.4 0Z\">\r\n                    </path>\r\n                    <path d=\"M415.8 679.9c5.9 0 11.5-1.6 16.2-4.5l231.1-134.6c10.9-5.2 18.5-16.3 18.5-29.2 0-11.9-6.4-22.3-16-27.8L439.7 352.2c-5.8-6.7-14.4-10.9-23.9-10.9-17.6 0-31.8 14.4-31.8 32.1 0 0.6 0 1.2 0.1 1.8l-0.4 0.2 0.5 269c-0.1 1.1-0.2 2.2-0.2 3.4 0 17.7 14.3 32.1 31.8 32.1z\">\r\n                    </path>\r\n                    <path d=\"M909.8 306.6c-5.4-10.5-16.3-17.8-28.9-17.8-17.8 0-32.2 14.4-32.2 32.1 0 6 1.7 11.7 4.6 16.5l-0.1 0.1c26.9 52.4 42.1 111.8 42.1 174.7 0 211.6-171.6 383.2-383.2 383.2S128.8 723.8 128.8 512.2 300.4 129.1 512 129.1c62.5 0 121.5 15 173.6 41.5l0.2-0.4c4.6 2.6 10 4.1 15.7 4.1 17.8 0 32.2-14.4 32.2-32.1 0-13.1-7.9-24.4-19.3-29.4C653.6 81.9 584.9 64.5 512 64.5 264.7 64.5 64.3 265 64.3 512.2S264.7 959.9 512 959.9s447.7-200.4 447.7-447.7c0-74.1-18-144-49.9-205.6z\">\r\n                    </path>\r\n                </svg>\r\n            )\r\n        }\r\n    }\r\n\r\n    handleAppend() {\r\n        if (!this.props.result.copyright) {\r\n            alert('该歌曲不能播放')\r\n            return\r\n        }\r\n        this.props.appendTheSong(this.props.result)\r\n    }\r\n\r\n    render() {\r\n        let result = this.props.result\r\n        let id = this.props.result.id\r\n        let isTheSongPlaying = (this.props.AudioStatus === 'play') && (this.props.currentSongId === id)\r\n        let isOdd = (this.props.index + 1) % 2 !== 0\r\n        let color = !this.props.result.copyright ? '#aaa' : ''\r\n        return(\r\n            <div className={isOdd ? \"search-item-container odd\" : \"search-item-container\"} style={{color: `${color}`}}>\r\n                <span className=\"search-item-number\">{`${this.props.index + 1}.`}</span>\r\n                <div className=\"search-item-name\">\r\n                    <span className=\"song-name\" title={result.name}>{result.name}</span>\r\n                    <span className=\"search-item-play\"\r\n                          onClick={isTheSongPlaying ? this.handlePause : this.handlePlay}>\r\n                        {this.getPlayOrPauseButtonSvg()}\r\n                    </span>\r\n                    <span className=\"search-item-append\" onClick={this.handleAppend}>\r\n                        <svg className=\"svg-list-icon\" viewBox=\"0 0 1024 1024\">\r\n                        <path d=\"M197.3 197.3c-173.8 173.8-173.8 455.5 0 629.3s455.5 173.8 629.3 0 173.8-455.5 0-629.3-455.5-173.7-629.3 0zM907 512c0 51.3-9.7 101.3-28.9 148.7-19.9 49-49.1 92.9-86.8 130.6s-81.7 66.9-130.6 86.8C613.3 897.3 563.3 907 512 907c-51.3 0-101.3-9.7-148.7-28.9-49-19.9-92.9-49.1-130.6-86.8s-66.9-81.7-86.8-130.6C126.7 613.3 117 563.3 117 512c0-51.3 9.7-101.3 28.9-148.7 19.9-49 49.1-92.9 86.8-130.6s81.7-66.9 130.6-86.8C410.7 126.7 460.7 117 512 117c51.3 0 101.3 9.7 148.7 28.9 49 19.9 92.9 49.1 130.6 86.8s66.9 81.7 86.8 130.6C897.3 410.7 907 460.7 907 512zM537 262v225h225v50H537v225h-50V537H262v-50h225V262h50z\">\r\n                        </path>\r\n                        </svg>\r\n                    </span>\r\n                </div>\r\n                <div className=\"search-item-singer name\">\r\n                    <span title={result.singer}>{result.singer}</span>\r\n                </div>\r\n                <div className=\"search-item-time\">\r\n                    {timeFormat(result.time)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    let theState = state.AudioReducer\r\n    let currentSongInfo = getCurrentSongInfo(theState)\r\n    let currentSongId = currentSongInfo.id\r\n    return {\r\n        AudioStatus: theState.AudioStatus,\r\n        currentSongId: currentSongId,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        appendTheSong: (songInfo) => {\r\n            dispatch(appendTheSong(songInfo))\r\n        },\r\n        playTheSongInPage: (songInfo) => {\r\n            dispatch(playTheSongInPage(songInfo))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchItem)","import React, {Component} from 'react'\r\nimport SearchItem from './SearchItem'\r\nimport {connect} from 'react-redux'\r\nimport PageSelector from \"../../common/PageSelector\"\r\nimport {changePage} from \"../actions\"\r\nimport {withRouter} from \"react-router-dom\"\r\n\r\nclass SearchList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.pushHistory = this.pushHistory.bind(this)\r\n        this.getSelectorInfo = this.getSelectorInfo.bind(this)\r\n    }\r\n\r\n    dataCleaning(data) {\r\n        let singerList = data.ar.map(artist => artist.name)\r\n        let singer = singerList.join('/')\r\n        let id = String(data.privilege.id)\r\n        return {\r\n            name: data.name,\r\n            singer,\r\n            time: data.dt / 1000,\r\n            id,\r\n            pic: data.al.picUrl,\r\n            lrc: `https://v1.itooi.cn/netease/lrc?id=${id}`,\r\n            url:`https://v1.itooi.cn/netease/url?id=${id}`,\r\n            copyright: data.privilege.fl !== 0,\r\n        }\r\n    }\r\n\r\n    pushHistory(newPage) {\r\n        this.props.history.push(`search?s=${this.props.searchContent}&page=${newPage}`)\r\n    }\r\n\r\n    getSelectorInfo() {\r\n        let totalCount = this.props.searchResult.data.songCount\r\n        if (totalCount > 600) {\r\n            totalCount = 600\r\n        }\r\n        let pageSize = this.props.pageSize\r\n        let totalPage = Math.ceil(totalCount / pageSize)\r\n        return {\r\n            totalPage,\r\n            currentPage: Number(this.props.searchPage),\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let searchData = this.props.searchResult.data.songs\r\n        let selectorInfo = this.getSelectorInfo()\r\n        return(\r\n            <div className=\"search-list-container\">\r\n                <span className=\"search-head-number\">\r\n                </span>\r\n                <div className=\"search-head-container\">\r\n                    <div className=\"search-head-name name\">\r\n                        <span title=\"歌名\">歌曲</span>\r\n                    </div>\r\n                    <div className=\"search-head-singer name\">\r\n                        <span title=\"歌手\">歌手</span>\r\n                    </div>\r\n                    <div className=\"search-head-time\">\r\n                        时长\r\n                    </div>\r\n                </div>\r\n                <div className=\"search-list\">\r\n                    {searchData.map((value, i) => {\r\n                        let num = i + this.props.pageSize * (this.props.searchPage - 1)\r\n                        return (\r\n                            <SearchItem key={i} index={num} result={this.dataCleaning(value)}/>\r\n                        )\r\n                    })}\r\n                </div>\r\n                    <PageSelector selectorInfo={selectorInfo} changePage={this.props.changePage} pushHistory={this.pushHistory}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateTopProps = (state) => {\r\n    let theState = state.SearchBarReducer\r\n    return {\r\n        searchContent: theState.searchContent,\r\n        searchResult: theState.searchResult,\r\n        searchPage: theState.searchPage,\r\n        pageSize: theState.pageSize,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changePage: (page) => {\r\n            dispatch(changePage(page))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateTopProps, mapDispatchToProps)(withRouter(SearchList))","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport * as Status from '../status'\r\nimport {fetchSearchResult, inputChange} from '../actions'\r\nimport SearchBar from './SearchBar'\r\nimport SearchList from './SearchList'\r\nimport {argsFromQuery} from '../../../utils'\r\nimport './SearchPage.css'\r\nimport Loading from \"../../common/Loading\"\r\n\r\nclass SearchPage extends Component {\r\n\r\n    componentDidMount() {\r\n        let query = argsFromQuery(this.props.location.search)\r\n        let s = query.s\r\n        let page = Number(query.page)\r\n        if (s !== undefined && s !== this.props.searchContent) {\r\n            this.props.fetchSearchResult(s, page)\r\n            this.props.inputChange(s)\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.location.search !== this.props.location.search) {\r\n            let query = argsFromQuery(this.props.location.search)\r\n            let s = query.s\r\n            let page = Number(query.page)\r\n            this.props.fetchSearchResult(s, page)\r\n        }\r\n    }\r\n\r\n    showSearchResult() {\r\n        switch (this.props.status) {\r\n            case Status.LOADING: {\r\n                return (\r\n                    <Loading />\r\n                )\r\n            }\r\n            case Status.SUCCESS: {\r\n                return (\r\n                    <SearchList />\r\n                )\r\n            }\r\n            case Status.FAILURE: {\r\n                return (\r\n                    <div className=\"failed-container\">歌曲搜索失败</div>\r\n                )\r\n            }\r\n            default: {\r\n                return (\r\n                    <div></div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"search-page-content\">\r\n                <SearchBar />\r\n                {this.showSearchResult()}\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateTopProps = (state) => {\r\n    let theState = state.SearchBarReducer\r\n    return {\r\n        status: theState.status,\r\n        searchResult: theState.searchResult,\r\n        searchContent: theState.searchContent,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchSearchResult: (input, page) => {\r\n            dispatch(fetchSearchResult(input, page))\r\n        },\r\n        inputChange: (input) => {\r\n            dispatch(inputChange(input))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateTopProps, mapDispatchToProps)(SearchPage)","export const LOADING = 'loading'\r\nexport const SUCCESS = 'success'\r\nexport const FAILURE = 'failure'","import React, {Component} from 'react'\r\nimport {changeImgResolution} from '../../../utils'\r\nimport {SearchItem} from '../../searchPage'\r\nimport PageSelector from '../../common/PageSelector'\r\nimport {albumChangePage} from '../actions'\r\nimport {connect} from 'react-redux'\r\n\r\nclass AlbumDetail extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isAllDescriptionShowed: false,\r\n        }\r\n\r\n        this.descriptionToggle = this.descriptionToggle.bind(this)\r\n        this.getPageSelectorInfo = this.getPageSelectorInfo.bind(this)\r\n    }\r\n\r\n    descriptionToggle() {\r\n        this.setState((state) => ({\r\n            isAllDescriptionShowed: !state.isAllDescriptionShowed,\r\n        }))\r\n    }\r\n\r\n    static dataCleaning(fetchedData) {\r\n        let singerList = fetchedData.artists.map(artist => artist.name)\r\n        let singer = singerList.join('/')\r\n        return {\r\n            id: fetchedData.id,\r\n            name: fetchedData.name,\r\n            singer,\r\n            time: fetchedData.duration / 1000,\r\n            pic: fetchedData.album.blurPicUrl,\r\n            lrc: `https://v1.itooi.cn/netease/lrc?id=${fetchedData.id}`,\r\n            url: `https://v1.itooi.cn/netease/url?id=${fetchedData.id}`,\r\n            // copyright: fetchedData.privilege.fl !== 0,\r\n            copyright: true,\r\n        }\r\n    }\r\n\r\n    getPageSelectorInfo() {\r\n        let totalPage = Math.ceil(this.props.albumDetailInfo.data.trackCount / this.props.albumPageSize)\r\n        return {\r\n            totalPage,\r\n            currentPage: Number(this.props.albumCurrentPage),\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let data = this.props.albumDetailInfo.data\r\n        let {coverImgUrl, name, description, trackCount} = data\r\n        coverImgUrl = changeImgResolution(coverImgUrl, 200)\r\n\r\n        let {albumCurrentPage, albumPageSize} = {...this.props}\r\n        let start = (albumCurrentPage - 1) * albumPageSize\r\n        let end = start + albumPageSize\r\n        let dataOfShowedAlbums = data.tracks.slice(start, end)\r\n\r\n        let {isAllDescriptionShowed} = this.state\r\n        let classNameOfAlbumInfo = isAllDescriptionShowed ? \"album-list-info all-description-showed\" : \"album-list-info\"\r\n        let classNameOfDescription = isAllDescriptionShowed ? \"album-list-description all-description-showed\" : \"album-list-description\"\r\n        return (\r\n            <div className=\"album-list-container\">\r\n                <div className={classNameOfAlbumInfo}>\r\n                    <img className=\"album-list-bg\" src={coverImgUrl} alt=\"专辑图片\"/>\r\n                    <span className=\"album-list-pic\">\r\n                                <img src={coverImgUrl} alt=\"专辑图片\"/>\r\n                            </span>\r\n                    <div className=\"album-list-name\" title={name}>\r\n                        {`歌单：${name}`}\r\n                    </div>\r\n                    <p className={classNameOfDescription}>\r\n                        <span>介绍：</span><br/>\r\n                        {`${description}`}\r\n                    </p>\r\n                    <span className=\"description-toggle\" onClick={this.descriptionToggle}>{isAllDescriptionShowed ? '收起' : '展开'}</span>\r\n                </div>\r\n                <div className=\"album-list-count\">\r\n                    {`歌曲列表 (${trackCount}首歌)`}\r\n                </div>\r\n                <div className=\"album-list-items\">\r\n                    {dataOfShowedAlbums.map((value, i) => {\r\n                        let index = i + start\r\n                        return <SearchItem key={index} index={index} result={AlbumDetail.dataCleaning(value)}/>\r\n                    })}\r\n                </div>\r\n                <PageSelector selectorInfo={this.getPageSelectorInfo()} changePage={this.props.changePage} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    let theState = state.PlayListReducer\r\n    return {\r\n        albumDetailInfo: theState.albumDetailInfo,\r\n        albumCurrentPage: theState.albumCurrentPage,\r\n        albumPageSize: theState.albumPageSize,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changePage: (page) => {\r\n            dispatch(albumChangePage(page))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AlbumDetail)","import React, {Component} from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport {connect} from 'react-redux'\r\nimport {deleteItemDetail} from '../actions'\r\nimport * as Status from '../status'\r\nimport {loadingIcon} from '../../common/icon'\r\nimport AlbumDetail from './AlbumDetail'\r\n\r\nclass ModalPortal extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.deleteDetailInfo = this.deleteDetailInfo.bind(this)\r\n        this.container = document.querySelector('#pop-container')\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        let body = document.body\r\n        if (this.props.albumStatus !== Status.INIT) {\r\n            body.classList.add('ban-scroll')\r\n        } else {\r\n            body.classList.remove('ban-scroll')\r\n        }\r\n    }\r\n\r\n    deleteDetailInfo() {\r\n        this.props.deleteItemDetail()\r\n    }\r\n\r\n    showAlbumList() {\r\n        switch (this.props.albumStatus) {\r\n            case Status.INIT: {\r\n                return null\r\n            }\r\n            case Status.LOADING: {\r\n                return (\r\n                    <div className=\"pop-up\">\r\n                        <div className=\"pop-window\">\r\n                            <span className=\"modal-portal-toggle\" onClick={this.deleteDetailInfo}>×</span>\r\n                            <div className=\"loading-container\">\r\n                                {loadingIcon}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            case Status.SUCCESS: {\r\n                return (\r\n                    <div className=\"pop-up\">\r\n                        <div className=\"pop-window\">\r\n                            <span className=\"modal-portal-toggle\" onClick={this.deleteDetailInfo}>×</span>\r\n                            <AlbumDetail />\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            default: {\r\n                return null\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return ReactDOM.createPortal(this.showAlbumList(), this.container)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    let theState = state.PlayListReducer\r\n    return {\r\n        albumStatus: theState.albumStatus,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deleteItemDetail: () => {\r\n            dispatch(deleteItemDetail())\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalPortal)","import React, { Component } from 'react'\nimport PlayList from './PlayList'\nimport TagSelector from './TagSelector'\nimport ModalPortal from './ModalPortal'\nimport './playListPage.css'\n\nclass PlayListPage extends Component {\n\n    render() {\n        return (\n            <div className=\"playlist-content\">\n                <TagSelector />\n                <PlayList />\n                <ModalPortal />\n            </div>\n        )\n    }\n}\n\nexport default PlayListPage\n","import React, {Component} from 'react'\r\n\r\nclass NotFound extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"error-404\">\r\n                <img src=\"https://static.hdslb.com/error/very_sorry.png\" alt=\"not-found\"/>\r\n                <div className=\"error-description\">\r\n                    <b>错误号：404</b><br/>\r\n                    <b>请点击上方导航，进行浏览（未配置服务器进行页面重定向）</b>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NotFound","import React, { Component } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport {connect} from 'react-redux'\n\nclass Menu extends Component {\n\n    render() {\n        let {searchContent, searchPage} = {...this.props.searchBar}\n        let searchPath = `?s=${searchContent}&page=${searchPage}`\n        if (searchContent === '' || searchContent === undefined) {\n            searchPath = ''\n        }\n        let menus = [\n            {\n                text: '首页',\n                pathname: '/',\n                search: '',\n            },\n            {\n                text: '热门歌单',\n                pathname: `/playlist`,\n                search: `?cat=${this.props.playList.activeTag}&page=${this.props.playList.currentPage}`,\n            },\n            {\n                text: '搜索',\n                pathname: `/search`,\n                search: searchPath,\n            },\n        ]\n        return (\n            <nav>\n                <ul className=\"nav-container\">\n                    {\n                        menus.map((e, index) => {\n                                let href = `${e.pathname}${e.search}`\n                                let isCurrent = this.props.currentPathname === e.pathname\n                                return (\n                                    <li className=\"nav-item\" key={index}>\n                                        <Link className={isCurrent? \"nav-link nav-link-current\" : \"nav-link\"} to={href}>{e.text}</Link>\n                                    </li>\n                                )\n                            }\n                        )\n                    }\n                </ul>\n            </nav>\n        )\n    }\n}\n\nconst mapStateTopProps = (state, ownProps) => {\n    return {\n        playList: state.PlayListReducer,\n        searchBar: state.SearchBarReducer,\n        currentPathname: ownProps.location.pathname,\n    }\n}\n\nexport default withRouter(connect(mapStateTopProps, null)(Menu))\n","import React, {Component} from 'react'\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"page-footer\">\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer","import React, {Component} from 'react'\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport {view as Home} from './homePage/'\nimport {view as PlayListPage} from './playListPage/'\nimport {view as SearchPage} from './searchPage/'\nimport NotFound from './NotFound'\nimport Menu from './Menu'\nimport {view as MusicController} from './audioController/'\nimport Footer from './Footer'\nimport './App.css'\n\nclass App extends Component {\n\n    render() {\n        return (\n            // BrowserRouter 会使用 HTML5 的 history API 渲染单页路由\n            <Router basename={process.env.PUBLIC_URL}>\n                <React.Fragment>\n                    <Menu />\n                    {/*Router 只能有一个子元素 也可以放一个 Switch 组件*/}\n                    <div className=\"content-container\">\n                        <Switch>\n                            {/*Route 组件用来匹配 location.path 的值, 并且渲染相应的组件 */}\n                            {/*exact 表示路径完全匹配时才算匹配*/}\n                            <Route exact path=\"/\" component={Home} />\n                            <Route exact path=\"/playlist\" component={PlayListPage} />\n                            <Route exact path=\"/search\" component={SearchPage} />\n                            <Route component={NotFound} />\n                        </Switch>\n                    </div>\n                    <Footer />\n                    <MusicController />\n                </React.Fragment>\n            </Router>\n        )\n    }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { applyMiddleware, createStore, combineReducers} from 'redux'\r\nimport {reducer as homePageReducer} from './components/homePage/'\r\nimport {reducer as SearchBarReducer} from './components/searchPage/'\r\nimport {reducer as PlayListReducer} from './components/playListPage/'\r\nimport {reducer as AudioReducer} from './components/audioController/'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {loadSongListInLocalStorage, loadCurrentSongIndexInLocalStorage} from './utils'\r\n\r\nconst initValue = {\r\n    homePageReducer: {\r\n        images: [],\r\n        indexOfCurrentImg: 0,\r\n    },\r\n    SearchBarReducer: {\r\n        searchContent: '',\r\n        searchPage: 1,\r\n        pageSize: 20,\r\n    },\r\n    PlayListReducer: {\r\n        activeTag: '全部',\r\n        albumStatus: '',\r\n        albumDetailInfo: '',\r\n        albumCurrentPage: 1,\r\n        albumPageSize: 30,\r\n        currentPage: 1,\r\n        pageSize: 60,\r\n        totalPage: 20,\r\n    },\r\n    AudioReducer: {\r\n        AudioStatus: 'pause',\r\n        songList: loadSongListInLocalStorage(),\r\n        showSongListWindow: false,\r\n        currentSongExtraInfo: {\r\n            currentSongIndex: loadCurrentSongIndexInLocalStorage(),\r\n            currentLyric: [],\r\n            currentLyricIndex: -1,\r\n        },\r\n        playMode: 'loop',\r\n        initSongInfo: {\r\n            id: -1,\r\n            name: '歌曲',\r\n            singer: '歌手',\r\n            lrc: null,\r\n            pic: \"http://s4.music.126.net/style/web2/img/default/default_album.jpg\",\r\n            url: null,\r\n            time: null,\r\n        },\r\n    },\r\n}\r\n\r\nconst reducerObj = {\r\n    homePageReducer,\r\n    SearchBarReducer,\r\n    PlayListReducer,\r\n    AudioReducer,\r\n}\r\n\r\nconst reducer = combineReducers(reducerObj)\r\n\r\nconst middleware = [thunkMiddleware]\r\n\r\nconst storeEnhancers = composeWithDevTools(applyMiddleware(...middleware))\r\n\r\nconst Store = createStore(reducer, initValue, storeEnhancers)\r\n\r\nexport default Store","import * as homePage from './actionTypes.js'\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case homePage.GET_HOMEPAGE_IMG: {\r\n            return {\r\n                ...state,\r\n                images: action.imgObj,\r\n            }\r\n        }\r\n        case homePage.CHANGE_THE_INDEX_OF_IMG: {\r\n            return {\r\n                ...state,\r\n                indexOfCurrentImg: action.index,\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state === undefined ? {} : state\r\n        }\r\n    }\r\n}","import * as search from './actionTypes.js'\r\nimport * as Status from './status.js'\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case search.INPUT_CHANGE: {\r\n            return {\r\n                ...state,\r\n                searchInput: action.input\r\n            }\r\n        }\r\n        case search.SEARCH_STARTED: {\r\n            return {\r\n                ...state,\r\n                status: Status.LOADING\r\n            }\r\n        }\r\n        case search.SEARCH_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                status: Status.SUCCESS,\r\n                searchResult: action.result,\r\n                searchContent: action.searchContent,\r\n                searchPage: action.searchPage,\r\n            }\r\n        }\r\n        case search.SEARCH_FAILURE: {\r\n            return {\r\n                status: Status.FAILURE\r\n            }\r\n        }\r\n        case search.CHANGE_PAGE: {\r\n            return {\r\n                ...state,\r\n                searchPage: action.page,\r\n            }\r\n        }\r\n        default: {\r\n            return state === undefined ? [] : state\r\n        }\r\n    }\r\n}","import * as playList from './actionTypes.js'\r\nimport * as Status from './status.js'\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case playList.PLAYLIST_TAG_CHANGE: {\r\n            return {\r\n                ...state,\r\n                activeTag: action.tagName,\r\n                currentPage: 1,\r\n            }\r\n        }\r\n        case playList.LOAD_ITEM_DETAIL_STARTED: {\r\n            return {\r\n                ...state,\r\n                albumStatus: Status.LOADING\r\n            }\r\n        }\r\n        case playList.LOAD_ITEM_DETAIL_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                albumStatus: Status.SUCCESS,\r\n                albumDetailInfo: action.albumDetailInfo\r\n            }\r\n        }\r\n        case playList.DELETE_ITEM_DETAIL: {\r\n            return{\r\n                ...state,\r\n                albumStatus: '',\r\n                albumDetailInfo: '',\r\n                albumCurrentPage: 1,\r\n            }\r\n        }\r\n        case playList.PLAYLIST_LOAD_STARTED: {\r\n            return {\r\n                ...state,\r\n                playListStatus: Status.LOADING\r\n            }\r\n        }\r\n        case playList.PLAYLIST_LOAD_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                playListStatus: Status.SUCCESS,\r\n                playListResult: action.playListResult\r\n            }\r\n        }\r\n        case playList.PLAYLIST_LOAD_FAILURE: {\r\n            return {\r\n                ...state,\r\n                playListStatus: Status.FAILURE\r\n            }\r\n        }\r\n        case playList.PLAYLIST_PAGE_CHANGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.page,\r\n            }\r\n        }\r\n        case playList.ALBUM_PAGE_CHANGE: {\r\n            return {\r\n                ...state,\r\n                albumCurrentPage: action.page,\r\n            }\r\n        }\r\n        default: {\r\n            return state === undefined ? {} : state\r\n        }\r\n    }\r\n}","import * as audioController from './actionTypes'\r\nimport {saveSongToLocalStorage, deleteSongInLocalStorage, saveCurrentSongIndexInLocalStorage} from \"../../utils\"\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case audioController.TOGGLE_SONG_LIST_WINDOW: {\r\n            return {\r\n                ...state,\r\n                showSongListWindow: !state.showSongListWindow,\r\n            }\r\n        }\r\n        case audioController.CHANGE_AUDIO_STATUS: {\r\n            return {\r\n                ...state,\r\n                AudioStatus: action.status\r\n            }\r\n        }\r\n        case audioController.APPEND_THE_SONG: {\r\n            let songList = state['songList']\r\n            let cloneList = JSON.parse(JSON.stringify(songList))\r\n            let isTheSongNotExisted = songList.every((value) => value.id !== action.songInfo.id)\r\n            if (isTheSongNotExisted) {\r\n                cloneList.push(action.songInfo)\r\n                saveSongToLocalStorage(action.songInfo)\r\n            }\r\n            return {\r\n                ...state,\r\n                songList: cloneList,\r\n            }\r\n        }\r\n        case audioController.DELETE_THE_SONG: {\r\n            let songList = state['songList']\r\n            let cloneList = JSON.parse(JSON.stringify(songList))\r\n            let deleteSongIndex = action.songIndex\r\n            let currentSongIndex = state.currentSongExtraInfo.currentSongIndex\r\n            let listLength = cloneList.length\r\n            deleteSongInLocalStorage(deleteSongIndex)\r\n            cloneList.splice(deleteSongIndex, 1)\r\n            let justOneSong = listLength === 1\r\n            let isCurrentSong = currentSongIndex === deleteSongIndex\r\n            let isTheLastSong = currentSongIndex === listLength - 1\r\n            let beforeCurrentSong = currentSongIndex < deleteSongIndex\r\n            let updateCurrentSongIndex = -1\r\n            let updateCurrentLyric = state.currentSongExtraInfo.currentLyric\r\n            if (justOneSong) {\r\n                updateCurrentSongIndex = -1\r\n            } else if (isCurrentSong) {\r\n                if (isTheLastSong) {\r\n                    updateCurrentSongIndex = currentSongIndex - 1\r\n                } else {\r\n                    updateCurrentSongIndex = currentSongIndex\r\n                }\r\n                updateCurrentLyric = []\r\n            } else {\r\n                if (beforeCurrentSong) {\r\n                    updateCurrentSongIndex = currentSongIndex\r\n                } else {\r\n                    updateCurrentSongIndex = currentSongIndex -1\r\n                }\r\n            }\r\n            saveCurrentSongIndexInLocalStorage(updateCurrentSongIndex)\r\n            return {\r\n                ...state,\r\n                songList: cloneList,\r\n                currentSongExtraInfo: {\r\n                    ...state.currentSongExtraInfo,\r\n                    currentLyric: updateCurrentLyric,\r\n                    currentSongIndex: updateCurrentSongIndex,\r\n                }\r\n            }\r\n        }\r\n        case audioController.PLAY_THE_SONG_IN_PAGE: {\r\n            let songList = state['songList']\r\n            let cloneList = JSON.parse(JSON.stringify(songList))\r\n            let updateCurrentSongIndex = songList.findIndex((song) => song.id === action.songInfo.id)\r\n            let isTheSongNotExisted = updateCurrentSongIndex === -1\r\n            if (isTheSongNotExisted) {\r\n                cloneList.push(action.songInfo)\r\n                saveSongToLocalStorage(action.songInfo)\r\n                updateCurrentSongIndex = cloneList.length - 1\r\n            }\r\n            saveCurrentSongIndexInLocalStorage(updateCurrentSongIndex)\r\n            return {\r\n                ...state,\r\n                songList: cloneList,\r\n                currentSongExtraInfo: {\r\n                    ...state.currentSongExtraInfo,\r\n                    currentSongIndex: updateCurrentSongIndex,\r\n                    currentLyricIndex: -1,\r\n                },\r\n            }\r\n        }\r\n        case audioController.PLAY_THE_SONG_IN_LIST: {\r\n            saveCurrentSongIndexInLocalStorage(action.songIndex)\r\n            return {\r\n                ...state,\r\n                currentSongExtraInfo: {\r\n                    ...state.currentSongExtraInfo,\r\n                    currentSongIndex: action.songIndex,\r\n                    currentLyricIndex: -1,\r\n                    currentLyric: [],\r\n                }\r\n            }\r\n        }\r\n        case audioController.PLAY_NEXT_SONG: {\r\n            let modeType = action.modeType\r\n            let currentSongIndex = state.currentSongExtraInfo.currentSongIndex\r\n            let LengthOfSongList = state.songList.length\r\n            let mapModeTypeToNextStep = {\r\n                loop: action.loopStep,\r\n                circle: 0,\r\n                random: parseInt(LengthOfSongList * Math.random()),\r\n            }\r\n            let step = mapModeTypeToNextStep[modeType]\r\n            let nextSongIndex = (currentSongIndex + step + LengthOfSongList) % LengthOfSongList\r\n            if (currentSongIndex === -1) {\r\n                nextSongIndex = -1\r\n            }\r\n            let currentLyric = []\r\n            if (nextSongIndex === currentSongIndex) {\r\n                currentLyric = state.currentSongExtraInfo.currentLyric\r\n            }\r\n            saveCurrentSongIndexInLocalStorage(nextSongIndex)\r\n            return {\r\n                ...state,\r\n                currentSongExtraInfo: {\r\n                    ...state.currentSongExtraInfo,\r\n                    currentSongIndex: nextSongIndex,\r\n                    currentLyric,\r\n                    currentLyricIndex: -1,\r\n                },\r\n            }\r\n        }\r\n        // case audioController.GET_SONG: {\r\n        //     return {\r\n        //         ...state,\r\n        //         currentSongExtraInfo: {\r\n        //             ...state.currentSongExtraInfo,\r\n        //             url: action.url,\r\n        //         }\r\n        //     }\r\n        // }\r\n        case audioController.GET_LYRIC: {\r\n            return {\r\n                ...state,\r\n                currentSongExtraInfo: {\r\n                    ...state.currentSongExtraInfo,\r\n                    currentLyric: action.lyric,\r\n                },\r\n            }\r\n        }\r\n        case audioController.GET_CURRENT_INDEX: {\r\n            let index = action.currentLyricIndex\r\n            if (index === undefined) {\r\n                console.log('index undefined')\r\n                return {\r\n                    ...state,\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    currentSongExtraInfo: {\r\n                        ...state.currentSongExtraInfo,\r\n                        currentLyricIndex: index,\r\n                    },\r\n                }\r\n            }\r\n        }\r\n        case audioController.CHANGE_PLAY_MODE: {\r\n            return {\r\n                ...state,\r\n                playMode: action.modeType,\r\n            }\r\n        }\r\n        default: {\r\n            return state === undefined ? {} : state\r\n        }\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PlayerApp from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport Store from './Store'\n\nconst app = (\n    <Provider store={Store}>\n        <PlayerApp />\n    </Provider>\n)\n\nconst container = document.getElementById('root')\n\nReactDOM.render(app,container)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}