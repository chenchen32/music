{"version":3,"sources":["Home.js","playListPage/actions.js","playListPage/actionTypes.js","playListPage/views/PlayListItem.js","playListPage/views/PlayList.js","playListPage/status.js","playListPage/views/TagItem.js","playListPage/views/TagSelector.js","playListPage/views/PlayListPage.js","searchPage/actions.js","searchPage/actionTypes.js","searchPage/views/SearchBar.js","utils.js","audioController/actions.js","audioController/actionTypes.js","searchPage/views/SearchItem.js","searchPage/views/SearchList.js","searchPage/views/SearchPage.js","searchPage/status.js","playListPage/views/ModalPortal.js","NotFound.js","Menu.js","audioController/views/AudioController.js","audioController/views/SongItem.js","audioController/views/SongList.js","audioController/views/MusicController.js","Footer.js","App.js","serviceWorker.js","Store.js","searchPage/reducer.js","playListPage/reducer.js","audioController/reducer.js","index.js"],"names":["Home","react_default","a","createElement","Component","playListTagChange","tagName","type","_ajax","method","url","data","dispatch","startAction","callback","r","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","send","PlayListItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","itemInfo","getAlbumInfo","bind","assertThisInitialized","list","split","concat","AlbumId","_this2","fetchAlbumDetailInfo","_this$itemInfo","objectSpread","id","title","coverImgUrl","coverThumbImgUrl","parseImgUrl","className","data-id","onClick","src","alt","connect","console","log","playListResult","JSON","parse","response","result","albumDetailInfo","PlayList","onLoad","query","o","length","forEach","e","_e$split","_e$split2","slicedToArray","k","v","location","search","slice","argsFromQuery","status","activeTag","getPlayListActiveTag","decodeURI","nextProps","nextState","nextContext","fetchHotPlayList","viewBox","cx","cy","fill","map","value","index","views_PlayListItem","key","showHotPlayList","state","theState","PlayListReducer","playListStatus","category","page","arguments","undefined","offset","Number","playListLoadSuccess","withRouter","TagItem","toggleShow","i","rowData","theTagTabs","getClassName","Link","to","tagChange","TagSelector","mainTags","styleTags","languageTags","senceTags","emotionTags","themeTags","mapTagToMain","语种","风格","场景","情感","主题","show","hide","clickOnBlankArea","document","onclick","nativeEvent","stopImmediatePropagation","setState","d","views_TagItem","PlayListPage","views_TagSelector","views_PlayList","inputChange","input","fetchSearchResult","searchResult","searchContent","error","searchStarted","SearchBar","onSearch","onChange","onKeyPress","pathname","searchQuery","parseUrlGetSearchContent","event","target","searchInput","isEqualToOldSearchContent","isAtSearchPage","window","urlObj","getSearchUrl","history","push","name","trim","placeholder","onKeyDown","SearchBarReducer","searchAction","timeFormat","seconds","m","String","Math","floor","s","saveSongToLocalStorage","songInfo","songList","localStorage","getItem","setItem","stringify","getCurrentSongInfo","currentSongIndex","currentSongExtraInfo","initSongInfo","changeAudioStatus","changePlayMode","modeType","saveCurrentLyricIndex","currentLyricIndex","appendTheSong","deleteTheSong","songIndex","playTheSongInPage","playTheSongInList","playNextSong","loopStep","getLyric","lyric","getLyricFromNet","lrcUrl","l","lyricList","lyricsArray","oneLyricString","oneLyric","time","j","timeList","isNaN","lyricItem","parseLyric","actions","SearchItem","handlePlay","handleAppend","handlePause","currentSongId","querySelector","play","pause","AudioStatus","isTheSongPlaying","isOdd","getPlayOrPauseButtonSvg","singer","AudioReducer","SearchList","searchData","views_SearchItem","SearchPage","_searchContent","getSearchContent","_o","views_SearchList","views_SearchBar","showSearchResult","ModalPortal","deleteDetailInfo","descriptionToggle","isAllDescriptionShowed","prevProps","prevState","snapshot","body","albumStatus","classList","add","remove","deleteItemDetail","songListPic","songListName","songListDescription","songListCount","songs","showAlbumList","NotFound","Menu","searchPath","menus","text","href","isCurrent","currentPathname","ownProps","AudioController","currentTime","duration","sliding","hover","audio","React","createRef","playOrPause","clickToSeek","dragToSeek","AfterDragToSeek","handleHover","changeToPlayNextSong","toggleList","current","addEventListener","currentSongInfo","lrc","parseCurrentTimeToGetLyricIndex","playMode","lengthOfSongList","lyricArray","currentLyric","abs","contains","_event$currentTarget$","currentTarget","getBoundingClientRect","left","width","clientX","alert","getLyricIndexWhenJumpSong","_this3","isRunning","isFirstDrag","persist","requestAnimationFrame","seek","_songSlider$getBoundi","dragPosition","toggle","modeList","indexOf","nextModeType","_this4","_this$state","_this$props$currentSo","pic","playModeTitle","loop","circle","random","ref","onMouseOver","onMouseOut","style","draggable","onDrag","onDragEnd","join","getPlayButtonSvg","data-mode","getModeButtonSvg","SongItem","handleDelete","_this$props$songInfo","color","SongList","div","height","scrollTop","picUrl","backgroundImage","views_SongItem","autoScrollLyricList","MusicController","views_AudioController","views_SongList","Footer","App","BrowserRouter","src_Menu","Switch","Route","exact","path","component","src_Footer","audioController_views_MusicController","views_ModalPortal","Boolean","hostname","match","initValue","loadSongListInLocalStorage","reducerObj","action","every","cloneList","listLength","splice","deleteSongInLocalStorage","newSongIndex","isTheSongNotExisted","LengthOfSongList","nextSongIndex","parseInt","reducer","combineReducers","middleware","thunkMiddleware","storeEnhancers","composeWithDevTools","applyMiddleware","apply","Store","createStore","ReactDOM","render","es","store","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fb805060.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass Home extends Component {\n    render() {\n        return (\n            <div>\n                HomePage\n            </div>\n        )\n    }\n}\n\nexport default Home\n","import * as playList from './actionTypes.js'\r\n\r\nexport const playListTagChange = (tagName) => ({\r\n    type: playList.PLAYLIST_TAG_CHANGE,\r\n    tagName\r\n})\r\n\r\nexport const loadItemDetailStarted = () => ({\r\n    type: playList.LOAD_ITEM_DETAIL_STARTED,\r\n})\r\n\r\nexport const loadItemDetailSuccess = (albumDetailInfo) => ({\r\n    type: playList.LOAD_ITEM_DETAIL_SUCCESS,\r\n    albumDetailInfo\r\n})\r\n\r\nexport const deleteItemDetail = () => ({\r\n    type: playList.DELETE_ITEM_DETAIL,\r\n})\r\n\r\nexport const playListLoadStarted = () => ({\r\n    type: playList.PLAYLIST_LOAD_STARTED,\r\n})\r\n\r\nexport const playListLoadSuccess = (playListResult) => ({\r\n    type: playList.PLAYLIST_LOAD_SUCCESS,\r\n    playListResult,\r\n})\r\n\r\nexport const playListLoadFailure = () => ({\r\n    type: playList.PLAYLIST_LOAD_FAILURE,\r\n})\r\n\r\nconst _ajax = function(method, url, data, dispatch, startAction, callback) {\r\n    let r = new XMLHttpRequest()\r\n    r.open(method, url, true)\r\n    r.setRequestHeader('Content-Type', 'application/json')\r\n    r.onreadystatechange = () => {\r\n        if (r.readyState === 4) {\r\n            callback(r)\r\n        }\r\n    }\r\n    r.send(null)\r\n    dispatch(startAction)\r\n}\r\n\r\nexport const fetchHotPlayList = (category=\"全部\", page=1) => {\r\n    let limit = 30\r\n    let offset = (Number(page)- 1) * limit\r\n    return (dispatch) => {\r\n        let method = \"GET\"\r\n        let url = `https://api.bzqll.com/music/netease/hotSongList?key=579621905&cat=${category}&limit=${limit}&offset=${offset}`\r\n        // 如果需要源数据，加上 &isOrigin=1\r\n        let startAction = playListLoadStarted()\r\n        _ajax(method, url, category, dispatch, startAction, (r) => {\r\n            let playListResult = JSON.parse(r.response)\r\n            console.log('加载热门歌单列表完成', playListResult)\r\n            if (playListResult.result === \"SUCCESS\") {\r\n                dispatch(playListLoadSuccess(playListResult))\r\n            } else {\r\n                dispatch(playListLoadFailure())\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const fetchAlbumDetailInfo = (AlbumId) => {\r\n    console.log('AlbumId', AlbumId)\r\n    return (dispatch) => {\r\n        let method = \"GET\"\r\n        let url = `https://api.bzqll.com/music/netease/songList?key=579621905&id=${AlbumId}`\r\n        let data = ''\r\n        let startAction = loadItemDetailStarted()\r\n        _ajax(method, url, data, dispatch, startAction, (r) => {\r\n            let playListResult = JSON.parse(r.response)\r\n            console.log('加载歌单完成', playListResult)\r\n            if (playListResult.result === \"SUCCESS\") {\r\n                dispatch(loadItemDetailSuccess(playListResult))\r\n            }\r\n            // } else {\r\n            //     dispatch(playListLoadFailure())\r\n            // }\r\n        })\r\n    }\r\n}","export const PLAYLIST_TAG_CHANGE = \"PAGE/PLAYLIST_TAG_CHANGE\"\r\n\r\nexport const LOAD_ITEM_DETAIL_STARTED = \"PAGE/LOAD_ITEM_DETAIL_STARTED\"\r\n\r\nexport const LOAD_ITEM_DETAIL_SUCCESS = \"PAGE/LOAD_ITEM_DETAIL_SUCCESS\"\r\n\r\nexport const DELETE_ITEM_DETAIL = 'PAGE/DELETE_ITEM_DETAIL'\r\n\r\nexport const PLAYLIST_LOAD_STARTED = 'PAGE/PLAYLIST_LOAD_STARTED'\r\n\r\nexport const PLAYLIST_LOAD_SUCCESS = 'PAGE/LIST_LOAD_SUCCESS'\r\n\r\nexport const PLAYLIST_LOAD_FAILURE = 'PAGE/PLAYLIST_LOAD_FAILURE'","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {fetchAlbumDetailInfo} from '../actions'\r\n\r\nclass PlayListItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.itemInfo = this.props.itemInfo\r\n        this.getAlbumInfo = this.getAlbumInfo.bind(this)\r\n    }\r\n\r\n    parseImgUrl(url) {\r\n        let list = url.split('?')\r\n        let urlChanged = `${list[0]}?param=400y400`\r\n        return urlChanged\r\n    }\r\n\r\n    getAlbumInfo(AlbumId) {\r\n        return () => {this.props.fetchAlbumDetailInfo(AlbumId)}\r\n    }\r\n\r\n    render() {\r\n        let {id, title, coverImgUrl} = {...this.itemInfo}\r\n        let coverThumbImgUrl = this.parseImgUrl(coverImgUrl)\r\n        return (\r\n            <div className=\"album-container\">\r\n                <div className=\"album-img\" data-id={id} onClick={this.getAlbumInfo(id)}>\r\n                    <img src={coverThumbImgUrl} alt=\"歌单封面\"/>\r\n                </div>\r\n                <div className=\"album-info\" title={title}>\r\n                    <span>{title}</span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchAlbumDetailInfo: (AlbumId) => {\r\n            dispatch(fetchAlbumDetailInfo(AlbumId))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(PlayListItem)","import React, { Component } from 'react'\r\nimport * as Status from \"../status\"\r\nimport {connect} from 'react-redux'\r\nimport {fetchHotPlayList, playListTagChange} from \"../actions\"\r\nimport {withRouter} from 'react-router-dom'\r\nimport PlayListItem from './PlayListItem'\r\n\r\nclass PlayList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.onLoad = this.onLoad.bind(this)\r\n    }\r\n\r\n    argsFromQuery(query) {\r\n        let o = {}\r\n        if (query.length === 0) {\r\n            return o\r\n        }\r\n        query.split('&').forEach(e => {\r\n            let [k, v] = e.split('=')\r\n            o[k] = v\r\n        })\r\n        return o\r\n    }\r\n\r\n    getPlayListActiveTag(location) {\r\n        let path = location.search\r\n        let query = path.slice(1)\r\n        let o = this.argsFromQuery(query)\r\n        let activeTag = o['cat']\r\n        return activeTag\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.status !== 'success') {\r\n            this.onLoad()\r\n            let activeTag = this.getPlayListActiveTag(this.props.location)\r\n            this.props.playListTagChange(decodeURI(activeTag))\r\n        }\r\n    }\r\n\r\n    componentWillUpdate(nextProps, nextState, nextContext) {\r\n        if (this.props.location !== nextProps.location) {\r\n            let activeTag = this.getPlayListActiveTag(nextProps.location)\r\n            this.props.fetchHotPlayList(activeTag, 1)\r\n        }\r\n    }\r\n\r\n    onLoad() {\r\n        let activeTag = this.getPlayListActiveTag(this.props.location)\r\n        this.props.fetchHotPlayList(activeTag, 1)\r\n    }\r\n\r\n    showHotPlayList() {\r\n        switch (this.props.status) {\r\n            case Status.LOADING: {\r\n                return (\r\n                    <div className=\"loading-container\">\r\n                        <svg className=\"load\" viewBox=\"25 25 50 50\">\r\n                            <circle className=\"loading\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\"/>\r\n                        </svg>\r\n                    </div>\r\n                )\r\n            }\r\n            case Status.SUCCESS: {\r\n                let playListResult = this.props.playListResult.data\r\n                return (\r\n                    <div className=\"playlist-result\">\r\n                        {playListResult.map((value, index) => {\r\n                            return <PlayListItem key={index} itemInfo={value} />\r\n                        })}\r\n                    </div>\r\n                )\r\n            }\r\n            case Status.FAILURE: {\r\n                return (\r\n                    <div className=\"failed-container\">热门歌单加载失败</div>\r\n                )\r\n            }\r\n            default: {\r\n                return (\r\n                    <div>PlayList</div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.showHotPlayList()\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateTopProps = (state) => {\r\n    let theState = state.PlayListReducer\r\n    return {\r\n        status: theState.playListStatus,\r\n        playListResult: theState.playListResult,\r\n        activeTag: theState.activeTag,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchHotPlayList: (category, page) => {\r\n            dispatch(fetchHotPlayList(category, page))\r\n        },\r\n        playListTagChange: (tagName) => {\r\n            dispatch(playListTagChange(tagName))\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateTopProps, mapDispatchToProps)(withRouter(PlayList))","export const INIT = ''\r\nexport const LOADING = 'loading'\r\nexport const SUCCESS = 'success'\r\nexport const FAILURE = 'failure'","import React, { Component } from 'react'\r\nimport {Link} from \"react-router-dom\"\r\nimport {connect} from 'react-redux'\r\nimport {playListTagChange} from \"../actions\"\r\n\r\nclass TagItem extends Component {\r\n\r\n    tagChange(value) {\r\n        this.props.playListTagChange(value)\r\n        this.props.toggleShow()\r\n    }\r\n\r\n    getClassName(value) {\r\n        return this.props.activeTag === value ? \"playlist-tag active-tag\" : \"playlist-tag\"\r\n    }\r\n\r\n    getTagTable(i) {\r\n        let rowData = this.props.theTagTabs.slice(i, i + 6)\r\n        return (\r\n            <tbody key={i}>\r\n                <tr>\r\n                    {rowData.map((value, index) => {\r\n                        return (\r\n                            <td key={index} className={this.getClassName(value)}>\r\n                                <Link  to={`/playlist?cat=${value}`} onClick={this.tagChange.bind(this, value)}>{value}</Link>\r\n                            </td>\r\n                        )\r\n                    })}\r\n                </tr>\r\n            </tbody>\r\n         )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"playlist-tag-tabs\">\r\n                {this.props.theTagTabs.map((value, index) => {\r\n                    return (\r\n                            <Link key={index} className={this.getClassName(value)} to={`/playlist?cat=${value}`} onClick={this.tagChange.bind(this, value)}>{value}</Link>\r\n                    )\r\n                })}\r\n                {/*{this.props.theTagTabs.map((value, index) => {*/}\r\n                    {/*if (index % 6 === 0) {*/}\r\n                        {/*return this.getTagTable(index)*/}\r\n                    {/*} else {*/}\r\n                        {/*return false*/}\r\n                    {/*}*/}\r\n                {/*})}*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateTopProps = (state) => {\r\n    let theState = state.PlayListReducer\r\n    return {\r\n        activeTag: theState.activeTag\r\n    }\r\n}\r\n\r\nconst mapDispatchTopProps = (dispatch) => {\r\n    return {\r\n        playListTagChange: (tagName) => {\r\n            dispatch(playListTagChange(tagName))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateTopProps, mapDispatchTopProps)(TagItem)","import React, { Component } from 'react'\r\nimport {playListTagChange} from '../actions'\r\nimport {connect} from 'react-redux'\r\nimport {Link} from \"react-router-dom\"\r\nimport TagItem from './TagItem'\r\n\r\nclass TagSelector extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.mainTags = ['语种', '风格', '场景', '情感', '主题']\r\n        this.styleTags = ['流行', '摇滚', '民谣', '电子', '舞曲', '说唱', '轻音乐', '爵士', '乡村', 'R&B/Soul', '古典', '民族', '英伦', '金属', '朋克', '蓝调', '雷鬼', '拉丁', '古风', 'Bossa Nova']\r\n        this.languageTags = ['华语', '欧美', '日语', '韩语', '粤语', '小语种']\r\n        this.senceTags = ['清晨', '夜晚', '学习', '工作', '午休', '下午茶', '地铁', '驾车', '运动', '旅行', '散步', '酒吧']\r\n        this.emotionTags = ['怀旧', '清新', '浪漫', '性感', '伤感', '治愈', '放松', '孤独', '感动', '兴奋', '快乐', '安静', '思念']\r\n        this.themeTags = ['影视原声', 'ACG', '儿童', '校园', '游戏', '70后', '80后', '90后', '网络歌曲', 'KTV', '经典', '翻唱', '吉他', '钢琴', '器乐', '榜单', '00后']\r\n        this.mapTagToMain = {\r\n            '语种': this.languageTags,\r\n            '风格': this.styleTags,\r\n            '场景': this.senceTags,\r\n            '情感': this.emotionTags,\r\n            '主题': this.themeTags\r\n        }\r\n        this.state = {\r\n            show: false\r\n        }\r\n\r\n        this.toggleShow = this.toggleShow.bind(this)\r\n        this.hide = this.hide.bind(this)\r\n        this.clickOnBlankArea = this.clickOnBlankArea.bind(this)\r\n        document.onclick=this.hide\r\n    }\r\n\r\n    tagChange(value) {\r\n        this.props.playListTagChange(value)\r\n        this.toggleShow()\r\n    }\r\n\r\n    clickOnBlankArea(e) {\r\n        e.nativeEvent.stopImmediatePropagation()\r\n    }\r\n\r\n    toggleShow(e) {\r\n        this.setState({\r\n            show: !this.state.show\r\n        })\r\n        if (e !== undefined) {\r\n            e.nativeEvent.stopImmediatePropagation()\r\n        }\r\n    }\r\n\r\n    hide() {\r\n        this.setState({\r\n            show: false\r\n        })\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        this.setState = () => {\r\n            return 0\r\n        }\r\n    //  防止组件卸载的时候调用 setState 导致 react 报错\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"playlist-tags\">\r\n                <span className=\"active-tag-name\" >{this.props.activeTag}</span>\r\n                <span className=\"select-tag-button\" onClick={this.toggleShow}>\r\n                    {this.state.show ? '收起 ' : '展开 '}\r\n                    <svg className={this.state.show ? \"select-icon rotated\" : \"select-icon\"} viewBox=\"0 0 1024 1024\">\r\n                        <path d=\"M127.5 330.9l0.7-0.7c12.3-12.3 32.4-12.3 44.7 0l339.9 339.9L853 330c12.5-12.5 32.9-12.5 45.4 0s12.5 32.9 0 45.4L536 737.8s-0.1 0.1-0.1 0.2l-0.7 0.7c-12.3 12.3-32.4 12.3-44.7 0l-363-363c-12.3-12.4-12.3-32.5 0-44.8z\">\r\n                        </path>\r\n                    </svg>\r\n                </span>\r\n                <div className={this.state.show ? \"playlist-tags-container\" : \"playlist-tags-container hidden\"} onClick={this.clickOnBlankArea}>\r\n                    <Link className={this.props.activeTag === '全部' ? \"playlist-main-tag active-tag\" : \"playlist-main-tag\"} to={`/playlist?cat=全部`} onClick={this.tagChange.bind(this, '全部')}>全部</Link>\r\n                    {this.mainTags.map((value, index) => {\r\n                        let theTagTabs = this.mapTagToMain[value]\r\n                        return(\r\n                            <div key={index} className=\"playlist-tag-container\">\r\n                                <div className=\"playlist-tag-class\">{value}</div>\r\n                                <TagItem theTagTabs={theTagTabs} toggleShow={this.toggleShow}/>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateTopProps = (state) => {\r\n    let theState = state.PlayListReducer\r\n    return {\r\n        activeTag: theState.activeTag\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        playListTagChange: (tagName) => {\r\n            dispatch(playListTagChange(tagName))\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateTopProps, mapDispatchToProps)(TagSelector)","import React, { Component } from 'react'\nimport PlayList from './PlayList'\nimport TagSelector from \"./TagSelector\"\nimport './playListPage.css'\n\nclass PlayListPage extends Component {\n\n    render() {\n        return (\n            <div className=\"playlist-content\">\n                <TagSelector />\n                <PlayList />\n            </div>\n        )\n    }\n}\n\nexport default PlayListPage\n","import * as search from './actionTypes.js'\r\n\r\nexport const inputChange = (input) => ({\r\n    type: search.INPUT_CHANGE,\r\n    input,\r\n})\r\n\r\nexport const searchStarted = (data) => ({\r\n    type: search.SEARCH_STARTED,\r\n    data,\r\n})\r\n\r\nexport const searchSuccess = (result, searchContent) => ({\r\n    type: search.SEARCH_SUCCESS,\r\n    result,\r\n    searchContent,\r\n})\r\n\r\nexport const searchFailure = (error) => ({\r\n    type: search.SEARCH_FAILURE,\r\n    error,\r\n})\r\n\r\nconst _ajax = function(method, url, data, dispatch) {\r\n    let r = new XMLHttpRequest()\r\n    r.open(method, url, true)\r\n    r.setRequestHeader('Content-Type', 'application/json')\r\n    r.onreadystatechange = () => {\r\n        if (r.readyState === 4) {\r\n            let searchResult = JSON.parse(r.response)\r\n            console.log('搜索完成', searchResult)\r\n            if (searchResult.result === \"SUCCESS\") {\r\n                dispatch(searchSuccess(searchResult, data))\r\n            } else {\r\n                dispatch(searchFailure(searchResult))\r\n            }\r\n        }\r\n    }\r\n    r.send(data)\r\n    dispatch(searchStarted(data))\r\n}\r\n\r\nexport const fetchSearchResult = (input, page=1) => {\r\n    let limit = 20\r\n    let offset = (Number(page)- 1) * limit\r\n    return (dispatch) => {\r\n        let method = \"GET\"\r\n        let url = `https://api.bzqll.com/music/netease/search?key=579621905&s=${input}&type=song&limit=${limit}&offset=${offset}`\r\n        // 如果需要源数据，加上 &isOrigin=1\r\n        _ajax(method, url, input, dispatch)\r\n    }\r\n}","export const INPUT_CHANGE = 'NAV/INPUT_CHANGE'\r\n\r\nexport const SEARCH_STARTED = 'NAV/SEARCH_STARTED'\r\n\r\nexport const SEARCH_SUCCESS = 'NAV/SEARCH_SUCCESS'\r\n\r\nexport const SEARCH_FAILURE = 'NAV/SEARCH_FAILURE'","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport  {inputChange, fetchSearchResult} from '../actions'\r\nimport {withRouter} from \"react-router-dom\"\r\n\r\nclass SearchBar extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.onSearch = this.onSearch.bind(this)\r\n        this.onChange = this.onChange.bind(this)\r\n        this.onKeyPress = this.onKeyPress.bind(this)\r\n    }\r\n\r\n    argsFromQuery(query) {\r\n        let o = {}\r\n        if (query.length === 0) {\r\n            return o\r\n        }\r\n        query.split('&').forEach(e => {\r\n            let [k, v] = e.split('=')\r\n            o[k] = v\r\n        })\r\n        return o\r\n    }\r\n\r\n    parseUrlGetSearchContent(location) {\r\n        if (location.pathname === \"/search\") {\r\n            let searchQuery = location.search.slice(1)\r\n            let searchContent = this.argsFromQuery(searchQuery)\r\n            let value = decodeURI(searchContent['s'])\r\n            if (value !== undefined) {\r\n                return value\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        let location = this.props.location\r\n        this.value = this.parseUrlGetSearchContent(location)\r\n        if (this.value === 'undefined') {\r\n            this.value = ''\r\n        }\r\n    }\r\n\r\n    componentWillUpdate(nextProps, nextState, nextContext) {\r\n        if (nextProps.location.search !== this.props.location.search) {\r\n            let location = nextProps.location\r\n            this.value = this.parseUrlGetSearchContent(location)\r\n        }\r\n        console.log('组件更新了')\r\n    }\r\n\r\n    onChange(event) {\r\n        this.value = event.target.value\r\n        this.props.inputChange(this.value)\r\n    }\r\n\r\n    onSearch() {\r\n        let hasInputted = this.props.searchInput === undefined || this.props.searchInput === ''\r\n        if (hasInputted) {\r\n            return 0\r\n        }\r\n        let isEqualToOldSearchContent = this.props.searchContent !== this.props.searchInput\r\n        let isAtSearchPage = window.location.pathname !== '/search'\r\n        if (isEqualToOldSearchContent || isAtSearchPage) {\r\n            let urlObj = this.getSearchUrl()\r\n            this.props.history.push(urlObj)\r\n            // this.props.searchAction(this.props.searchInput)\r\n        }\r\n    }\r\n\r\n    getSearchUrl() {\r\n        console.log('this.props.searchInput', this.props.searchInput)\r\n        let name = this.props.searchInput.trim()\r\n        if (name === undefined) {\r\n            name = ''\r\n        }\r\n        let page = 1\r\n        let o = {\r\n            pathname: '/search',\r\n            search: `?s=${name}&page=${page}`,\r\n        }\r\n        return o\r\n    }\r\n\r\n    onKeyPress(event) {\r\n        if (event.key === 'Enter') {\r\n            this.onSearch()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className={(this.props.searchResult === undefined) ? \"search-bar-container before-searched\" : \"search-bar-container\"}>\r\n                <input type=\"text\" className=\"search-bar-input\" placeholder=\"搜索音乐、MV、歌单、用户\" onChange={this.onChange} onKeyDown={this.onKeyPress} value={this.value || ''}/>\r\n                <button className=\"search-bar-button\" onClick={this.onSearch}>搜索</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateTopProps = (state) => {\r\n    let theState = state.SearchBarReducer\r\n    return {\r\n        searchInput: theState.searchInput,\r\n        searchContent: theState.searchContent,\r\n        searchResult: theState.searchResult,\r\n        status: theState.status,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        searchAction: (input, page) => {\r\n            dispatch(fetchSearchResult(input, page))\r\n        },\r\n        inputChange:  (input) => {\r\n            dispatch(inputChange(input))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateTopProps, mapDispatchToProps)(withRouter(SearchBar))","export const timeFormat = function(seconds) {\r\n    if (!seconds) {\r\n        return '00:00'\r\n    }\r\n    let m = String(Math.floor(seconds / 60))\r\n    let s = String(Math.floor(seconds % 60))\r\n    if (s.length === 1) {\r\n        s = \"0\" + s\r\n    }\r\n    if (m.length === 1) {\r\n        m = \"0\" + m\r\n    }\r\n    return `${m}:${s}`\r\n}\r\n\r\nexport const loadSongListInLocalStorage = () => {\r\n    let songList = JSON.parse(localStorage.getItem('songList'))\r\n    if (songList === null) {\r\n        songList = []\r\n    }\r\n    return songList\r\n}\r\n\r\nexport const saveSongToLocalStorage = (songInfo) => {\r\n    let songList = JSON.parse(localStorage.getItem('songList'))\r\n    if (songList === null) {\r\n        songList = []\r\n    }\r\n    songList.push(songInfo)\r\n    localStorage.setItem('songList', JSON.stringify(songList))\r\n}\r\n\r\nexport const deleteSongInLocalStorage = (songIndex) => {\r\n    let songList = JSON.parse(localStorage.getItem('songList'))\r\n    songList.splice(songIndex, 1)\r\n    localStorage.setItem('songList', JSON.stringify(songList))\r\n}\r\n\r\nexport const getCurrentSongInfo = (theState) => {\r\n    let songList = theState.songList\r\n    let currentSongIndex = theState.currentSongExtraInfo.currentSongIndex\r\n    let currentSongInfo = {}\r\n    if (currentSongIndex === -1) {\r\n        currentSongInfo = theState.initSongInfo\r\n    } else {\r\n        currentSongInfo = songList[currentSongIndex]\r\n    }\r\n    return currentSongInfo\r\n}","import * as audioController from './actionTypes'\r\n\r\nexport const changeAudioStatus = (status) => {\r\n    return {\r\n        type: audioController.CHANGE_AUDIO_STATUS,\r\n        status\r\n    }\r\n}\r\n\r\nexport const changePlayMode = (modeType) => {\r\n    return {\r\n        type: audioController.CHANGE_PLAY_MODE,\r\n        modeType,\r\n    }\r\n}\r\n\r\nexport const saveCurrentLyricIndex = (currentLyricIndex) => {\r\n    return {\r\n        type: audioController.GET_CURRENT_TIME,\r\n        currentLyricIndex,\r\n    }\r\n}\r\n\r\nexport const appendTheSong = (songInfo) => {\r\n    return {\r\n        type: audioController.APPEND_THE_SONG,\r\n        songInfo,\r\n    }\r\n}\r\n\r\nexport const deleteTheSong = (songIndex) => {\r\n    return {\r\n        type: audioController.DELETE_THE_SONG,\r\n        songIndex,\r\n    }\r\n}\r\n\r\nexport const playTheSongInPage = (songInfo) => {\r\n    return {\r\n        type: audioController.PLAY_THE_SONG_IN_PAGE,\r\n        songInfo,\r\n    }\r\n}\r\n\r\nexport const playTheSongInList = (songIndex) => {\r\n    return {\r\n        type: audioController.PLAY_THE_SONG_IN_LIST,\r\n        songIndex,\r\n    }\r\n}\r\n\r\nexport const playNextSong = (modeType, loopStep=1) => {\r\n    return {\r\n        type: audioController.PLAY_NEXT_SONG,\r\n        modeType,\r\n        loopStep,\r\n    }\r\n}\r\n\r\nexport const getLyric = (lyric) => {\r\n    return {\r\n        type: audioController.GET_LYRIC,\r\n        lyric,\r\n    }\r\n}\r\n\r\nconst _ajax = function(method, url, dispatch, callback) {\r\n    let r = new XMLHttpRequest()\r\n    r.open(method, url, true)\r\n    r.setRequestHeader('Content-Type', 'application/json')\r\n    r.onreadystatechange = () => {\r\n        if (r.readyState === 4) {\r\n            callback(r)\r\n        }\r\n    }\r\n    r.send(null)\r\n}\r\n\r\nconst parseLyric = (lyricsArray) => {\r\n    let result = []\r\n    for (let i = 0; i < lyricsArray.length; i++) {\r\n        let oneLyricString = lyricsArray[i]\r\n        let oneLyric = ''\r\n        let time = -1\r\n        for (let j = 0; j < oneLyricString.length; j++) {\r\n            let e = oneLyricString[j]\r\n            if (e === ']') {\r\n                oneLyric = oneLyricString.slice(j + 1)\r\n                let timeList = oneLyricString.slice(1, j).split(':')\r\n                time = Number(timeList[0]) * 60 + Number(timeList[1])\r\n                break\r\n            }\r\n        }\r\n        if (!isNaN(time)) {\r\n            if (oneLyric === '') {\r\n                oneLyric = '...'\r\n            }\r\n            let lyricItem = [\r\n                time,\r\n                oneLyric,\r\n            ]\r\n            result.push((lyricItem))\r\n        }\r\n    }\r\n    return result\r\n}\r\n\r\nexport const getLyricFromNet = (lrcUrl) => {\r\n    return (dispatch) => {\r\n        let method = 'GET'\r\n        let url = lrcUrl\r\n        _ajax(method, url, dispatch, (r) => {\r\n            let l = r.response\r\n            let lyricList = l.split('\\n').slice(0, -1)\r\n            if (lyricList.length === 0) {\r\n                lyricList = [l]\r\n            }\r\n            console.log('解析歌词开始')\r\n            let result = parseLyric(lyricList)\r\n            console.log('解析歌词结束')\r\n            dispatch(getLyric(result))\r\n        })\r\n    }\r\n}","export const CHANGE_AUDIO_STATUS = 'BAR/CHANGE_AUDIO_STATUS'\r\n\r\nexport const APPEND_THE_SONG = 'PAGE/APPEND_THE_SONG'\r\n\r\nexport const DELETE_THE_SONG = 'AUDIO/DELETE_THE_SONG'\r\n\r\nexport const PLAY_THE_SONG_IN_PAGE = 'PAGE/PLAY_THE_SONG'\r\n\r\nexport const PLAY_THE_SONG_IN_LIST = 'LIST/PLAY_THE_SONG'\r\n\r\nexport const PLAY_NEXT_SONG = 'AUDIO/PLAY_NEXT_SONG'\r\n\r\nexport const GET_LYRIC = 'AUDIO/GET_LYRIC'\r\n\r\nexport const GET_CURRENT_TIME = 'AUDIO/GET_CURRENT_TIME'\r\n\r\nexport const CHANGE_PLAY_MODE = 'AUDIO/CHANGE_PLAY_MODE'","import React, {Component} from 'react'\r\nimport {getCurrentSongInfo, timeFormat} from '../../utils'\r\nimport {connect} from 'react-redux'\r\nimport {actions} from '../../audioController/'\r\n\r\nconst appendTheSong = actions.appendTheSong\r\nconst playTheSongInPage = actions.playTheSongInPage\r\n\r\nclass SearchItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.handlePlay = this.handlePlay.bind(this)\r\n        this.handleAppend = this.handleAppend.bind(this)\r\n        this.handlePause = this.handlePause.bind(this)\r\n    }\r\n\r\n    handlePlay() {\r\n        if (this.props.currentSongId !== this.props.result.id) {\r\n            this.props.playTheSongInPage(this.props.result)\r\n            console.log('this.props.songInfo，第一次放', this.props.songInfo)\r\n        } else {\r\n            let audio = document.querySelector('audio')\r\n            audio.play()\r\n        }\r\n    }\r\n\r\n    handlePause() {\r\n        let audio = document.querySelector('audio')\r\n        audio.pause()\r\n    }\r\n\r\n    getPlayOrPauseButtonSvg() {\r\n        let id = this.props.result.id\r\n        let isTheSongPlaying = (this.props.AudioStatus === 'play') && (this.props.currentSongId === id)\r\n        if (isTheSongPlaying) {\r\n            return (\r\n                <svg className=\"svg-list-icon\" viewBox=\"0 0 1024 1024\">\r\n                    <path d=\"M910.8 303.6c-5.4-10.5-16.3-17.8-28.9-17.8-17.8 0-32.2 14.4-32.2 32.1 0 6 1.7 11.7 4.6 16.5l-0.1 0.1c26.9 52.4 42.1 111.8 42.1 174.7 0 211.6-171.6 383.2-383.2 383.2S129.8 720.8 129.8 509.2 301.4 126.1 513 126.1c62.5 0 121.5 15 173.6 41.5l0.2-0.4c4.6 2.6 10 4.1 15.7 4.1 17.8 0 32.2-14.4 32.2-32.1 0-13.1-7.9-24.4-19.3-29.4C654.6 78.9 585.9 61.5 513 61.5 265.7 61.5 65.3 262 65.3 509.2S265.7 956.9 513 956.9s447.7-200.4 447.7-447.7c0-74.1-18-144-49.9-205.6z\">\r\n                    </path>\r\n                    <path d=\"M385.4 352.2V672c0 17.5 14.3 31.9 31.9 31.9 17.6 0 32-14.4 31.9-31.9V352.2c0-17.5-14.3-31.9-31.9-31.9-17.5 0-31.9 14.3-31.9 31.9zM578.9 352.2V672c0 17.5 14.3 31.9 31.9 31.9 17.5 0 31.9-14.4 31.9-31.9V352.2c0-17.5-14.3-31.9-31.9-31.9-17.5 0-31.9 14.3-31.9 31.9z\">\r\n                    </path>\r\n                    <path d=\"M772.7 217.7a32.2 32.1 0 1 0 64.4 0 32.2 32.1 0 1 0-64.4 0Z\">\r\n                    </path>\r\n                </svg>\r\n            )\r\n        } else {\r\n            return (\r\n                <svg className=\"svg-list-icon\" viewBox=\"0 0 1024 1024\">\r\n                    <path d=\"M772.7 217.7a32.2 32.1 0 1 0 64.4 0 32.2 32.1 0 1 0-64.4 0Z\">\r\n                    </path>\r\n                    <path d=\"M415.8 679.9c5.9 0 11.5-1.6 16.2-4.5l231.1-134.6c10.9-5.2 18.5-16.3 18.5-29.2 0-11.9-6.4-22.3-16-27.8L439.7 352.2c-5.8-6.7-14.4-10.9-23.9-10.9-17.6 0-31.8 14.4-31.8 32.1 0 0.6 0 1.2 0.1 1.8l-0.4 0.2 0.5 269c-0.1 1.1-0.2 2.2-0.2 3.4 0 17.7 14.3 32.1 31.8 32.1z\">\r\n                    </path>\r\n                    <path d=\"M909.8 306.6c-5.4-10.5-16.3-17.8-28.9-17.8-17.8 0-32.2 14.4-32.2 32.1 0 6 1.7 11.7 4.6 16.5l-0.1 0.1c26.9 52.4 42.1 111.8 42.1 174.7 0 211.6-171.6 383.2-383.2 383.2S128.8 723.8 128.8 512.2 300.4 129.1 512 129.1c62.5 0 121.5 15 173.6 41.5l0.2-0.4c4.6 2.6 10 4.1 15.7 4.1 17.8 0 32.2-14.4 32.2-32.1 0-13.1-7.9-24.4-19.3-29.4C653.6 81.9 584.9 64.5 512 64.5 264.7 64.5 64.3 265 64.3 512.2S264.7 959.9 512 959.9s447.7-200.4 447.7-447.7c0-74.1-18-144-49.9-205.6z\">\r\n                    </path>\r\n                </svg>\r\n            )\r\n        }\r\n    }\r\n\r\n    handleAppend() {\r\n        this.props.appendTheSong(this.props.result)\r\n    }\r\n\r\n    render() {\r\n        let result = this.props.result\r\n        let id = this.props.result.id\r\n        let isTheSongPlaying = (this.props.AudioStatus === 'play') && (this.props.currentSongId === id)\r\n        let isOdd = (this.props.index + 1) % 2 !== 0\r\n        return(\r\n            <div className={isOdd ? \"search-item-container odd\" : \"search-item-container\"}>\r\n                <span className=\"search-item-number\">{`${this.props.index + 1}.`}</span>\r\n                <div className=\"search-item-name\">\r\n                    <span className=\"song-name\" title={result.name}>{result.name}</span>\r\n                    <span className=\"search-item-play\" onClick={isTheSongPlaying ? this.handlePause : this.handlePlay}>\r\n                        {this.getPlayOrPauseButtonSvg()}\r\n                    </span>\r\n                    <span className=\"search-item-append\" onClick={this.handleAppend}>\r\n                        <svg className=\"svg-list-icon\" viewBox=\"0 0 1024 1024\">\r\n                        <path d=\"M197.3 197.3c-173.8 173.8-173.8 455.5 0 629.3s455.5 173.8 629.3 0 173.8-455.5 0-629.3-455.5-173.7-629.3 0zM907 512c0 51.3-9.7 101.3-28.9 148.7-19.9 49-49.1 92.9-86.8 130.6s-81.7 66.9-130.6 86.8C613.3 897.3 563.3 907 512 907c-51.3 0-101.3-9.7-148.7-28.9-49-19.9-92.9-49.1-130.6-86.8s-66.9-81.7-86.8-130.6C126.7 613.3 117 563.3 117 512c0-51.3 9.7-101.3 28.9-148.7 19.9-49 49.1-92.9 86.8-130.6s81.7-66.9 130.6-86.8C410.7 126.7 460.7 117 512 117c51.3 0 101.3 9.7 148.7 28.9 49 19.9 92.9 49.1 130.6 86.8s66.9 81.7 86.8 130.6C897.3 410.7 907 460.7 907 512zM537 262v225h225v50H537v225h-50V537H262v-50h225V262h50z\">\r\n                        </path>\r\n                        </svg>\r\n                    </span>\r\n                </div>\r\n                <div className=\"search-item-singer name\">\r\n                    <span title={result.singer}>{result.singer}</span>\r\n                </div>\r\n                <div className=\"search-item-time\">\r\n                    {timeFormat(result.time)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    let theState = state.AudioReducer\r\n    let currentSongInfo = getCurrentSongInfo(theState)\r\n    let currentSongId = currentSongInfo.id\r\n    return {\r\n        AudioStatus: theState.AudioStatus,\r\n        currentSongId: currentSongId,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        appendTheSong: (songInfo) => {\r\n            dispatch(appendTheSong(songInfo))\r\n        },\r\n        playTheSongInPage: (songInfo) => {\r\n            dispatch(playTheSongInPage(songInfo))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchItem)","import React, {Component} from 'react'\r\nimport SearchItem from './SearchItem'\r\nimport {connect} from 'react-redux'\r\n\r\nclass SearchList extends Component {\r\n\r\n    render() {\r\n        let searchData = this.props.searchResult.data\r\n        return(\r\n            <div className=\"search-list-container\">\r\n                <span className=\"search-head-number\">\r\n                </span>\r\n                <div className=\"search-head-container\">\r\n                    <div className=\"search-head-name name\">\r\n                        <span title=\"歌名\">歌曲</span>\r\n                    </div>\r\n                    <div className=\"search-head-singer name\">\r\n                        <span title=\"歌手\">歌手</span>\r\n                    </div>\r\n                    <div className=\"search-head-time\">\r\n                        时长\r\n                    </div>\r\n                </div>\r\n                <div className=\"search-list\">\r\n                {searchData.map((value, index) => (\r\n                    <SearchItem key={index} index={index} result={value}/>\r\n                ))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateTopProps = (state) => {\r\n    let theState = state.SearchBarReducer\r\n    return {\r\n        searchResult: theState.searchResult\r\n    }\r\n}\r\n\r\nexport default connect(mapStateTopProps, null)(SearchList)","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as Status from '../status'\r\nimport {fetchSearchResult, inputChange} from '../actions'\r\nimport SearchBar from './SearchBar'\r\nimport SearchList from './SearchList'\r\nimport './SearchPage.css'\r\n\r\nclass SearchPage extends Component {\r\n    argsFromQuery(query) {\r\n        let o = {}\r\n        if (query.length === 0) {\r\n            return o\r\n        }\r\n        query.split('&').forEach(e => {\r\n            let [k, v] = e.split('=')\r\n            o[k] = v\r\n        })\r\n        return o\r\n    }\r\n\r\n    getSearchContent(location) {\r\n        let searchPath = location.search\r\n        let searchQuery = searchPath.slice(1)\r\n        let searchContent = this.argsFromQuery(searchQuery)\r\n        if (searchContent !== undefined) {\r\n            let {s, page} = {...searchContent}\r\n            return {s, page}\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let o = this.getSearchContent(this.props.location)\r\n        let {s, page} = {...o}\r\n        if (s !== undefined && s !== this.props.searchContent) {\r\n            this.props.searchAction(s, page)\r\n            this.props.inputChange(s)\r\n        }\r\n    }\r\n\r\n    componentWillUpdate(nextProps, nextState, nextContext) {\r\n        if (nextProps.location.search !== this.props.location.search) {\r\n            let location = nextProps.location\r\n            let o = this.getSearchContent(location)\r\n            let {s} = {...o}\r\n            this.props.searchAction(s)\r\n        }\r\n    }\r\n\r\n    showSearchResult() {\r\n        switch (this.props.status) {\r\n            case Status.LOADING: {\r\n                return (\r\n                    <div className=\"loading-container\">\r\n                        <svg className=\"load\" viewBox=\"25 25 50 50\">\r\n                            <circle className=\"loading\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\"/>\r\n                        </svg>\r\n                    </div>\r\n                )\r\n            }\r\n            case Status.SUCCESS: {\r\n                return (\r\n                        <SearchList />\r\n                )\r\n            }\r\n            case Status.FAILURE: {\r\n                return (\r\n                    <div className=\"failed-container\">歌曲搜索失败</div>\r\n                )\r\n            }\r\n            default: {\r\n                return (\r\n                    <div></div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"search-page-content\">\r\n                <SearchBar />\r\n                {this.showSearchResult()}\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateTopProps = (state) => {\r\n    let theState = state.SearchBarReducer\r\n    return {\r\n        status: theState.status,\r\n        searchResult: theState.searchResult,\r\n        searchContent: theState.searchContent,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        searchAction: (input, page) => {\r\n            dispatch(fetchSearchResult(input, page))\r\n        },\r\n        inputChange: (input) => {\r\n            dispatch(inputChange(input))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateTopProps, mapDispatchToProps)(SearchPage)","export const LOADING = 'loading'\r\nexport const SUCCESS = 'success'\r\nexport const FAILURE = 'failure'","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {SearchItem} from \"../../searchPage/\"\r\nimport {deleteItemDetail} from '../actions'\r\nimport * as Status from \"../status\"\r\n\r\nclass ModalPortal extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.deleteDetailInfo = this.deleteDetailInfo.bind(this)\r\n        this.descriptionToggle = this.descriptionToggle.bind(this)\r\n        this.state = {\r\n            isAllDescriptionShowed: false,\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        let body = document.querySelector(\"body\")\r\n        // let musicPlayer = document.querySelector('.music-controller')\r\n        if (this.props.albumStatus !== Status.INIT) {\r\n            body.classList.add('ban-scroll')\r\n            // musicPlayer.classList.add('ban-scrollbar')\r\n        } else {\r\n            body.classList.remove('ban-scroll')\r\n            // musicPlayer.classList.remove('ban-scrollbar')\r\n        }\r\n    }\r\n\r\n    descriptionToggle() {\r\n        this.setState({\r\n            isAllDescriptionShowed: !this.state.isAllDescriptionShowed,\r\n        })\r\n    }\r\n\r\n    deleteDetailInfo() {\r\n        this.props.deleteItemDetail()\r\n        this.setState({\r\n            isAllDescriptionShowed: false,\r\n        })\r\n    }\r\n\r\n    showAlbumList() {\r\n        switch (this.props.albumStatus) {\r\n            case Status.INIT: {\r\n                return null\r\n            }\r\n            case Status.LOADING: {\r\n                return (\r\n                    <div className=\"pop-up\">\r\n                        <div className=\"pop-window\">\r\n                            <span className=\"modal-portal-toggle\" onClick={this.deleteDetailInfo}>×</span>\r\n                            <div className=\"loading-container\">\r\n                                <svg className=\"load\" viewBox=\"25 25 50 50\">\r\n                                    <circle className=\"loading\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\"/>\r\n                                </svg>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            case Status.SUCCESS: {\r\n                let data = this.props.albumDetailInfo.data\r\n                console.log('data', data)\r\n                return (\r\n                    <div className=\"pop-up\">\r\n                        <div className=\"pop-window\">\r\n                            <span className=\"modal-portal-toggle\" onClick={this.deleteDetailInfo}>×</span>\r\n                            <div className=\"album-list-container\">\r\n                                <div className={this.state.isAllDescriptionShowed ? \"album-list-info all-description-showed\" : \"album-list-info\"}>\r\n                                    <img className=\"album-list-bg\" src={data.songListPic} alt=\"专辑图片\"/>\r\n                                    <span className=\"album-list-pic\">\r\n                                        <img src={data.songListPic} alt=\"专辑图片\"/>\r\n                                    </span>\r\n                                    <div className=\"album-list-name\" title={data.songListName}>\r\n                                            {`歌单：${data.songListName}`}\r\n                                    </div>\r\n                                    <p className={this.state.isAllDescriptionShowed ? \"album-list-description all-description-showed\" : \"album-list-description\"}>\r\n                                        <span>介绍：</span><br/>\r\n                                        {`${data.songListDescription}`}\r\n                                    </p>\r\n                                    {/*<p className={this.state.isAllDescriptionShowed ? \"after-description hidden\" : \"after-description\"}>*/}\r\n                                        {/*...*/}\r\n                                    {/*</p>*/}\r\n                                    <span className=\"description-toggle\" onClick={this.descriptionToggle}>{this.state.isAllDescriptionShowed ? '收起' : '展开'}</span>\r\n                                </div>\r\n                                <div className=\"album-list-count\">\r\n                                    {`歌曲列表 (${data.songListCount}首歌)`}\r\n                                </div>\r\n                                <div className=\"album-list-items\">\r\n                                    {data.songs.map((value, index) => {\r\n                                        return <SearchItem key={index} index={index} result={value}/>\r\n                                    })}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            default: {\r\n                return null\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"pop-up-container\">\r\n                {this.showAlbumList()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    let theState = state.PlayListReducer\r\n    return {\r\n        albumDetailInfo: theState.albumDetailInfo,\r\n        albumStatus: theState.albumStatus\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deleteItemDetail: () => {\r\n            dispatch(deleteItemDetail())\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalPortal)","import React, {Component} from 'react'\r\n\r\nclass NotFound extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                NotFound\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NotFound","import React, { Component } from 'react'\nimport { Link, withRouter } from 'react-router-dom'\nimport {connect} from 'react-redux'\n\nclass Menu extends Component {\n    constructor(props) {\n        super(props)\n\n        this.onClick = this.onClick.bind(this)\n    }\n\n    onClick() {\n\n    }\n\n    render() {\n        let searchContent = this.props.searchContent\n        let searchPath = `?s=${searchContent}`\n        if (searchContent === '' || searchContent === undefined) {\n            searchPath = ''\n        }\n        let menus = [\n            {\n                text: '首页',\n                pathname: '/',\n                search: '',\n            },\n            {\n                text: '热门歌单',\n                pathname: `/playlist`,\n                search: `?cat=${this.props.activeTag}`,\n            },\n            {\n                text: '搜索',\n                pathname: `/search`,\n                search: searchPath,\n            },\n        ]\n        return (\n            <nav>\n                <ul className=\"nav-container\">\n                    {\n                        menus.map((e, index) => {\n                                let href = `${e.pathname}${e.search}`\n                                let isCurrent = this.props.currentPathname === e.pathname\n                                // Link 组件相当于 a 标签的作用, to 相当于 href 属性\n                                return (\n                                    <li className=\"nav-item\" key={index}>\n                                        <Link className={isCurrent? \"nav-link nav-link-current\" : \"nav-link\"} to={href}>{e.text}</Link>\n                                    </li>\n                                )\n                            }\n                        )\n                    }\n                </ul>\n            </nav>\n        )\n    }\n}\n\nconst mapStateTopProps = (state, ownProps) => {\n    return {\n        activeTag: state.PlayListReducer.activeTag,\n        searchContent: state.SearchBarReducer.searchContent,\n        currentPathname: ownProps.location.pathname,\n    }\n}\n\nexport default withRouter(connect(mapStateTopProps, null)(Menu))\n","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {changeAudioStatus, getLyricFromNet, saveCurrentLyricIndex, changePlayMode, playNextSong} from \"../actions\"\r\nimport {timeFormat, getCurrentSongInfo} from '../../utils'\r\n\r\nclass AudioController extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            currentTime: null,\r\n            duration: null,\r\n            sliding: false,\r\n            hover: false,\r\n        }\r\n        this.audio = React.createRef()\r\n        this.playOrPause = this.playOrPause.bind(this)\r\n        this.clickToSeek = this.clickToSeek.bind(this)\r\n        this.dragToSeek = this.dragToSeek.bind(this)\r\n        this.AfterDragToSeek = this.AfterDragToSeek.bind(this)\r\n        this.handleHover = this.handleHover.bind(this)\r\n        this.changePlayMode = this.changePlayMode.bind(this)\r\n        this.changeToPlayNextSong = this.changeToPlayNextSong.bind(this)\r\n        this.toggleList = this.toggleList.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        const a = this.audio.current\r\n        a.addEventListener('canplay', () => {\r\n            let lrcUrl = this.props.currentSongInfo.lrc\r\n            this.props.getLyricFromNet(lrcUrl)\r\n            const {currentTime, duration} = a\r\n            this.setState({\r\n                currentTime,\r\n                duration\r\n            })\r\n            console.log('加载完了')\r\n            a.play()\r\n        })\r\n        a.addEventListener('play', () => {\r\n            console.log('在播放了')\r\n            this.props.changeAudioStatus('play')\r\n        })\r\n        a.addEventListener('pause', () => {\r\n            console.log('暂停了一下')\r\n            this.props.changeAudioStatus('pause')\r\n        })\r\n        a.addEventListener('timeupdate', () => {\r\n            if (!this.state.sliding) {\r\n                const {currentTime} = a\r\n                this.setState({\r\n                    currentTime\r\n                })\r\n                this.parseCurrentTimeToGetLyricIndex(currentTime)\r\n            }\r\n        })\r\n        a.addEventListener('ended', () => {\r\n            this.props.playNextSong(this.props.playMode)\r\n            if (this.props.lengthOfSongList === 1 || this.props.playMode === 'circle') {\r\n                a.play()\r\n            }\r\n        })\r\n    }\r\n\r\n    parseCurrentTimeToGetLyricIndex(currentTime) {\r\n        let lyricArray = this.props.currentSongExtraInfo.currentLyric\r\n        for (let i = 0; i < lyricArray.length; i++) {\r\n            let time = lyricArray[i][0]\r\n            if (Math.abs(time - currentTime) < 0.3) {\r\n                this.props.saveCurrentLyricIndex(i)\r\n                break\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getLyricIndexWhenJumpSong(currentTime) {\r\n        let lyricArray = this.props.currentSongExtraInfo.currentLyric\r\n        let index = -1\r\n        for (let i = 0; i < lyricArray.length; i++) {\r\n            let time = lyricArray[i][0]\r\n            if (time > currentTime) {\r\n                index = i - 1\r\n                break\r\n            }\r\n        }\r\n        if (index === -1) {\r\n            index = lyricArray.length - 1\r\n        }\r\n        this.props.saveCurrentLyricIndex(index)\r\n    }\r\n\r\n    playOrPause() {\r\n        if (this.props.currentSongInfo.id === -1) {\r\n            return 0\r\n        }\r\n        const a = this.audio.current\r\n        if (this.props.AudioStatus === 'pause') {\r\n            a.play()\r\n            this.props.changeAudioStatus('play')\r\n        } else {\r\n            a.pause()\r\n            this.props.changeAudioStatus('pause')\r\n        }\r\n    }\r\n\r\n    getPlayButtonSvg() {\r\n        switch (this.props.AudioStatus) {\r\n            case 'play': {\r\n                return (\r\n                    <svg className=\"svg-icon\" viewBox=\"0 0 1024 1024\">\r\n                        <path d=\"M243.2 208h166.4v608H243.2zM614.4 208h166.4v608h-166.4z\">\r\n                        </path>\r\n                    </svg>\r\n                )\r\n            }\r\n            case 'pause': {\r\n                return (\r\n                    <svg className=\"svg-icon\" viewBox=\"0 0 1024 1024\">\r\n                        <path d=\"M289.5 844.3V179.7l445 332.3-445 332.3z\">\r\n                        </path>\r\n                    </svg>\r\n                )\r\n            }\r\n            default: {\r\n                return (\r\n                    <div>default</div>\r\n                )\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    clickToSeek(event) {\r\n        const a = this.audio.current\r\n        let target = event.target\r\n        if (!target.classList.contains('slider-point')) {\r\n            let { left, width } = event.currentTarget.getBoundingClientRect()\r\n            let clickPosition = (event.clientX - left) / width\r\n            let currentTime = clickPosition * a.duration\r\n            if (!isNaN(currentTime)) {\r\n                a.currentTime = currentTime\r\n                this.getLyricIndexWhenJumpSong(currentTime)\r\n            } else {\r\n                alert(`currentTime出现NaN了${currentTime}`)\r\n            }\r\n        }\r\n    }\r\n\r\n    dragToSeek() {\r\n        let isRunning = false\r\n        let isFirstDrag = true\r\n        return (event) => {\r\n            event.persist()\r\n            if (isRunning || isFirstDrag ) {\r\n                isFirstDrag = false\r\n                return\r\n            }\r\n            isRunning = true\r\n            window.requestAnimationFrame(() => {\r\n                this.seek(event)\r\n                isRunning = false\r\n            })\r\n            if (!this.state.sliding) {\r\n                this.setState({\r\n                    sliding: true\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    seek(event) {\r\n        const a = this.audio.current\r\n        let songSlider = document.querySelector('.song-slider')\r\n        let {left, width} = songSlider.getBoundingClientRect()\r\n        let dragPosition = (event.clientX - left) / width\r\n        if (dragPosition >= 0 && dragPosition <= 1) {\r\n            let currentTime = a.duration * dragPosition\r\n            this.setState({\r\n                currentTime\r\n            })\r\n        }\r\n    }\r\n\r\n    AfterDragToSeek() {\r\n        const a = this.audio.current\r\n        a.currentTime = this.state.currentTime\r\n        this.getLyricIndexWhenJumpSong(this.state.currentTime)\r\n        this.setState({\r\n            sliding: false\r\n        })\r\n    }\r\n\r\n    handleHover() {\r\n        this.setState({\r\n            hover: !this.state.hover\r\n        })\r\n    }\r\n\r\n    toggleList() {\r\n        let list = document.querySelector('.song-list')\r\n        list.classList.toggle('hidden')\r\n        let pop = document.querySelector('.pop-up')\r\n        if (pop === null) {\r\n            let body = document.querySelector(\"body\")\r\n            body.classList.toggle('ban-scroll')\r\n        }\r\n        let musicPlayer = document.querySelector('.audio-controller')\r\n        musicPlayer.classList.toggle('playlist-opened')\r\n    }\r\n\r\n    changePlayMode() {\r\n        let modeList = ['loop', 'circle', 'random']\r\n        let index = modeList.indexOf(this.props.playMode)\r\n        let nextIndex = (index + 1) % modeList.length\r\n        let nextModeType = modeList[nextIndex]\r\n        this.props.changePlayMode(nextModeType)\r\n    }\r\n\r\n    getModeButtonSvg() {\r\n        switch (this.props.playMode) {\r\n            case 'loop': {\r\n                return (\r\n                    <svg className=\"svg-icon\" viewBox=\"0 0 1024 1024\">\r\n                        <path d=\"M922 607.1V887H102V157h612.2V58.2l200 125-200 125V207H152v630h720V607.1h50z\">\r\n                        </path>\r\n                    </svg>\r\n                )\r\n            }\r\n            case 'circle': {\r\n                return (\r\n                    <svg className=\"svg-icon\" viewBox=\"0 0 1024 1024\">\r\n                        <path\r\n                            d=\"M922 607.1V887H102V157h612.2V58.2l200 125-200 125V207H152v630h720V607.1h50zM560.5 737.6V306.4h-34c-9.2 18.6-24.8 37.7-46.9 57.4-22.1 19.7-47.9 36.5-77.3 50.4v51c16.4-6.1 34.9-15.1 55.5-27.2s37.3-24.2 50-36.3v336h52.7z\">\r\n                        </path>\r\n                    </svg>\r\n                )\r\n            }\r\n            case 'random': {\r\n                return (\r\n                    <svg className=\"svg-icon\" viewBox=\"0 0 1024 1024\">\r\n                        <path d=\"M726.6 774H594.4L458.8 512l135.6-262h132.2v98.7l200-125-200-125V200H564.4L430.7 457.7 297.4 200h-200v50h169.2l135.9 262-135.9 262H97.4v50h200l133.3-257.7L564.4 824h162.2v101.3l200-125-200-125z\">\r\n                        </path>\r\n                    </svg>\r\n                )\r\n            }\r\n            default: {\r\n                return <div>default</div>\r\n            }\r\n        }\r\n    }\r\n\r\n    changeToPlayNextSong(loopStep) {\r\n        return () => {\r\n            this.props.playNextSong(this.props.playMode, loopStep)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let {currentTime, duration} = this.state\r\n        let {name, singer, pic, url} = this.props.currentSongInfo\r\n        let playMode = this.props.playMode\r\n        let mapEnglishToChinese = {\r\n            loop: '列表循环',\r\n            circle: '单曲循环',\r\n            random: '随机播放',\r\n        }\r\n        let playModeTitle = mapEnglishToChinese[this.props.playMode]\r\n        return (\r\n            <div className=\"audio-controller\">\r\n                <audio src={url} ref={this.audio}>\r\n                </audio>\r\n                <div className=\"album-cover\">\r\n                    <img src={pic} alt=\"专辑图片\" />\r\n                </div>\r\n                <div className=\"extra-info-container\">\r\n                    <div className={this.state.hover? \"song-slider hover\" : \"song-slider\"} onClick={this.clickToSeek} onMouseOver={this.handleHover} onMouseOut={this.handleHover}>\r\n                        <div className=\"slider-bg\">\r\n                        </div>\r\n                        <div className=\"slider-progress\" style={{width: `${ currentTime / duration * 100 }%`}}>\r\n                        <span className=\"slider-point\" draggable=\"true\" onDrag={this.dragToSeek()} onDragEnd={this.AfterDragToSeek}>\r\n                        </span>\r\n                        </div>\r\n                    </div>\r\n                    <span className=\"music-timeline\">\r\n                        <span id=\"music-time-now\">{timeFormat(currentTime)}</span>\r\n                        <span> / </span>\r\n                        <span id=\"music-time-all\">{timeFormat(duration)}</span>\r\n                    </span>\r\n                    <div className=\"song-info\">\r\n                        <div className=\"song-info-name\" title={name}>{name}</div>\r\n                        <div className=\"song-info-singer\" title={singer}>{singer}</div>\r\n                    </div>\r\n                    <div className=\"controller-btn\">\r\n                        <span className=\"back-btn\" title=\"上一首(ctrl+←)\" onClick={this.changeToPlayNextSong(-1)}>\r\n                            <svg className=\"svg-icon\" viewBox=\"0 0 1024 1024\">\r\n                                <path d=\"M362.3 512l445-332.3v664.5L362.3 512zM216.7 179.7h80v664.5h-80V179.7z\">\r\n                                </path>\r\n                            </svg>\r\n                        </span>\r\n                        <span className={[\"play-btn\", this.props.AudioStatus].join(' ')} title=\"播放/暂停(p)\" onClick={this.playOrPause}>\r\n                            {this.getPlayButtonSvg()}\r\n                        </span>\r\n                        <span className=\"next-btn\" title=\"下一首(ctrl+→)\" onClick={this.changeToPlayNextSong(1)}>\r\n                            <svg className=\"svg-icon\" viewBox=\"0 0 1024 1024\">\r\n                                <path d=\"M216.7 844.3V179.7l445 332.3-445 332.3z m590.6 0h-80V179.7h80v664.6z\">\r\n                                </path>\r\n                            </svg>\r\n                        </span>\r\n                        <span className=\"volume-btn icon\">\r\n                            <svg className=\"svg-icon\" viewBox=\"0 0 1024 1024\">\r\n                                <path d=\"M697.5 76l-497 230.6-147.3-20v420l147.3-20 497 230.6V76z m-50 760.7l-424.9-195-13.7-6.8-15.2 2.1-90.6 12.3V343.8l90.6 12.3 15.2 2.1 13.7-6.8 424.9-194.9v680.2zM812 612h-50V412h50v200z m204.7 200h-50V212h50v600zM914.3 712h-50V312h50v400z\">\r\n                                </path>\r\n                            </svg>\r\n                        </span>\r\n                        <span className={`mode-btn icon ${playMode}`} data-mode={playMode} title={playModeTitle} onClick={this.changePlayMode}>\r\n                            {this.getModeButtonSvg()}\r\n                        </span>\r\n                        <span className=\"list-btn icon\" title=\"播放列表\" onClick={this.toggleList}>\r\n                            <svg className=\"svg-icon\" viewBox=\"0 0 1024 1024\">\r\n                                <path d=\"M91.9 165.2h50v50h-50v-50z m150.2 0v50h690v-50h-690zM91.9 429.7h50v-50h-50v50z m150.2 0h690v-50h-690v50zM91.9 644.3h50v-50h-50v50z m150.2 0h690v-50h-690v50zM91.9 858.8h50v-50h-50v50z m150.2 0h690v-50h-690v50z\">\r\n                                </path>\r\n                            </svg>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    let theState = state.AudioReducer\r\n    let currentSongInfo = getCurrentSongInfo(theState)\r\n    let lengthOfSongList = theState.songList.length\r\n    return {\r\n        lengthOfSongList: lengthOfSongList,\r\n        AudioStatus: theState.AudioStatus,\r\n        currentSongInfo: currentSongInfo,\r\n        currentSongExtraInfo: theState.currentSongExtraInfo,\r\n        playMode: theState.playMode,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        changeAudioStatus: (status) => {\r\n            dispatch(changeAudioStatus(status))\r\n        },\r\n        getLyricFromNet: (url) => {\r\n            dispatch(getLyricFromNet(url))\r\n        },\r\n        saveCurrentLyricIndex: (currentLyricIndex) => {\r\n            dispatch(saveCurrentLyricIndex(currentLyricIndex))\r\n        },\r\n        changePlayMode: (modeType) => {\r\n            dispatch(changePlayMode(modeType))\r\n        },\r\n        playNextSong: (modeType, loopStep) => {\r\n            dispatch(playNextSong(modeType, loopStep))\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AudioController)","import React, {Component} from 'react'\r\nimport {timeFormat, getCurrentSongInfo} from '../../utils'\r\nimport {connect} from \"react-redux\"\r\nimport {playTheSongInList, deleteTheSong} from '../actions'\r\n\r\nclass SongItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.handlePlay = this.handlePlay.bind(this)\r\n        this.handlePause = this.handlePause.bind(this)\r\n        this.handleDelete = this.handleDelete.bind(this)\r\n    }\r\n\r\n    handlePlay() {\r\n        if (this.props.currentSongId !== this.props.songInfo.id) {\r\n            this.props.playTheSongInList(this.props.songIndex)\r\n            console.log('this.props.songInfo，第一次放', this.props.songInfo)\r\n        } else {\r\n            let audio = document.querySelector('audio')\r\n            audio.play()\r\n        }\r\n    }\r\n\r\n    handlePause() {\r\n        let audio = document.querySelector('audio')\r\n        audio.pause()\r\n    }\r\n\r\n    getPlayOrPauseButtonSvg() {\r\n        let {id} = this.props.songInfo\r\n        let isTheSongPlaying = (this.props.AudioStatus === 'play') && (this.props.currentSongId === id)\r\n        if (isTheSongPlaying) {\r\n            return (\r\n                <svg className=\"svg-list-icon\" viewBox=\"0 0 1024 1024\">\r\n                    <path d=\"M910.8 303.6c-5.4-10.5-16.3-17.8-28.9-17.8-17.8 0-32.2 14.4-32.2 32.1 0 6 1.7 11.7 4.6 16.5l-0.1 0.1c26.9 52.4 42.1 111.8 42.1 174.7 0 211.6-171.6 383.2-383.2 383.2S129.8 720.8 129.8 509.2 301.4 126.1 513 126.1c62.5 0 121.5 15 173.6 41.5l0.2-0.4c4.6 2.6 10 4.1 15.7 4.1 17.8 0 32.2-14.4 32.2-32.1 0-13.1-7.9-24.4-19.3-29.4C654.6 78.9 585.9 61.5 513 61.5 265.7 61.5 65.3 262 65.3 509.2S265.7 956.9 513 956.9s447.7-200.4 447.7-447.7c0-74.1-18-144-49.9-205.6z\">\r\n                    </path>\r\n                    <path d=\"M385.4 352.2V672c0 17.5 14.3 31.9 31.9 31.9 17.6 0 32-14.4 31.9-31.9V352.2c0-17.5-14.3-31.9-31.9-31.9-17.5 0-31.9 14.3-31.9 31.9zM578.9 352.2V672c0 17.5 14.3 31.9 31.9 31.9 17.5 0 31.9-14.4 31.9-31.9V352.2c0-17.5-14.3-31.9-31.9-31.9-17.5 0-31.9 14.3-31.9 31.9z\">\r\n                    </path>\r\n                    <path d=\"M772.7 217.7a32.2 32.1 0 1 0 64.4 0 32.2 32.1 0 1 0-64.4 0Z\">\r\n                    </path>\r\n                </svg>\r\n            )\r\n        } else {\r\n            return (\r\n                <svg className=\"svg-list-icon\" viewBox=\"0 0 1024 1024\">\r\n                    <path d=\"M772.7 217.7a32.2 32.1 0 1 0 64.4 0 32.2 32.1 0 1 0-64.4 0Z\">\r\n                    </path>\r\n                    <path d=\"M415.8 679.9c5.9 0 11.5-1.6 16.2-4.5l231.1-134.6c10.9-5.2 18.5-16.3 18.5-29.2 0-11.9-6.4-22.3-16-27.8L439.7 352.2c-5.8-6.7-14.4-10.9-23.9-10.9-17.6 0-31.8 14.4-31.8 32.1 0 0.6 0 1.2 0.1 1.8l-0.4 0.2 0.5 269c-0.1 1.1-0.2 2.2-0.2 3.4 0 17.7 14.3 32.1 31.8 32.1z\">\r\n                    </path>\r\n                    <path d=\"M909.8 306.6c-5.4-10.5-16.3-17.8-28.9-17.8-17.8 0-32.2 14.4-32.2 32.1 0 6 1.7 11.7 4.6 16.5l-0.1 0.1c26.9 52.4 42.1 111.8 42.1 174.7 0 211.6-171.6 383.2-383.2 383.2S128.8 723.8 128.8 512.2 300.4 129.1 512 129.1c62.5 0 121.5 15 173.6 41.5l0.2-0.4c4.6 2.6 10 4.1 15.7 4.1 17.8 0 32.2-14.4 32.2-32.1 0-13.1-7.9-24.4-19.3-29.4C653.6 81.9 584.9 64.5 512 64.5 264.7 64.5 64.3 265 64.3 512.2S264.7 959.9 512 959.9s447.7-200.4 447.7-447.7c0-74.1-18-144-49.9-205.6z\">\r\n                    </path>\r\n                </svg>\r\n            )\r\n        }\r\n    }\r\n\r\n    handleDelete(songIndex) {\r\n        return () => {\r\n            this.props.deleteTheSong(songIndex)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let {id, name, singer, time} = this.props.songInfo\r\n        let isTheSongPlaying = (this.props.AudioStatus === 'play') && (this.props.currentSongId === id)\r\n        return (\r\n            <div className=\"song-list-item-container\" style={isTheSongPlaying ? {color: 'rgb(255, 255, 255)'} : {}}>\r\n                <div className=\"song-list-item-name\">\r\n                    <span className=\"song-name\" title={name}>{name}</span>\r\n                    <span className=\"song-list-item-play\" onClick={isTheSongPlaying ? this.handlePause : this.handlePlay}>\r\n                        {this.getPlayOrPauseButtonSvg()}\r\n                    </span>\r\n                    <span className=\"song-list-item-delete\" onClick={this.handleDelete(this.props.songIndex)}>\r\n                        <svg className=\"svg-list-icon\" viewBox=\"0 0 1024 1024\">\r\n                            <path d=\"M897.2 128H578.7c-1.6-34.7-30.2-62.4-65.3-62.4s-63.8 27.7-65.3 62.4h-320c-17.5 0-31.9 14.4-31.9 31.9s14.4 31.9 31.9 31.9H192v639.8c0 70.4 57.6 128 128 128h384.1c70.4 0 128-57.6 128-128V676.2c0.1-1.2 0.2-2.4 0.2-3.6 0.1-17.8-14.4-32.1-32.1-32.1-17.8 0-32.2 14.4-32.2 32.1v159.1c0 35.2-28.8 64-64 64H320c-35.2 0-64-28.8-64-64V191.8h511.9v223.1c0 17.7 14.4 32.1 32.2 32.1s32.2-14.4 32.2-32.1c0-1.2-0.1-2.4-0.2-3.6V191.8h65.1c17.6 0 31.9-14.4 31.9-31.9S914.7 128 897.2 128z\">\r\n                            </path>\r\n                            <path d=\"M386.9 350.6v386.6c0 16.8 13.8 30.6 30.6 30.6s30.6-13.8 30.6-30.5V350.6c0-16.8-13.8-30.6-30.6-30.6s-30.6 13.8-30.6 30.6zM576.7 350.6v386.6c0 16.8 13.8 30.6 30.6 30.6s30.6-13.8 30.6-30.5V350.6c0-16.8-13.8-30.6-30.6-30.6s-30.6 13.8-30.6 30.6z\">\r\n                            </path>\r\n                            <path d=\"M768 543.7a32.2 32.1 0 1 0 64.4 0 32.2 32.1 0 1 0-64.4 0Z\">\r\n                            </path>\r\n                        </svg>\r\n                    </span>\r\n                </div>\r\n                <div className=\"song-list-item-singer name\">\r\n                    <span title={singer}>{singer}</span>\r\n                </div>\r\n                <div className=\"song-list-item-time\">\r\n                    {timeFormat(time)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    let theState = state.AudioReducer\r\n    let currentSongInfo = getCurrentSongInfo(theState)\r\n    let currentSongId = currentSongInfo.id\r\n    return {\r\n        AudioStatus: theState.AudioStatus,\r\n        currentSongId: currentSongId,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        playTheSongInList: (songInfo) => {\r\n            dispatch(playTheSongInList(songInfo))\r\n        },\r\n        deleteTheSong: (songIndex) => {\r\n            dispatch(deleteTheSong(songIndex))\r\n        },\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SongItem)","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport SongItem from './SongItem'\r\nimport {getCurrentSongInfo} from '../../utils'\r\n\r\nclass SongList extends Component {\r\n    autoScrollLyricList(div, currentLyricIndex) {\r\n        if (div !== null) {\r\n            let {height} = div.getBoundingClientRect()\r\n            let i = Math.floor(height / 46 / 2)\r\n            div.scrollTop = currentLyricIndex * 46 - 46 * i\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let {pic} = this.props.currentSongInfo\r\n        let defaultPic = \"http://s4.music.126.net/style/web2/img/default/default_album.jpg\"\r\n        let picUrl = pic || defaultPic\r\n        let lyric = this.props.currentSongExtraInfo.currentLyric\r\n        let currentLyricIndex = this.props.currentSongExtraInfo.currentLyricIndex\r\n        return (\r\n            <div className=\"song-list hidden\">\r\n                <div className=\"song-list-bg\">\r\n                </div>\r\n                <div className=\"song-list-img\" style={{backgroundImage: `url(${picUrl})`}}>\r\n                </div>\r\n                <div className=\"song-list-header\">播放列表</div>\r\n                <div className=\"song-list-container\">\r\n                    <div className=\"song-list-head-container\">\r\n                        <div className=\"song-list-item-name\">\r\n                            <span title=\"\">歌曲</span>\r\n                        </div>\r\n                        <div className=\"song-list-item-singer\">\r\n                            <span title=\"\">歌手</span>\r\n                        </div>\r\n                        <div className=\"song-list-item-time\">时长</div>\r\n                    </div>\r\n                    {this.props.songList.map((value, index) => {\r\n                        return <SongItem key={index} songIndex={index} songInfo={value}/>\r\n                    })}\r\n                </div>\r\n                <div className=\"lyric-list\" ref={(div) => {this.autoScrollLyricList(div, currentLyricIndex)}}>\r\n                    {\r\n                        lyric.map((value, index) => {\r\n                            return <p className={(currentLyricIndex === index)? \"lyric-item active\" : \"lyric-item\"} key={index}>{value[1]}</p>\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    let theState = state.AudioReducer\r\n    let currentSongInfo = getCurrentSongInfo(theState)\r\n    return {\r\n        songList: theState.songList,\r\n        currentSongInfo: currentSongInfo,\r\n        currentSongExtraInfo: theState.currentSongExtraInfo,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(SongList)","import React, {Component} from 'react'\r\nimport AudioController from \"./AudioController\"\r\nimport SongList from \"./SongList\"\r\nimport './MusicController.css'\r\n\r\nclass MusicController extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"music-player\">\r\n                <AudioController />\r\n                <SongList />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MusicController","import React, {Component} from 'react'\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"page-footer\">\r\n                页脚\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer","import React, {Component} from 'react'\n// import a as b from module 相当于给 a 模块起了一个别名 b,\n// 这样在其他地方使用可以直接使用 b 这个变量名\nimport { BrowserRouter as Router, Route, Switch} from \"react-router-dom\"\nimport Home from \"./Home\"\nimport {view as PlayListPage} from \"./playListPage/\"\nimport {ModalPortal} from \"./playListPage/\"\nimport {view as SearchPage} from \"./searchPage/\"\nimport NotFound from \"./NotFound\"\nimport Menu from './Menu'\nimport MusicController from \"./audioController/views/MusicController\"\nimport Footer from './Footer'\nimport './App.css'\n\n\nclass App extends Component {\n\n    render() {\n        return (\n            // BrowserRouter 会使用 HTML5 的 history API 渲染单页路由\n            <Router>\n                <div>\n                    <Menu />\n                {/*Router 只能有一个子元素*/}\n                {/*也可以放一个 Switch 组件*/}\n                    <div className=\"content-container\">\n                        <Switch>\n                            {/*Route 组件用来匹配 location.path 的值, 并且渲染相应的组件 */}\n                            {/*exact 表示路径完全匹配时才算匹配*/}\n                            {/*比如 /todo/1 与 /todo 并不是完全匹配, 与 /todo/:id 完全匹配*/}\n                            <Route exact path=\"/\" component={Home} />\n                            <Route exact path=\"/playlist\" component={PlayListPage} />\n                            <Route exact path=\"/search\" component={SearchPage} />\n                            <Route component={NotFound} />\n                        </Switch>\n                    </div>\n                    <Footer />\n                    <MusicController />\n                    <ModalPortal />\n                </div>\n            </Router>\n        )\n    }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { applyMiddleware, createStore, combineReducers} from 'redux'\r\nimport {reducer as SearchBarReducer} from './searchPage/'\r\nimport {reducer as PlayListReducer} from './playListPage/'\r\nimport {reducer as AudioReducer} from './audioController/'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {loadSongListInLocalStorage} from './utils'\r\n\r\nconst initValue = {\r\n    SearchBarReducer: {\r\n        searchContent: ''\r\n    },\r\n    PlayListReducer: {\r\n        activeTag: '全部',\r\n        albumStatus: '',\r\n        albumDetailInfo: '',\r\n    },\r\n    AudioReducer: {\r\n        AudioStatus: 'pause',\r\n        songList: loadSongListInLocalStorage(),\r\n        currentSongExtraInfo: {\r\n            currentSongIndex: -1,\r\n            currentLyric: [],\r\n            currentLyricIndex: -1,\r\n        },\r\n        playMode: 'loop',\r\n        initSongInfo: {\r\n            id: -1,\r\n            name: '歌曲',\r\n            singer: '歌手',\r\n            lrc: null,\r\n            pic: \"http://s4.music.126.net/style/web2/img/default/default_album.jpg\",\r\n            url: null,\r\n            time: null,\r\n        },\r\n    },\r\n}\r\n\r\nconst reducerObj = {\r\n    SearchBarReducer,\r\n    PlayListReducer,\r\n    AudioReducer,\r\n}\r\n\r\nconst reducer = combineReducers(reducerObj)\r\n\r\nconst middleware = [thunkMiddleware]\r\n\r\nconst storeEnhancers = composeWithDevTools(applyMiddleware(...middleware))\r\n\r\nconst Store = createStore(reducer, initValue, storeEnhancers)\r\n\r\nexport default Store","import * as search from './actionTypes.js'\r\nimport * as Status from './status.js'\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case search.INPUT_CHANGE: {\r\n            return {...state, searchInput: action.input}\r\n        }\r\n        case search.SEARCH_STARTED: {\r\n            return {...state, status: Status.LOADING}\r\n        }\r\n        case search.SEARCH_SUCCESS: {\r\n            return {...state, status: Status.SUCCESS, searchResult: action.result, searchContent: action.searchContent}\r\n        }\r\n        case search.SEARCH_FAILURE: {\r\n            return {status: Status.FAILURE}\r\n        }\r\n        default: {\r\n            return state === undefined ? [] : state\r\n        }\r\n    }\r\n}","import * as playList from './actionTypes.js'\r\nimport * as Status from './status.js'\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case playList.PLAYLIST_TAG_CHANGE: {\r\n            return {...state, activeTag: action.tagName}\r\n        }\r\n        case playList.LOAD_ITEM_DETAIL_STARTED: {\r\n            return {...state, albumStatus: Status.LOADING}\r\n        }\r\n        case playList.LOAD_ITEM_DETAIL_SUCCESS: {\r\n            return {...state, albumStatus: Status.SUCCESS, albumDetailInfo: action.albumDetailInfo}\r\n        }\r\n        case playList.DELETE_ITEM_DETAIL: {\r\n            return{...state, albumStatus: '', albumDetailInfo: ''}\r\n        }\r\n        case playList.PLAYLIST_LOAD_STARTED: {\r\n            return {...state, playListStatus: Status.LOADING}\r\n        }\r\n        case playList.PLAYLIST_LOAD_SUCCESS: {\r\n            return {...state, playListStatus: Status.SUCCESS, playListResult: action.playListResult}\r\n        }\r\n        case playList.PLAYLIST_LOAD_FAILURE: {\r\n            return {playListStatus: Status.FAILURE}\r\n        }\r\n        default: {\r\n            return state === undefined ? {} : state\r\n        }\r\n    }\r\n}","import * as audioController from './actionTypes'\r\nimport {saveSongToLocalStorage, deleteSongInLocalStorage} from \"../utils\"\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case audioController.CHANGE_AUDIO_STATUS: {\r\n            return {...state, AudioStatus: action.status}\r\n        }\r\n        case audioController.APPEND_THE_SONG: {\r\n            let songList = state['songList']\r\n            let isTheSongNotExisted = songList.every((value) => {\r\n                return (value.id !== action.songInfo.id)\r\n            })\r\n            if (isTheSongNotExisted) {\r\n                let cloneList = JSON.parse(JSON.stringify(songList))\r\n                cloneList.push(action.songInfo)\r\n                saveSongToLocalStorage(action.songInfo)\r\n                return {\r\n                    ...state,\r\n                    songList: cloneList,\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state\r\n                }\r\n            }\r\n        }\r\n        case audioController.DELETE_THE_SONG: {\r\n            let songList = state['songList']\r\n            let cloneList = JSON.parse(JSON.stringify(songList))\r\n            let songIndex = action.songIndex\r\n            let currentSongIndex = state.currentSongExtraInfo.currentSongIndex\r\n            let listLength = cloneList.length\r\n            deleteSongInLocalStorage(songIndex)\r\n            cloneList.splice(songIndex, 1)\r\n            if (listLength === 1) {\r\n                return {\r\n                    ...state,\r\n                    songList: [],\r\n                    currentSongExtraInfo: {\r\n                        ...state.currentSongExtraInfo,\r\n                        currentSongIndex: -1,\r\n                    }\r\n                }\r\n            }\r\n            if (currentSongIndex !== songIndex) {\r\n                if (currentSongIndex < songIndex) {\r\n                    return {\r\n                        ...state,\r\n                        songList: cloneList,\r\n                    }\r\n                } else {\r\n                    let newSongIndex = currentSongIndex - 1\r\n                    console.log('删除了前面的歌')\r\n                    return {\r\n                        ...state,\r\n                        songList: cloneList,\r\n                        currentSongExtraInfo: {\r\n                            ...state.currentSongExtraInfo,\r\n                            currentSongIndex: newSongIndex,\r\n                        }\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                if (currentSongIndex !== listLength - 1) {\r\n                    let newSongIndex = currentSongIndex\r\n                    return {\r\n                        ...state,\r\n                        songList: cloneList,\r\n                        currentSongExtraInfo: {\r\n                            ...state.currentSongExtraInfo,\r\n                            currentSongIndex: newSongIndex,\r\n                        }\r\n                    }\r\n                } else {\r\n                    let newSongIndex = currentSongIndex - 1\r\n                    return {\r\n                        ...state,\r\n                        songList: cloneList,\r\n                        currentSongExtraInfo: {\r\n                            ...state.currentSongExtraInfo,\r\n                            currentSongIndex: newSongIndex,\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        case audioController.PLAY_THE_SONG_IN_PAGE: {\r\n            let songList = state['songList']\r\n            let currentSongIndex = -1\r\n            let isTheSongNotExisted = songList.every((value, index) => {\r\n                currentSongIndex = index\r\n                return (value.id !== action.songInfo.id)\r\n            })\r\n            console.log('currentSongIndex', currentSongIndex)\r\n            if (isTheSongNotExisted) {\r\n                let cloneList = JSON.parse(JSON.stringify(songList))\r\n                cloneList.push(action.songInfo)\r\n                saveSongToLocalStorage(action.songInfo)\r\n                return {\r\n                    ...state,\r\n                    songList: cloneList,\r\n                    currentSongExtraInfo: {\r\n                        ...state.currentSongExtraInfo,\r\n                        currentSongIndex: cloneList.length - 1,\r\n                        currentLyricIndex: -1,\r\n                    },\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    currentSongExtraInfo: {\r\n                        ...state.currentSongExtraInfo,\r\n                        currentSongIndex,\r\n                        currentLyricIndex: -1,\r\n                    },\r\n                }\r\n            }\r\n        }\r\n        case audioController.PLAY_THE_SONG_IN_LIST: {\r\n            return {\r\n                ...state,\r\n                currentSongExtraInfo: {\r\n                    ...state.currentSongExtraInfo,\r\n                    currentSongIndex: action.songIndex,\r\n                    currentLyricIndex: -1,\r\n                }\r\n            }\r\n        }\r\n        case audioController.PLAY_NEXT_SONG: {\r\n            let modeType = action.modeType\r\n            let currentSongIndex = state.currentSongExtraInfo.currentSongIndex\r\n            let LengthOfSongList = state.songList.length\r\n            let mapModeTypeToNextStep = {\r\n                loop: action.loopStep,\r\n                circle: 0,\r\n                random: parseInt(LengthOfSongList * Math.random()),\r\n            }\r\n            let step = mapModeTypeToNextStep[modeType]\r\n            let nextSongIndex = (currentSongIndex + step + LengthOfSongList) % LengthOfSongList\r\n            return {\r\n                ...state,\r\n                currentSongExtraInfo: {\r\n                    ...state.currentSongExtraInfo,\r\n                    currentSongIndex: nextSongIndex,\r\n                    currentLyricIndex: -1,\r\n                },\r\n            }\r\n        }\r\n        case audioController.GET_LYRIC: {\r\n            return {\r\n                ...state,\r\n                currentSongExtraInfo: {\r\n                    ...state.currentSongExtraInfo,\r\n                    currentLyric: action.lyric,\r\n                },\r\n            }\r\n        }\r\n        case audioController.GET_CURRENT_TIME: {\r\n            let index = action.currentLyricIndex\r\n            if (index === undefined) {\r\n                return {\r\n                    ...state,\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    currentSongExtraInfo: {\r\n                        ...state.currentSongExtraInfo,\r\n                        currentLyricIndex: index,\r\n                    },\r\n                }\r\n            }\r\n        }\r\n        case audioController.CHANGE_PLAY_MODE: {\r\n            return {\r\n                ...state,\r\n                playMode: action.modeType,\r\n            }\r\n        }\r\n        default: {\r\n            return state === undefined ? {} : state\r\n        }\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PlayerApp from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport Store from './Store'\n\nReactDOM.render(\n    <Provider store={Store}>\n        <PlayerApp />\n    </Provider>,\n    document.getElementById('root')\n    );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}